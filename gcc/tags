!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://darren.hiebert.com/ctags/	/official site/
!_TAG_PROGRAM_VERSION	3.2	/with C, C++, Eiffel, Fortran, and Java  support/
ABBREV_DIE_TABLE_INCREMENT	dwarf2out.c	2358;"	d	file:
ABBREV_SECTION	dwarf2out.c	2645;"	d	file:
ABBREV_SECTION_LABEL	dwarf2out.c	2690;"	d	file:
ABS_OR_RELATIVE_LINENO	xcoffout.c	84;"	d	file:
ABS_VALUE	haifa-sched.c	678;"	d	file:
ADDR_TYPE	reload.c	302;"	d	file:
ADDR_VEC_ALIGN	final.c	834;"	d	file:
AFTER	cppinit.c	/^enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };$/;"	e	file:
ALIAS	c-parse.c	65;"	d	file:
ALIGNOF	c-parse.c	34;"	d	file:
ALIGN_SYMTABLE_OFFSET	mips-tfile.c	3981;"	d	file:
ALLOCNO_LIVE_P	global.c	214;"	d	file:
ALLOC_NESTING	stmt.c	306;"	d	file:
AND	cexp.c	13;"	d	file:
ANDAND	c-parse.c	42;"	d	file:
ANDAND	cppexp.c	85;"	d	file:
ANDAND_PRIO	cppexp.c	665;"	d	file:
AND_PRIO	cppexp.c	668;"	d	file:
ANSI_SYMBOL	fix-header.c	150;"	d	file:
APPEND	cppinit.c	184;"	d	file:
APPEND	cppinit.c	190;"	d	file:
ARANGES_SECTION	dwarf2out.c	2648;"	d	file:
ARANGES_SECTION	dwarfout.c	522;"	d	file:
ARANGE_TABLE_INCREMENT	dwarf2out.c	2410;"	d	file:
ARC_COUNT	profile.c	76;"	d	file:
ARC_SOURCE	profile.c	75;"	d	file:
ARC_TARGET	profile.c	74;"	d	file:
ARGS	enquire.c	374;"	d	file:
ARGS	enquire.c	383;"	d	file:
ARGS1	enquire.c	/^Number Self ARGS1(Number, a)	       {Number r; Store(a,   &r); return (r); }$/;"	f
ARGS1	enquire.c	2170;"	d	file:
ARGS1	enquire.c	2173;"	d	file:
ARGS2	enquire.c	/^Number Diff ARGS2(Number, a, Number, b){Number r; Store(a-b, &r); return (r); }$/;"	f
ARGS2	enquire.c	/^Number Div ARGS2(Number, a, Number, b) {Number r; Store(a\/b, &r); return (r); }$/;"	f
ARGS2	enquire.c	/^Number Mul ARGS2(Number, a, Number, b) {Number r; Store(a*b, &r); return (r); }$/;"	f
ARGS2	enquire.c	/^Number Sum ARGS2(Number, a, Number, b) {Number r; Store(a+b, &r); return (r); }$/;"	f
ARGS2	enquire.c	/^Procedure Store ARGS2(Number, a, Number *, b) { *b=a; }$/;"	f
ARGS2	enquire.c	2171;"	d	file:
ARGS2	enquire.c	2174;"	d	file:
ARG_BASE	cpphash.c	75;"	d	file:
ARG_POINTER_CFA_OFFSET	function.c	2967;"	d	file:
ARITHCOMPARE	c-parse.c	44;"	d	file:
AROUND	cse.c	/^    enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	file:	enum:cse_basic_block_data::branch_path::taken
ASCII	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
ASM_BYTE_OP	dwarf2out.c	227;"	d	file:
ASM_BYTE_OP	dwarfout.c	473;"	d	file:
ASM_COMMENT_START	dwarf2out.c	2195;"	d	file:
ASM_COMMENT_START	dwarf2out.c	77;"	d	file:
ASM_COMMENT_START	dwarfout.c	68;"	d	file:
ASM_COMMENT_START	final.c	122;"	d	file:
ASM_FINAL_SPEC	gcc.c	409;"	d	file:
ASM_FINISH_DECLARE_OBJECT	toplev.c	3524;"	d	file:
ASM_KEYWORD	c-parse.c	32;"	d	file:
ASM_NAME_TO_STRING	dwarf2out.c	2741;"	d	file:
ASM_OUTPUT_CONSTRUCTOR	varasm.c	861;"	d	file:
ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL	dwarf2out.c	455;"	d	file:
ASM_OUTPUT_DESTRUCTOR	varasm.c	864;"	d	file:
ASM_OUTPUT_DWARF_ADDR	dwarf2out.c	340;"	d	file:
ASM_OUTPUT_DWARF_ADDR	dwarf2out.c	418;"	d	file:
ASM_OUTPUT_DWARF_ADDR	dwarfout.c	817;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	dwarf2out.c	351;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	dwarf2out.c	352;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	dwarf2out.c	357;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	dwarfout.c	825;"	d	file:
ASM_OUTPUT_DWARF_ADDR_DATA	dwarf2out.c	392;"	d	file:
ASM_OUTPUT_DWARF_ADDR_DELTA	dwarf2out.c	331;"	d	file:
ASM_OUTPUT_DWARF_ADDR_DELTA	dwarf2out.c	439;"	d	file:
ASM_OUTPUT_DWARF_ATTRIBUTE	dwarfout.c	760;"	d	file:
ASM_OUTPUT_DWARF_DATA	dwarf2out.c	386;"	d	file:
ASM_OUTPUT_DWARF_DATA1	dwarf2out.c	278;"	d	file:
ASM_OUTPUT_DWARF_DATA1	dwarfout.c	842;"	d	file:
ASM_OUTPUT_DWARF_DATA2	dwarf2out.c	376;"	d	file:
ASM_OUTPUT_DWARF_DATA2	dwarfout.c	847;"	d	file:
ASM_OUTPUT_DWARF_DATA4	dwarf2out.c	381;"	d	file:
ASM_OUTPUT_DWARF_DATA4	dwarf2out.c	448;"	d	file:
ASM_OUTPUT_DWARF_DATA4	dwarfout.c	852;"	d	file:
ASM_OUTPUT_DWARF_DATA8	dwarf2out.c	398;"	d	file:
ASM_OUTPUT_DWARF_DATA8	dwarfout.c	857;"	d	file:
ASM_OUTPUT_DWARF_DELTA	dwarf2out.c	322;"	d	file:
ASM_OUTPUT_DWARF_DELTA	dwarf2out.c	445;"	d	file:
ASM_OUTPUT_DWARF_DELTA1	dwarf2out.c	283;"	d	file:
ASM_OUTPUT_DWARF_DELTA2	dwarf2out.c	304;"	d	file:
ASM_OUTPUT_DWARF_DELTA2	dwarf2out.c	427;"	d	file:
ASM_OUTPUT_DWARF_DELTA2	dwarfout.c	728;"	d	file:
ASM_OUTPUT_DWARF_DELTA4	dwarf2out.c	313;"	d	file:
ASM_OUTPUT_DWARF_DELTA4	dwarf2out.c	433;"	d	file:
ASM_OUTPUT_DWARF_DELTA4	dwarfout.c	738;"	d	file:
ASM_OUTPUT_DWARF_FMT_BYTE	dwarfout.c	795;"	d	file:
ASM_OUTPUT_DWARF_FUND_TYPE	dwarfout.c	783;"	d	file:
ASM_OUTPUT_DWARF_OFFSET	dwarf2out.c	369;"	d	file:
ASM_OUTPUT_DWARF_OFFSET	dwarf2out.c	424;"	d	file:
ASM_OUTPUT_DWARF_OFFSET4	dwarf2out.c	362;"	d	file:
ASM_OUTPUT_DWARF_OFFSET4	dwarf2out.c	421;"	d	file:
ASM_OUTPUT_DWARF_REF	dwarfout.c	834;"	d	file:
ASM_OUTPUT_DWARF_STACK_OP	dwarfout.c	772;"	d	file:
ASM_OUTPUT_DWARF_STRING	dwarf2out.c	471;"	d	file:
ASM_OUTPUT_DWARF_STRING_NEWLINE	dwarfout.c	879;"	d	file:
ASM_OUTPUT_DWARF_STRING_NEWLINE	dwarfout.c	882;"	d	file:
ASM_OUTPUT_DWARF_TAG	dwarfout.c	748;"	d	file:
ASM_OUTPUT_DWARF_TYPE_MODIFIER	dwarfout.c	806;"	d	file:
ASM_OUTPUT_LBB	xcoffout.c	112;"	d	file:
ASM_OUTPUT_LBE	xcoffout.c	115;"	d	file:
ASM_OUTPUT_LFB	xcoffout.c	94;"	d	file:
ASM_OUTPUT_LFE	xcoffout.c	106;"	d	file:
ASM_OUTPUT_POP_SECTION	dwarfout.c	723;"	d	file:
ASM_OUTPUT_PUSH_SECTION	dwarfout.c	718;"	d	file:
ASM_OUTPUT_SECTION	dwarf2out.c	273;"	d	file:
ASM_OUTPUT_SOURCE_LINE	xcoffout.c	88;"	d	file:
ASM_SPEC	gcc.c	403;"	d	file:
ASM_STABN_OP	dbxout.c	93;"	d	file:
ASM_STABS_OP	dbxout.c	89;"	d	file:
ASM_STABS_OP	varasm.c	60;"	d	file:
ASSERTION_HASHNODE	cccp.c	/^typedef struct assertion_hashnode ASSERTION_HASHNODE;$/;"	t	file:
ASSERTION_HASHSIZE	cccp.c	746;"	d	file:
ASSIGN	c-parse.c	40;"	d	file:
AT	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
ATTRIBUTE	c-parse.c	35;"	d	file:
ATTRIBUTE_NORETURN	cccp.c	/^void fatal PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	cexp.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	collect2.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	fix-header.c	/^void fatal PVPROTO ((const char *, ...)) ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genattr.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genattrtab.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	gencodes.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genconfig.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genemit.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genextract.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genflags.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genopinit.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genoutput.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genpeep.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
ATTRIBUTE_NORETURN	genrecog.c	/^  ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;$/;"	v
AUX_INFO_SUFFIX	protoize.c	101;"	d	file:
AUX_INFO_SUFFIX	protoize.c	99;"	d	file:
A_ALIAS	c-common.c	/^	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS,$/;"	e	file:	enum:attrs
A_ALIGNED	c-common.c	/^	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,$/;"	e	file:	enum:attrs
A_COMMON	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_CONST	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_CONSTRUCTOR	c-common.c	/^	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,$/;"	e	file:	enum:attrs
A_DESTRUCTOR	c-common.c	/^	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,$/;"	e	file:	enum:attrs
A_ESC	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
A_ESC_DL	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
A_FORMAT	c-common.c	/^	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS,$/;"	e	file:	enum:attrs
A_FORMAT_ARG	c-common.c	/^	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS,$/;"	e	file:	enum:attrs
A_GCC_PACK	c-common.c	/^	    A_NATIVE, A_GCC_PACK,$/;"	e	file:	enum:attrs
A_MODE	c-common.c	/^	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,$/;"	e	file:	enum:attrs
A_NATIVE	c-common.c	/^	    A_NATIVE, A_GCC_PACK,$/;"	e	file:	enum:attrs
A_NOCOMMON	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_NORETURN	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_NO_CHECK_MEMORY_USAGE	c-common.c	/^	    A_NO_CHECK_MEMORY_USAGE, A_NO_INSTRUMENT_FUNCTION,$/;"	e	file:	enum:attrs
A_NO_INSTRUMENT_FUNCTION	c-common.c	/^	    A_NO_CHECK_MEMORY_USAGE, A_NO_INSTRUMENT_FUNCTION,$/;"	e	file:	enum:attrs
A_PACKED	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_SECTION	c-common.c	/^	    A_CONSTRUCTOR, A_DESTRUCTOR, A_MODE, A_SECTION, A_ALIGNED,$/;"	e	file:	enum:attrs
A_T_UNION	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	e	file:	enum:attrs
A_UNUSED	c-common.c	/^	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS,$/;"	e	file:	enum:attrs
A_WEAK	c-common.c	/^	    A_UNUSED, A_FORMAT, A_FORMAT_ARG, A_WEAK, A_ALIAS,$/;"	e	file:	enum:attrs
B	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
B	pself5.c	4;"	d	file:
BASE	fold-const.c	119;"	d	file:
BBINBUFSIZE	libgcc2.c	1742;"	d	file:
BBINBUFSIZESTR	libgcc2.c	1747;"	d	file:
BB_BUCKETS	libgcc2.c	1738;"	d	file:
BB_TO_BLOCK	haifa-sched.c	556;"	d	file:
BITARRAY_SET	stmt.c	4723;"	d	file:
BITARRAY_TEST	stmt.c	4720;"	d	file:
BITFIELD	c-decl.c	/^  BITFIELD,			\/* Likewise but with specified width *\/$/;"	e	file:	enum:decl_context
BITSET_ADD	haifa-sched.c	1285;"	d	file:
BITSET_DIFFER	haifa-sched.c	1271;"	d	file:
BITSET_INTER	haifa-sched.c	1264;"	d	file:
BITSET_INVERT	haifa-sched.c	1278;"	d	file:
BITSET_REMOVE	haifa-sched.c	1295;"	d	file:
BITSET_UNION	haifa-sched.c	1257;"	d	file:
BLOCKAGE_MASK	haifa-sched.c	298;"	d	file:
BLOCKAGE_MASK	sched.c	183;"	d	file:
BLOCKAGE_RANGE	haifa-sched.c	304;"	d	file:
BLOCKAGE_RANGE	sched.c	189;"	d	file:
BLOCK_BEGIN_LABEL	dwarf2out.c	2719;"	d	file:
BLOCK_BEGIN_LABEL_FMT	dwarfout.c	639;"	d	file:
BLOCK_END_LABEL	dwarf2out.c	2722;"	d	file:
BLOCK_END_LABEL_FMT	dwarfout.c	642;"	d	file:
BLOCK_NUM	reg-stack.c	/^BLOCK_NUM(insn)$/;"	f	file:
BLOCK_TO_BB	haifa-sched.c	540;"	d	file:
BODY_BEGIN_LABEL	dwarf2out.c	2725;"	d	file:
BODY_BEGIN_LABEL_FMT	dwarfout.c	687;"	d	file:
BODY_END_LABEL	dwarf2out.c	2728;"	d	file:
BODY_END_LABEL_FMT	dwarfout.c	690;"	d	file:
BOUND_BEGIN_LABEL_FMT	dwarfout.c	669;"	d	file:
BOUND_END_LABEL_FMT	dwarfout.c	672;"	d	file:
BRACKET	cppinit.c	/^enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };$/;"	e	file:
BRACKET	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
BRANCH_COST	fold-const.c	101;"	d	file:
BREAK	c-parse.c	28;"	d	file:
BSS_BEGIN_LABEL	dwarfout.c	597;"	d	file:
BSS_END_LABEL	dwarf2out.c	2713;"	d	file:
BSS_END_LABEL	dwarfout.c	600;"	d	file:
BSS_SECTION	dwarf2out.c	2674;"	d	file:
BSS_SECTION	dwarfout.c	540;"	d	file:
BUF_LEN	haifa-sched.c	5786;"	d	file:
BUILTIN_SETJMP_FRAME_VALUE	expr.c	8516;"	d	file:
C4X	real.c	126;"	d	file:
CALLED_AS_BUILT_IN	expr.c	8729;"	d	file:
CANT_MOVE	haifa-sched.c	468;"	d	file:
CASE	c-parse.c	26;"	d	file:
CASE_VALUES_THRESHOLD	stmt.c	5122;"	d	file:
CASE_VALUES_THRESHOLD	stmt.c	5127;"	d	file:
CASE_VECTOR_PC_RELATIVE	expr.c	70;"	d	file:
CASE_VECTOR_PC_RELATIVE	stmt.c	62;"	d	file:
CC1PLUS_SPEC	gcc.c	427;"	d	file:
CC1_SPEC	gcc.c	421;"	d	file:
CC_STATUS_INIT	final.c	117;"	d	file:
CEIL	expmed.c	48;"	d	file:
CEIL	expr.c	44;"	d	file:
CEIL	stor-layout.c	33;"	d	file:
CEIL_ROUND	function.c	85;"	d	file:
CEIL_ROUND	integrate.c	50;"	d	file:
CHAR	cexp.c	9;"	d	file:
CHAR	cppexp.c	94;"	d	file:
CHARS	dbxout.c	306;"	d	file:
CHAR_BIT	enquire.c	1375;"	d	file:
CHAR_BIT	enquire.c	416;"	d	file:
CHAR_MAX	enquire.c	1378;"	d	file:
CHAR_MAX	enquire.c	417;"	d	file:
CHAR_MIN	enquire.c	1381;"	d	file:
CHAR_MIN	enquire.c	418;"	d	file:
CHAR_TYPE_SIZE	c-decl.c	53;"	d	file:
CHAR_TYPE_SIZE	cexp.c	81;"	d	file:
CHAR_TYPE_SIZE	cppexp.c	36;"	d	file:
CHAR_TYPE_SIZE	dwarf2out.c	130;"	d	file:
CHAR_TYPE_SIZE	dwarfout.c	123;"	d	file:
CHAR_TYPE_SIZE	sdbout.c	125;"	d	file:
CHEAPER	cse.c	1445;"	d	file:
CHEAP_REG	cse.c	489;"	d	file:
CHEAP_REGNO	cse.c	479;"	d	file:
CHECK	mips-tfile.c	1529;"	d	file:
CHECK_DEPTH	cccp.c	331;"	d	file:
CHKR_PREFIX	varasm.c	66;"	d	file:
CHKR_PREFIX	varasm.c	68;"	d	file:
CHKR_PREFIX	varasm.c	71;"	d	file:
CHKR_PREFIX_SIZE	varasm.c	73;"	d	file:
CIE_AFTER_SIZE_LABEL	dwarf2out.c	261;"	d	file:
CIE_END_LABEL	dwarf2out.c	262;"	d	file:
CIE_LENGTH_LABEL	dwarf2out.c	263;"	d	file:
CIE_delta	frame.c	/^  sword CIE_delta;$/;"	m	struct:dwarf_fde
CIE_id	frame.c	/^  sword CIE_id;$/;"	m	struct:dwarf_cie
CLASS	c-parse.c	64;"	d	file:
CLASSNAME	c-parse.c	58;"	d	file:
CLEAR	local-alloc.c	400;"	d	file:
CLEAR_ALLOCNO_LIVE	global.c	220;"	d	file:
CMP_OPCODE	explow.c	1440;"	d	file:
CMP_OPCODE	explow.c	1444;"	d	file:
CODE_MASK	mips-tdump.c	44;"	d	file:
COLLECT	collect2.c	45;"	d	file:
COMBINE_RTX_EQUAL_P	combine.c	3017;"	d	file:
COMMA_PRIO	cppexp.c	662;"	d	file:
COMPARE	cppexp.c	677;"	d	file:
COMP_TYPE_ATTRIBUTES	c-typeck.c	464;"	d	file:
COND_PRIO	cppexp.c	663;"	d	file:
CONFLICTP	global.c	127;"	d	file:
CONSTANT	c-parse.c	13;"	d	file:
CONSTANT_POOL_BEFORE_FUNCTION	varasm.c	941;"	d	file:
CONST_BASED_ADDRESS_P	haifa-sched.c	2389;"	d	file:
CONTAINING_RGN	haifa-sched.c	541;"	d	file:
CONTIN	dbxout.c	316;"	d	file:
CONTIN	dbxout.c	319;"	d	file:
CONTIN	sdbout.c	159;"	d	file:
CONTINUE	c-parse.c	29;"	d	file:
CONTINUED	fix-header.c	/^const char CONTINUED[] = "";$/;"	v
COPYA	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
COPYJ	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
COPYJ2	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
COPY_VA_INT	doprint.c	29;"	d	file:
COST	cse.c	493;"	d	file:
COSTS_N_INSNS	cse.c	748;"	d	file:
CPLUS_FILE_SUFFIX	protoize.c	92;"	d	file:
CPLUS_FILE_SUFFIX	protoize.c	94;"	d	file:
CPP_IS_MACRO_BUFFER	cpphash.c	39;"	d	file:
CPP_IS_MACRO_BUFFER	cpplib.c	37;"	d	file:
CPP_SPEC	gcc.c	415;"	d	file:
CPP_WCHAR_TYPE	cppinit.c	72;"	d	file:
CPTR_T	mips-tdump.c	/^typedef const PTR_T CPTR_T;$/;"	t	file:
CPTR_T	mips-tfile.c	/^typedef const PTR_T CPTR_T;$/;"	t	file:
CSE_ADDRESS_COST	cse.c	529;"	d	file:
CTORS_SECTION_ASM_OP	crtstuff.c	/^asm (CTORS_SECTION_ASM_OP);	\/* cc1 doesn't know that we are switching! *\/$/;"	v
CTORS_SECTION_ASM_OP	crtstuff.c	106;"	d	file:
CUID_INSN	gcse.c	397;"	d	file:
C_ALIAS	mips-tfile.c	/^  C_ALIAS	= 105,$/;"	e	file:	enum:coff_storage
C_ARG	mips-tfile.c	/^  C_ARG		= 9,$/;"	e	file:	enum:coff_storage
C_AUTO	mips-tfile.c	/^  C_AUTO	= 1,$/;"	e	file:	enum:coff_storage
C_BLOCK	mips-tfile.c	/^  C_BLOCK	= 100,$/;"	e	file:	enum:coff_storage
C_EFCN	mips-tfile.c	/^  C_EFCN	= -1,$/;"	e	file:	enum:coff_storage
C_ENTAG	mips-tfile.c	/^  C_ENTAG	= 15,$/;"	e	file:	enum:coff_storage
C_EOS	mips-tfile.c	/^  C_EOS		= 102,$/;"	e	file:	enum:coff_storage
C_EXT	mips-tfile.c	/^  C_EXT		= 2,$/;"	e	file:	enum:coff_storage
C_EXTDEF	mips-tfile.c	/^  C_EXTDEF	= 5,$/;"	e	file:	enum:coff_storage
C_FCN	mips-tfile.c	/^  C_FCN		= 101,$/;"	e	file:	enum:coff_storage
C_FIELD	mips-tfile.c	/^  C_FIELD	= 18,$/;"	e	file:	enum:coff_storage
C_FILE	mips-tfile.c	/^  C_FILE	= 103,$/;"	e	file:	enum:coff_storage
C_HIDDEN	mips-tfile.c	/^  C_HIDDEN	= 106,$/;"	e	file:	enum:coff_storage
C_LABEL	mips-tfile.c	/^  C_LABEL	= 6,$/;"	e	file:	enum:coff_storage
C_LINE	mips-tfile.c	/^  C_LINE	= 104,$/;"	e	file:	enum:coff_storage
C_MAX	mips-tfile.c	/^  C_MAX		= 107$/;"	e	file:	enum:coff_storage
C_MOE	mips-tfile.c	/^  C_MOE		= 16,$/;"	e	file:	enum:coff_storage
C_MOS	mips-tfile.c	/^  C_MOS		= 8,$/;"	e	file:	enum:coff_storage
C_MOU	mips-tfile.c	/^  C_MOU		= 11,$/;"	e	file:	enum:coff_storage
C_NULL	mips-tfile.c	/^  C_NULL	= 0,$/;"	e	file:	enum:coff_storage
C_REG	mips-tfile.c	/^  C_REG		= 4,$/;"	e	file:	enum:coff_storage
C_REGPARM	mips-tfile.c	/^  C_REGPARM	= 17,$/;"	e	file:	enum:coff_storage
C_STAT	mips-tfile.c	/^  C_STAT	= 3,$/;"	e	file:	enum:coff_storage
C_STRTAG	mips-tfile.c	/^  C_STRTAG	= 10,$/;"	e	file:	enum:coff_storage
C_TPDEF	mips-tfile.c	/^  C_TPDEF	= 13,$/;"	e	file:	enum:coff_storage
C_ULABEL	mips-tfile.c	/^  C_ULABEL	= 7,$/;"	e	file:	enum:coff_storage
C_UNTAG	mips-tfile.c	/^  C_UNTAG	= 12,$/;"	e	file:	enum:coff_storage
C_USTATIC	mips-tfile.c	/^  C_USTATIC	= 14,$/;"	e	file:	enum:coff_storage
D1	fp-test.c	/^volatile long double D1 = 1.0, D2 = 1.0, D3 = 1.0;$/;"	v
D2	fp-test.c	/^volatile long double D1 = 1.0, D2 = 1.0, D3 = 1.0;$/;"	v
D3	fp-test.c	/^volatile long double D1 = 1.0, D2 = 1.0, D3 = 1.0;$/;"	v
DATA1_BEGIN_LABEL	dwarfout.c	576;"	d	file:
DATA1_END_LABEL	dwarfout.c	579;"	d	file:
DATA1_SECTION	dwarfout.c	531;"	d	file:
DATA_BEGIN_LABEL	dwarfout.c	569;"	d	file:
DATA_END_LABEL	dwarf2out.c	2710;"	d	file:
DATA_END_LABEL	dwarfout.c	572;"	d	file:
DATA_SECTION	dwarf2out.c	2671;"	d	file:
DATA_SECTION	dwarfout.c	528;"	d	file:
DBX_CONTIN_LENGTH	dbxout.c	312;"	d	file:
DBX_MEMPARM_STABS_LETTER	dbxout.c	118;"	d	file:
DBX_REGPARM_STABS_CODE	dbxout.c	105;"	d	file:
DBX_REGPARM_STABS_LETTER	dbxout.c	109;"	d	file:
DBX_STATIC_CONST_VAR_CODE	dbxout.c	101;"	d	file:
DBX_TYPE_DECL_STABS_CODE	dbxout.c	97;"	d	file:
DEBUGGER_ARG_OFFSET	dbxout.c	202;"	d	file:
DEBUGGER_ARG_OFFSET	sdbout.c	89;"	d	file:
DEBUGGER_AUTO_OFFSET	dbxout.c	195;"	d	file:
DEBUGGER_AUTO_OFFSET	sdbout.c	82;"	d	file:
DEBUG_BEGIN_LABEL	dwarfout.c	614;"	d	file:
DEBUG_INFO_SECTION	dwarf2out.c	2642;"	d	file:
DEBUG_INFO_SECTION_LABEL	dwarf2out.c	2687;"	d	file:
DEBUG_LINE_SECTION	dwarf2out.c	2654;"	d	file:
DEBUG_LINE_SECTION_LABEL	dwarf2out.c	2684;"	d	file:
DEBUG_PRINT_REG	print-rtl.c	34;"	d	file:
DEBUG_SECTION	dwarfout.c	504;"	d	file:
DEC	real.c	118;"	d	file:
DEC	real.c	149;"	d	file:
DECL_DIE_TABLE_INCREMENT	dwarf2out.c	2315;"	d	file:
DECL_NAME_FMT	dwarfout.c	699;"	d	file:
DECL_SCOPE_TABLE_INCREMENT	dwarf2out.c	2343;"	d	file:
DEFAULT	c-parse.c	27;"	d	file:
DEFAULT_GDB_EXTENSIONS	toplev.c	99;"	d	file:
DEFAULT_INIT_PRIORITY	collect2.c	148;"	d	file:
DEFAULT_NATIVE_STRUCT	toplev.c	739;"	d	file:
DEFAULT_PCC_STRUCT_RETURN	toplev.c	451;"	d	file:
DEFAULT_SIZE	hash.c	33;"	d	file:
DEFAULT_SWITCH_CURTAILS_COMPILATION	gcc.c	553;"	d	file:
DEFAULT_SWITCH_TAKES_ARG	cppspec.c	35;"	d	file:
DEFAULT_SWITCH_TAKES_ARG	gcc.c	525;"	d	file:
DEFAULT_WORD_SWITCH_TAKES_ARG	cppspec.c	48;"	d	file:
DEFAULT_WORD_SWITCH_TAKES_ARG	gcc.c	538;"	d	file:
DEFINE_LANG_NAME	toplev.c	1143;"	d	file:
DEFINITION	cccp.c	/^typedef struct definition DEFINITION;$/;"	t	file:
DEFS	c-parse.c	56;"	d	file:
DEFTREECODE	gencheck.c	24;"	d	file:
DEFTREECODE	tree.c	175;"	d	file:
DEFTREECODE	tree.c	180;"	d	file:
DEFTREECODE	tree.c	186;"	d	file:
DEFTREECODE	tree.c	191;"	d	file:
DEFTREECODE	tree.c	195;"	d	file:
DEFTREECODE	tree.c	200;"	d	file:
DEF_MACHMODE	rtl.c	105;"	d	file:
DEF_MACHMODE	rtl.c	111;"	d	file:
DEF_MACHMODE	rtl.c	118;"	d	file:
DEF_MACHMODE	rtl.c	120;"	d	file:
DEF_MACHMODE	rtl.c	59;"	d	file:
DEF_MACHMODE	rtl.c	72;"	d	file:
DEF_MACHMODE	rtl.c	77;"	d	file:
DEF_MACHMODE	rtl.c	83;"	d	file:
DEF_MACHMODE	rtl.c	88;"	d	file:
DEF_MACHMODE	rtl.c	94;"	d	file:
DEF_MACHMODE	rtl.c	99;"	d	file:
DEF_RTL_EXPR	gengenrtl.c	35;"	d	file:
DEF_RTL_EXPR	rtl.c	162;"	d	file:
DEF_RTL_EXPR	rtl.c	164;"	d	file:
DEF_RTL_EXPR	rtl.c	171;"	d	file:
DEF_RTL_EXPR	rtl.c	173;"	d	file:
DEF_RTL_EXPR	rtl.c	48;"	d	file:
DEF_RTL_EXPR	rtl.c	54;"	d	file:
DERIV_BEGIN_LABEL_FMT	dwarfout.c	675;"	d	file:
DERIV_END_LABEL_FMT	dwarfout.c	678;"	d	file:
DF_SIZE	libgcc2.c	1024;"	d	file:
DF_SIZE	libgcc2.c	1029;"	d	file:
DF_SIZE	libgcc2.c	1034;"	d	file:
DFbignan	real.c	/^unsigned EMUSHORT DFbignan[4] = {0x7fff, 0xffff, 0xffff, 0xffff};$/;"	v
DFlittlenan	real.c	/^unsigned EMUSHORT DFlittlenan[4] = {0, 0, 0, 0xfff8};$/;"	v
DFtype	libgcc2.c	/^typedef		float DFtype	__attribute__ ((mode (DF)));$/;"	t	file:
DFtype	libgcc2.c	1145;"	d	file:
DIE_BEGIN_LABEL_FMT	dwarfout.c	627;"	d	file:
DIE_END_LABEL_FMT	dwarfout.c	630;"	d	file:
DIFFERENT_ALIAS_SETS_P	alias.c	101;"	d	file:
DIR_SEPARATOR	cccp.c	56;"	d	file:
DIR_SEPARATOR	gcc.c	66;"	d	file:
DIR_SEPARATOR	protoize.c	65;"	d	file:
DIR_SEPARATOR	toplev.c	136;"	d	file:
DIR_UP	gcc.c	81;"	d	file:
DI_SIZE	libgcc2.c	1008;"	d	file:
DIstruct	libgcc2.c	/^  struct DIstruct {SItype high, low;};$/;"	s	file:
DIstruct	libgcc2.c	/^  struct DIstruct {SItype low, high;};$/;"	s	file:
DItype	libgcc2.c	/^typedef		 int DItype	__attribute__ ((mode (DI)));$/;"	t	file:
DItype	libgcc2.c	1142;"	d	file:
DIunion	libgcc2.c	/^} DIunion;$/;"	t	file:
DO	c-parse.c	23;"	d	file:
DOLLAR	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
DOLLARS_IN_IDENTIFIERS	c-decl.c	597;"	d	file:
DOMAIN	real.c	1461;"	d	file:
DONE_PRIORITY	haifa-sched.c	312;"	d	file:
DONE_PRIORITY	sched.c	197;"	d	file:
DONE_PRIORITY_P	haifa-sched.c	316;"	d	file:
DONE_PRIORITY_P	sched.c	201;"	d	file:
DOUBLE_TYPE_SIZE	c-decl.c	81;"	d	file:
DOUBLE_TYPE_SIZE	dwarfout.c	155;"	d	file:
DOUBLE_TYPE_SIZE	emit-rtl.c	3658;"	d	file:
DOUBLE_TYPE_SIZE	sdbout.c	149;"	d	file:
DO_PROTO	cccp.c	/^  int (*func) DO_PROTO;	\/* Function to handle directive *\/$/;"	m	struct:directive
DO_PROTO	cccp.c	/^static int do_assert DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_define DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_elif DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_else DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_endif DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_error DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_ident DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_if DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_include DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_line DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_pragma DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_sccs DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_unassert DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_undef DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_warning DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	/^static int do_xifdef DO_PROTO;$/;"	v	file:
DO_PROTO	cccp.c	755;"	d	file:
DTORS_SECTION_ASM_OP	crtstuff.c	/^asm (DTORS_SECTION_ASM_OP);	\/* cc1 doesn't know that we are switching! *\/$/;"	v
DTORS_SECTION_ASM_OP	crtstuff.c	109;"	d	file:
DT_ARY	mips-tfile.c	/^  DT_ARY	= 3,$/;"	e	file:	enum:coff_dt
DT_FCN	mips-tfile.c	/^  DT_FCN	= 2,$/;"	e	file:	enum:coff_dt
DT_MAX	mips-tfile.c	/^  DT_MAX	= 4$/;"	e	file:	enum:coff_dt
DT_NON	mips-tfile.c	/^  DT_NON	= 0,$/;"	e	file:	enum:coff_dt
DT_PTR	mips-tfile.c	/^  DT_PTR	= 1,$/;"	e	file:	enum:coff_dt
DWARF_ARANGES_HEADER_SIZE	dwarf2out.c	2236;"	d	file:
DWARF_CIE_DATA_ALIGNMENT	dwarf2out.c	152;"	d	file:
DWARF_CIE_DATA_ALIGNMENT	dwarf2out.c	154;"	d	file:
DWARF_COMPILE_UNIT_HEADER_SIZE	dwarf2out.c	2227;"	d	file:
DWARF_FRAME_REGNUM	dwarf2out.c	508;"	d	file:
DWARF_FRAME_RETURN_COLUMN	dwarf2out.c	499;"	d	file:
DWARF_FRAME_RETURN_COLUMN	dwarf2out.c	501;"	d	file:
DWARF_LINE_BASE	dwarf2out.c	2252;"	d	file:
DWARF_LINE_DEFAULT_IS_STMT_START	dwarf2out.c	2264;"	d	file:
DWARF_LINE_MIN_INSTR_LENGTH	dwarf2out.c	2247;"	d	file:
DWARF_LINE_OPCODE_BASE	dwarf2out.c	2255;"	d	file:
DWARF_LINE_PROLOG_HEADER_SIZE	dwarf2out.c	2230;"	d	file:
DWARF_LINE_RANGE	dwarf2out.c	2258;"	d	file:
DWARF_OFFSET_SIZE	dwarf2out.c	141;"	d	file:
DWARF_PUBNAMES_HEADER_SIZE	dwarf2out.c	2233;"	d	file:
DWARF_ROUND	dwarf2out.c	147;"	d	file:
DWARF_VERSION	dwarf2out.c	144;"	d	file:
DWORD_ALIGN	mips-tfile.c	901;"	d	file:
DW_FORM_data	dwarf2out.c	231;"	d	file:
DW_FORM_ref	dwarf2out.c	232;"	d	file:
DW_MACINFO_SECTION	dwarf2out.c	2651;"	d	file:
D_CHAR_BIT	enquire.c	322;"	d	file:
D_CHAR_MAX	enquire.c	323;"	d	file:
D_CHAR_MIN	enquire.c	324;"	d	file:
D_DIG	enquire.c	336;"	d	file:
D_EPSILON	enquire.c	342;"	d	file:
D_FLT_RADIX	enquire.c	334;"	d	file:
D_FLT_ROUNDS	enquire.c	333;"	d	file:
D_INT_MAX	enquire.c	329;"	d	file:
D_INT_MIN	enquire.c	330;"	d	file:
D_MANT_DIG	enquire.c	335;"	d	file:
D_MAX	enquire.c	341;"	d	file:
D_MAX_10_EXP	enquire.c	340;"	d	file:
D_MAX_EXP	enquire.c	339;"	d	file:
D_MIN	enquire.c	343;"	d	file:
D_MIN_10_EXP	enquire.c	338;"	d	file:
D_MIN_EXP	enquire.c	337;"	d	file:
D_SCHAR_MAX	enquire.c	325;"	d	file:
D_SCHAR_MIN	enquire.c	326;"	d	file:
D_UCHAR_MAX	enquire.c	327;"	d	file:
D_UINT_MAX	enquire.c	331;"	d	file:
Diff	enquire.c	1703;"	d	file:
Diff	enquire.c	1759;"	d	file:
Diff	enquire.c	1845;"	d	file:
Diff	enquire.c	1933;"	d	file:
Div	enquire.c	1705;"	d	file:
Div	enquire.c	1761;"	d	file:
Div	enquire.c	1847;"	d	file:
Div	enquire.c	1935;"	d	file:
E	real.c	317;"	d	file:
EDGE_TO_BIT	haifa-sched.c	663;"	d	file:
EE_BEGIN_LABEL_FMT	dwarfout.c	651;"	d	file:
EE_END_LABEL_FMT	dwarfout.c	654;"	d	file:
EH_FRAME_SECTION	dwarf2out.c	1678;"	d	file:
EH_FRAME_SECTION	dwarf2out.c	1681;"	d	file:
EH_FRAME_SECTION	dwarf2out.c	1691;"	d	file:
EH_FRAME_SECTION_ASM_OP	crtstuff.c	/^asm (EH_FRAME_SECTION_ASM_OP);$/;"	v
EH_FRAME_SECTION_ASM_OP	crtstuff.c	112;"	d	file:
ELLIPSIS	c-parse.c	15;"	d	file:
ELSE	c-parse.c	21;"	d	file:
EMPTY	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
EMULONG	real.c	213;"	d	file:
EMULONG	real.c	216;"	d	file:
EMULONG	real.c	219;"	d	file:
EMULONG	real.c	222;"	d	file:
EMULONG_SIZE	real.c	188;"	d	file:
EMULONG_SIZE	real.c	193;"	d	file:
EMULONG_SIZE	real.c	198;"	d	file:
EMULONG_SIZE	real.c	203;"	d	file:
EMUSHORT	real.c	186;"	d	file:
EMUSHORT	real.c	191;"	d	file:
EMUSHORT	real.c	196;"	d	file:
EMUSHORT	real.c	201;"	d	file:
EMUSHORT_SIZE	real.c	187;"	d	file:
EMUSHORT_SIZE	real.c	192;"	d	file:
EMUSHORT_SIZE	real.c	197;"	d	file:
EMUSHORT_SIZE	real.c	202;"	d	file:
EMU_NON_COMPILE	real.c	206;"	d	file:
EMU_NON_COMPILE	real.c	225;"	d	file:
EMU_NON_COMPILE	real.c	234;"	d	file:
ENCODE	c-parse.c	57;"	d	file:
ENCODE_BLOCKAGE	haifa-sched.c	299;"	d	file:
ENCODE_BLOCKAGE	sched.c	184;"	d	file:
END	c-parse.c	54;"	d	file:
ENDFILE	c-lex.c	910;"	d	file:
ENDFILE_SPEC	gcc.c	466;"	d	file:
ENT	doschk.c	/^typedef struct ENT$/;"	s	file:
ENT	doschk.c	/^} ENT;$/;"	t	file:
ENUM	c-parse.c	17;"	d	file:
EPROP	enquire.c	/^Procedure EPROP(fprec, dprec, lprec) int fprec, dprec, lprec; {$/;"	f
EPROP	enquire.c	/^Procedure EPROP(fprec, dprec, lprec) int fprec, dprec, lprec; {}$/;"	f
EPROP	enquire.c	1715;"	d	file:
EPROP	enquire.c	1775;"	d	file:
EPROP	enquire.c	1861;"	d	file:
EPROP	enquire.c	1943;"	d	file:
EQCOMPARE	c-parse.c	43;"	d	file:
EQUAL	cexp.c	14;"	d	file:
EQUAL	cppexp.c	86;"	d	file:
EQUAL_PRIO	cppexp.c	669;"	d	file:
EQ_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
ERROR	cexp.c	11;"	d	file:
ERROR	cppexp.c	83;"	d	file:
ERROR	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
ESCAPE	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
EXACT_POWER_OF_2_OR_ZERO_P	expmed.c	2878;"	d	file:
EXCESS	floatlib.c	58;"	d	file:
EXCESSD	floatlib.c	67;"	d	file:
EXCHANGE	local-alloc.c	1327;"	d	file:
EXCHANGE	local-alloc.c	1376;"	d	file:
EXECUTABLE_SUFFIX	gcc.c	50;"	d	file:
EXE_BSUN	enquire.c	556;"	d	file:
EXE_DZ	enquire.c	551;"	d	file:
EXE_INEX1	enquire.c	549;"	d	file:
EXE_INEX2	enquire.c	550;"	d	file:
EXE_OPERR	enquire.c	554;"	d	file:
EXE_OVFL	enquire.c	553;"	d	file:
EXE_SNAN	enquire.c	555;"	d	file:
EXE_UNFL	enquire.c	552;"	d	file:
EXIT_IGNORE_STACK	flow.c	145;"	d	file:
EXONE	real.c	331;"	d	file:
EXP	floatlib.c	62;"	d	file:
EXPD	floatlib.c	69;"	d	file:
EXTENSION	c-parse.c	36;"	d	file:
EXTRA_SECTIONS	varasm.c	/^  , EXTRA_SECTIONS$/;"	e	file:	enum:in_section
EXT_BITS	enquire.c	543;"	d	file:
F	enquire.c	/^    F= 0,	\/* produce float.h  *\/$/;"	v
FAKE_CONST	cppinit.c	24;"	d	file:
FDE_AFTER_SIZE_LABEL	dwarf2out.c	264;"	d	file:
FDE_END_LABEL	dwarf2out.c	265;"	d	file:
FDE_LENGTH_LABEL	dwarf2out.c	266;"	d	file:
FDE_TABLE_INCREMENT	dwarf2out.c	169;"	d	file:
FED_BY_SPEC_LOAD	haifa-sched.c	2385;"	d	file:
FFS	toplev.c	28;"	d	file:
FIELD	c-decl.c	/^  FIELD,			\/* Declaration inside struct or union *\/$/;"	e	file:	enum:decl_context
FILENAME	enquire.c	303;"	d	file:
FILENAME	enquire.c	306;"	d	file:
FILENAME	enquire.c	308;"	d	file:
FILE_ASM_OP	dwarfout.c	461;"	d	file:
FILE_BUF	cccp.c	/^typedef struct file_buf FILE_BUF;$/;"	t	file:
FILE_FUNCTION_FORMAT	tree.c	4833;"	d	file:
FILE_FUNCTION_FORMAT	tree.c	4836;"	d	file:
FILE_FUNCTION_FORMAT	tree.c	4838;"	d	file:
FILE_FUNCTION_PREFIX_LEN	tree.c	4830;"	d	file:
FILE_NAME_JOINER	dbxout.c	122;"	d	file:
FILE_NAME_MAP_FILE	cccp.c	4916;"	d	file:
FILE_NAME_MAP_FILE	cppfiles.c	422;"	d	file:
FILE_TABLE_INCREMENT	dwarf2out.c	2289;"	d	file:
FINI_NAME_FORMAT	collect2.c	2042;"	d	file:
FIRST_INSN_ADDRESS	final.c	966;"	d	file:
FIXED_BASE_PLUS_P	cse.c	595;"	d	file:
FIXED_BASE_PLUS_P	integrate.c	1320;"	d	file:
FIXED_REGNO_P	cse.c	464;"	d	file:
FIXED_REGNO_P	cse.c	469;"	d	file:
FLDI	emit-rtl.c	100;"	d	file:
FLDI	emit-rtl.c	98;"	d	file:
FLOAT	toplev.c	27;"	d	file:
FLOATIFY	libgcc1.c	230;"	d	file:
FLOAT_ARG_TYPE	libgcc1.c	234;"	d	file:
FLOAT_TYPE_SIZE	c-decl.c	77;"	d	file:
FLOAT_TYPE_SIZE	dwarfout.c	151;"	d	file:
FLOAT_TYPE_SIZE	sdbout.c	145;"	d	file:
FLOAT_VALUE_TYPE	libgcc1.c	222;"	d	file:
FLOOR_ROUND	function.c	81;"	d	file:
FNAME_HASHSIZE	cccp.c	6791;"	d	file:
FOLLOW_BACK_EDGES	gcse.c	175;"	d	file:
FOR	c-parse.c	24;"	d	file:
FORBIDDEN_INC_DEC_CLASSES	regclass.c	53;"	d	file:
FORCE_TEXT	dbxout.c	161;"	d	file:
FORCE_TEXT	dbxout.c	163;"	d	file:
FORWARD	cpphash.c	40;"	d	file:
FORWARD	cpplib.c	32;"	d	file:
FOUR	enquire.c	1711;"	d	file:
FOUR	enquire.c	1767;"	d	file:
FOUR	enquire.c	1853;"	d	file:
FOUR	enquire.c	1923;"	d	file:
FPROP	enquire.c	/^int FPROP(bits_per_byte) int bits_per_byte; { return 0; }$/;"	f
FPROP	enquire.c	/^int FPROP(bits_per_byte) int bits_per_byte; {$/;"	f
FPROP	enquire.c	1699;"	d	file:
FPROP	enquire.c	1756;"	d	file:
FPROP	enquire.c	1842;"	d	file:
FPROP	enquire.c	1930;"	d	file:
FP_MODE_REG	reg-stack.c	228;"	d	file:
FP_mode_reg	reg-stack.c	/^  FP_mode_reg[LAST_STACK_REG+1-FIRST_STACK_REG][(int) MAX_MACHINE_MODE];$/;"	v	file:
FRAME_SECTION	dwarf2out.c	252;"	d	file:
FREAD	collect2.c	94;"	d	file:
FROM_BLOCK	haifa-sched.c	483;"	d	file:
FT_ENTRIES_INCREMENT	dwarfout.c	189;"	d	file:
FUNCDEF	c-decl.c	/^  FUNCDEF,			\/* Function definition *\/$/;"	e	file:	enum:decl_context
FUNC_BEGIN_LABEL	dwarf2out.c	256;"	d	file:
FUNC_END_LABEL	dwarf2out.c	259;"	d	file:
FUNC_END_LABEL_FMT	dwarfout.c	693;"	d	file:
FWRITE	collect2.c	95;"	d	file:
F_DIG	enquire.c	1721;"	d	file:
F_DIG	enquire.c	1806;"	d	file:
F_DIG	enquire.c	1887;"	d	file:
F_DIG	enquire.c	1971;"	d	file:
F_DIG	enquire.c	2016;"	d	file:
F_EPSILON	enquire.c	1723;"	d	file:
F_EPSILON	enquire.c	1812;"	d	file:
F_EPSILON	enquire.c	1890;"	d	file:
F_EPSILON	enquire.c	1974;"	d	file:
F_EPSILON	enquire.c	2022;"	d	file:
F_MANT_DIG	enquire.c	1720;"	d	file:
F_MANT_DIG	enquire.c	1803;"	d	file:
F_MANT_DIG	enquire.c	1884;"	d	file:
F_MANT_DIG	enquire.c	1968;"	d	file:
F_MANT_DIG	enquire.c	2013;"	d	file:
F_MAX	enquire.c	1728;"	d	file:
F_MAX	enquire.c	1827;"	d	file:
F_MAX	enquire.c	1905;"	d	file:
F_MAX	enquire.c	1989;"	d	file:
F_MAX	enquire.c	2037;"	d	file:
F_MAX_10_EXP	enquire.c	1729;"	d	file:
F_MAX_10_EXP	enquire.c	1830;"	d	file:
F_MAX_10_EXP	enquire.c	1908;"	d	file:
F_MAX_10_EXP	enquire.c	1992;"	d	file:
F_MAX_10_EXP	enquire.c	2040;"	d	file:
F_MAX_EXP	enquire.c	1727;"	d	file:
F_MAX_EXP	enquire.c	1824;"	d	file:
F_MAX_EXP	enquire.c	1902;"	d	file:
F_MAX_EXP	enquire.c	1986;"	d	file:
F_MAX_EXP	enquire.c	2034;"	d	file:
F_MIN	enquire.c	1725;"	d	file:
F_MIN	enquire.c	1818;"	d	file:
F_MIN	enquire.c	1896;"	d	file:
F_MIN	enquire.c	1980;"	d	file:
F_MIN	enquire.c	2028;"	d	file:
F_MIN_10_EXP	enquire.c	1726;"	d	file:
F_MIN_10_EXP	enquire.c	1821;"	d	file:
F_MIN_10_EXP	enquire.c	1899;"	d	file:
F_MIN_10_EXP	enquire.c	1983;"	d	file:
F_MIN_10_EXP	enquire.c	2031;"	d	file:
F_MIN_EXP	enquire.c	1724;"	d	file:
F_MIN_EXP	enquire.c	1815;"	d	file:
F_MIN_EXP	enquire.c	1893;"	d	file:
F_MIN_EXP	enquire.c	1977;"	d	file:
F_MIN_EXP	enquire.c	2025;"	d	file:
F_RADIX	enquire.c	1719;"	d	file:
F_RADIX	enquire.c	1800;"	d	file:
F_RADIX	enquire.c	2010;"	d	file:
F_ROUNDS	enquire.c	1722;"	d	file:
F_ROUNDS	enquire.c	1809;"	d	file:
F_ROUNDS	enquire.c	2019;"	d	file:
F_check	enquire.c	/^Procedure F_check(precision, val1) int precision; Long_double val1; {$/;"	f
F_check	enquire.c	1713;"	d	file:
F_check	enquire.c	1769;"	d	file:
F_check	enquire.c	1855;"	d	file:
F_check	enquire.c	1937;"	d	file:
Fname	enquire.c	1700;"	d	file:
Fname	enquire.c	1755;"	d	file:
Fname	enquire.c	1841;"	d	file:
Fname	enquire.c	1929;"	d	file:
GCC_CHECK_HDR	collect2.c	2827;"	d	file:
GCC_CHECK_HDR	collect2.c	2840;"	d	file:
GCC_OK_SYMBOL	collect2.c	2824;"	d	file:
GCC_OK_SYMBOL	collect2.c	2831;"	d	file:
GCC_SYMBOLS	collect2.c	2822;"	d	file:
GCC_SYMBOLS	collect2.c	2829;"	d	file:
GCC_SYMENT	collect2.c	2823;"	d	file:
GCC_SYMENT	collect2.c	2830;"	d	file:
GCC_SYMINC	collect2.c	2825;"	d	file:
GCC_SYMINC	collect2.c	2838;"	d	file:
GCC_SYMZERO	collect2.c	2826;"	d	file:
GCC_SYMZERO	collect2.c	2839;"	d	file:
GCC_UNDEF_SYMBOL	collect2.c	2836;"	d	file:
GDB_INV_REF_REGPARM_STABS_LETTER	dbxout.c	114;"	d	file:
GEQ	cexp.c	17;"	d	file:
GEQ	cppexp.c	89;"	d	file:
GETC	c-common.c	2820;"	d	file:
GETC	c-lex.c	72;"	d	file:
GETC	c-lex.c	75;"	d	file:
GETC	cpplib.c	33;"	d	file:
GET_CSE_REG_INFO	cse.c	502;"	d	file:
GET_ENV_PATH_LIST	cccp.c	42;"	d	file:
GET_ENV_PATH_LIST	collect2.c	237;"	d	file:
GET_ENV_PATH_LIST	cppinit.c	37;"	d	file:
GET_ENV_PATH_LIST	gcc.c	89;"	d	file:
GET_REAL	real.c	250;"	d	file:
GET_REAL	real.c	262;"	d	file:
GET_REAL	real.c	272;"	d	file:
GET_REAL	real.c	305;"	d	file:
GET_SRC_PROB	haifa-sched.c	646;"	d	file:
GOPENCOMPRESS	libgcc2.c	1814;"	d	file:
GOPENDECOMPRESS	libgcc2.c	1813;"	d	file:
GOTO	c-parse.c	31;"	d	file:
GUESSPATHLEN	getpwd.c	13;"	d	file:
GUESSPATHLEN	getpwd.c	15;"	d	file:
GUESSPATHLEN	getpwd.c	19;"	d	file:
HAIFA_INLINE	haifa-sched.c	984;"	d	file:
HALF	enquire.c	1707;"	d	file:
HALF	enquire.c	1763;"	d	file:
HALF	enquire.c	1849;"	d	file:
HALF	enquire.c	1919;"	d	file:
HASH	cse.c	453;"	d	file:
HASHBITS	halfpic.c	84;"	d	file:
HASHBITS	mips-tfile.c	1766;"	d	file:
HASHBITS	tree.c	1239;"	d	file:
HASHBITS	varasm.c	2268;"	d	file:
HASHNODE	cccp.c	/^typedef struct hashnode HASHNODE;$/;"	t	file:
HASHSIZE	cccp.c	662;"	d	file:
HASHSTEP	cccp.c	664;"	d	file:
HASH_LEN_MAX	mips-tfile.c	1026;"	d	file:
HASH_SIZE	gen-protos.c	28;"	d	file:
HASH_SIZE	print-tree.c	34;"	d	file:
HASH_TABLE_SIZE	protoize.c	273;"	d	file:
HAS_INIT_SECTION	function.c	6037;"	d	file:
HAS_INIT_SECTION	function.c	6038;"	d	file:
HAS_INIT_SECTION	libgcc2.c	2836;"	d	file:
HAS_INIT_SECTION	libgcc2.c	2837;"	d	file:
HAVE_EXECUTABLE_SUFFIX	gcc.c	48;"	d	file:
HAVE_OBJECT_SUFFIX	cccp.c	61;"	d	file:
HAVE_OBJECT_SUFFIX	gcc.c	55;"	d	file:
HAVE_VALUE	cppexp.c	98;"	d	file:
HIDDEN	floatlib.c	60;"	d	file:
HIDDEND	floatlib.c	68;"	d	file:
HIDDEND_LL	floatlib.c	73;"	d	file:
HIGHPART	fold-const.c	117;"	d	file:
HIGH_HALFWORD_COEFF	libgcc2.c	1006;"	d	file:
HIGH_HALFWORD_COEFF	libgcc2.c	949;"	d	file:
HIGH_HALFWORD_COEFF	libgcc2.c	968;"	d	file:
HIGH_HALFWORD_COEFF	libgcc2.c	987;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	1007;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	777;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	819;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	861;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	903;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	950;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	969;"	d	file:
HIGH_WORD_COEFF	libgcc2.c	988;"	d	file:
HOST_FLOAT_FORMAT	libgcc2.c	1020;"	d	file:
HYPERUNARY	c-parse.c	50;"	d	file:
IBM	real.c	122;"	d	file:
IBM	real.c	153;"	d	file:
IBM_FLOAT_FORMAT	libgcc2.c	1016;"	d	file:
IDENTIFIER	c-parse.c	8;"	d	file:
IEEE	real.c	129;"	d	file:
IEEE	real.c	156;"	d	file:
IEEE_FLOAT_FORMAT	libgcc2.c	1014;"	d	file:
IF	c-parse.c	20;"	d	file:
IFREE	haifa-sched.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	file:	enum:INSN_TRAP_CLASS
IF_STACK_FRAME	cccp.c	/^typedef struct if_stack IF_STACK_FRAME;$/;"	t	file:
IMAGPART	c-parse.c	39;"	d	file:
IMARK	enquire.c	1740;"	d	file:
IMARK	enquire.c	1784;"	d	file:
IMARK	enquire.c	1868;"	d	file:
IMARK	enquire.c	1952;"	d	file:
IMMEDIATE_PREFIX	cccp.c	711;"	d	file:
IMPLEMENTATION	c-parse.c	53;"	d	file:
INCLUDE_HASHSIZE	cccp.c	479;"	d	file:
INCLUDE_LEN_FUDGE	cccp.c	101;"	d	file:
INCLUDE_LEN_FUDGE	cccp.c	82;"	d	file:
INCOMING_FRAME_SP_OFFSET	dwarf2out.c	522;"	d	file:
INCOMING_REGNO	expr.c	245;"	d	file:
INCOMPLETE_TYPES_INCREMENT	dwarf2out.c	2443;"	d	file:
INCOMPLETE_TYPES_INCREMENT	dwarfout.c	287;"	d	file:
INFINITY	real.c	171;"	d	file:
INFINITY	real.c	178;"	d	file:
INF_GET	fix-header.c	871;"	d	file:
INF_UNGET	fix-header.c	872;"	d	file:
INIT_NAME_FORMAT	collect2.c	2038;"	d	file:
INIT_SECTION_ASM_OP	crtstuff.c	/^asm (INIT_SECTION_ASM_OP);	\/* cc1 doesn't know that we are switching! *\/$/;"	v
INIT_STACK_SIZE	cppexp.c	699;"	d	file:
INIT_STATIC_SPEC	gcc.c	1130;"	d	file:
INIT_VARRAY	mips-tfile.c	955;"	d	file:
INLINE	bitmap.c	36;"	d	file:
INLINE	bitmap.c	38;"	d	file:
INO_T_EQ	cccp.c	80;"	d	file:
INO_T_EQ	cccp.c	89;"	d	file:
INO_T_EQ	cccp.c	93;"	d	file:
INO_T_EQ	cppfiles.c	59;"	d	file:
INO_T_EQ	cppfiles.c	62;"	d	file:
INO_T_EQ	cppfiles.c	64;"	d	file:
INO_T_HASH	cccp.c	81;"	d	file:
INO_T_HASH	cccp.c	97;"	d	file:
INPUT_STACK_MAX	cccp.c	296;"	d	file:
INSN_BB	haifa-sched.c	681;"	d	file:
INSN_BLOCK	haifa-sched.c	464;"	d	file:
INSN_BLOCKAGE	haifa-sched.c	296;"	d	file:
INSN_BLOCKAGE	sched.c	181;"	d	file:
INSN_CACHE_PLANE_SIZE	libgcc2.c	2469;"	d	file:
INSN_COST	haifa-sched.c	269;"	d	file:
INSN_COST	sched.c	171;"	d	file:
INSN_CUID	combine.c	137;"	d	file:
INSN_CUID	cse.c	351;"	d	file:
INSN_CUID	gcse.c	388;"	d	file:
INSN_DEPEND	haifa-sched.c	284;"	d	file:
INSN_DEP_COUNT	haifa-sched.c	291;"	d	file:
INSN_IN_RANGE_P	loop.c	364;"	d	file:
INSN_LABEL_FMT	dwarf2out.c	2716;"	d	file:
INSN_LABEL_FMT	dwarfout.c	636;"	d	file:
INSN_LEN	haifa-sched.c	5719;"	d	file:
INSN_LENGTH_ALIGNMENT	final.c	838;"	d	file:
INSN_LUID	haifa-sched.c	262;"	d	file:
INSN_LUID	sched.c	164;"	d	file:
INSN_PRIORITY	haifa-sched.c	266;"	d	file:
INSN_PRIORITY	sched.c	168;"	d	file:
INSN_PROBABILITY	haifa-sched.c	679;"	d	file:
INSN_REF_COUNT	haifa-sched.c	321;"	d	file:
INSN_REF_COUNT	sched.c	206;"	d	file:
INSN_REG_WEIGHT	haifa-sched.c	279;"	d	file:
INSN_SHUID	final.c	841;"	d	file:
INSN_SUID	stupid.c	66;"	d	file:
INSN_TICK	haifa-sched.c	411;"	d	file:
INSN_TICK	sched.c	297;"	d	file:
INSN_TRAP_CLASS	haifa-sched.c	/^enum INSN_TRAP_CLASS$/;"	g	file:
INSN_UNIT	haifa-sched.c	274;"	d	file:
INSN_UNIT	sched.c	176;"	d	file:
INSN_VOLATILE	flow.c	271;"	d	file:
INT	cexp.c	8;"	d	file:
INT	cppexp.c	93;"	d	file:
INT	enquire.c	1734;"	d	file:
INT	enquire.c	1778;"	d	file:
INT	enquire.c	1864;"	d	file:
INT	enquire.c	1946;"	d	file:
INTEGRATE_THRESHOLD	integrate.c	57;"	d	file:
INTERFACE	c-parse.c	52;"	d	file:
INTIFY	libgcc1.c	226;"	d	file:
INT_BITS	global.c	108;"	d	file:
INT_TYPE	global.c	109;"	d	file:
INT_TYPE_SIZE	c-decl.c	61;"	d	file:
INT_TYPE_SIZE	cexp.c	85;"	d	file:
INT_TYPE_SIZE	cppexp.c	40;"	d	file:
INT_TYPE_SIZE	dwarfout.c	131;"	d	file:
INT_TYPE_SIZE	final.c	107;"	d	file:
INT_TYPE_SIZE	optabs.c	4645;"	d	file:
INT_TYPE_SIZE	sdbout.c	133;"	d	file:
INV	mbchar.c	/^  J2_ESC, J2_ESC_BR, INV, JIS_S_NUM$/;"	e	file:
INVALID	real.c	1467;"	d	file:
IN_EDGES	haifa-sched.c	494;"	d	file:
IN_NAMED_SECTION	varasm.c	167;"	d	file:
IPROP	enquire.c	/^Procedure IPROP() {$/;"	f
IPROP	enquire.c	1735;"	d	file:
IPROP	enquire.c	1779;"	d	file:
IPROP	enquire.c	1865;"	d	file:
IPROP	enquire.c	1947;"	d	file:
IRISKY	haifa-sched.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	file:	enum:INSN_TRAP_CLASS
ISN_ZERO	c-iterate.c	392;"	d	file:
ISSUE_RATE	haifa-sched.c	193;"	d	file:
IS_ASM_IDENT	mips-tfile.c	696;"	d	file:
IS_ASM_LOGICAL_LINE_SEPARATOR	final.c	127;"	d	file:
IS_DIR_SEPARATOR	gcc.c	71;"	d	file:
IS_DIR_SEPARATOR	gcc.c	73;"	d	file:
IS_DIR_SEPARATOR	prefix.c	86;"	d	file:
IS_DIR_SEPARATOR	prefix.c	89;"	d	file:
IS_DIR_SEPARATOR	prefix.c	91;"	d	file:
IS_DIR_SEPARATOR	protoize.c	70;"	d	file:
IS_DIR_SEPARATOR	protoize.c	72;"	d	file:
IS_DOMINATED	haifa-sched.c	636;"	d	file:
IS_INCLUDE_DIRECTIVE_TYPE	cccp.c	764;"	d	file:
IS_INCLUDE_DIRECTIVE_TYPE	cpplib.c	90;"	d	file:
IS_LOAD_INSN	haifa-sched.c	2386;"	d	file:
IS_REACHABLE	haifa-sched.c	2379;"	d	file:
IS_RGN_ENTRY	haifa-sched.c	633;"	d	file:
IS_SAME_PATH	protoize.c	85;"	d	file:
IS_SAME_PATH	protoize.c	87;"	d	file:
IS_SAME_PATH_CHAR	protoize.c	78;"	d	file:
IS_SAME_PATH_CHAR	protoize.c	80;"	d	file:
IS_SPECULATIVE	haifa-sched.c	606;"	d	file:
IS_SPECULATIVE_INSN	haifa-sched.c	680;"	d	file:
IS_VALID	haifa-sched.c	605;"	d	file:
I_MAX	enquire.c	1742;"	d	file:
I_MAX	enquire.c	1790;"	d	file:
I_MAX	enquire.c	1874;"	d	file:
I_MAX	enquire.c	1958;"	d	file:
I_MAX	enquire.c	2000;"	d	file:
I_MIN	enquire.c	1743;"	d	file:
I_MIN	enquire.c	1793;"	d	file:
I_MIN	enquire.c	1877;"	d	file:
I_MIN	enquire.c	1961;"	d	file:
I_MIN	enquire.c	2003;"	d	file:
Iname	enquire.c	1736;"	d	file:
Iname	enquire.c	1780;"	d	file:
Iname	enquire.c	1866;"	d	file:
Iname	enquire.c	1948;"	d	file:
Integer	enquire.c	1733;"	d	file:
Integer	enquire.c	1777;"	d	file:
Integer	enquire.c	1863;"	d	file:
Integer	enquire.c	1945;"	d	file:
J	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
J2_ESC	mbchar.c	/^  J2_ESC, J2_ESC_BR, INV, JIS_S_NUM$/;"	e	file:
J2_ESC_BR	mbchar.c	/^  J2_ESC, J2_ESC_BR, INV, JIS_S_NUM$/;"	e	file:
JIS	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
JIS_1	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
JIS_2	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
JIS_ACTION	mbchar.c	/^} JIS_ACTION;$/;"	t	file:
JIS_CHAR	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
JIS_CHAR_TYPE	mbchar.c	/^} JIS_CHAR_TYPE;$/;"	t	file:
JIS_C_NUM	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
JIS_STATE	mbchar.c	/^} JIS_STATE; $/;"	t	file:
JIS_S_NUM	mbchar.c	/^  J2_ESC, J2_ESC_BR, INV, JIS_S_NUM$/;"	e	file:
JIS_action_table	mbchar.c	/^static JIS_ACTION JIS_action_table[JIS_S_NUM][JIS_C_NUM] = {$/;"	v	file:
JIS_state_table	mbchar.c	/^static JIS_STATE JIS_state_table[JIS_S_NUM][JIS_C_NUM] = {$/;"	v	file:
JUMP_TABLES_IN_TEXT_SECTION	final.c	131;"	d	file:
J_ESC	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
J_ESC_BR	mbchar.c	/^  ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	file:
K	fold-const.c	907;"	d	file:
K	fold-const.c	910;"	d	file:
K	fold-const.c	912;"	d	file:
KNOWN_TYPE_TAG	sdbout.c	284;"	d	file:
L	enquire.c	/^    L= 0,	\/* produce limits.h *\/$/;"	v
LABEL	c-parse.c	37;"	d	file:
LABEL_ALIGN	final.c	799;"	d	file:
LABEL_ALIGN_AFTER_BARRIER	final.c	815;"	d	file:
LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP	final.c	819;"	d	file:
LABEL_ALIGN_MAX_SKIP	final.c	803;"	d	file:
LABEL_LIVE	reload1.c	9537;"	d	file:
LABEL_TO_ALIGNMENT	final.c	845;"	d	file:
LABEL_TO_MAX_SKIP	final.c	848;"	d	file:
LAUNCH_PRIORITY	haifa-sched.c	315;"	d	file:
LAUNCH_PRIORITY	sched.c	200;"	d	file:
LEFT_OPERAND_REQUIRED	cppexp.c	96;"	d	file:
LEQ	cexp.c	16;"	d	file:
LEQ	cppexp.c	88;"	d	file:
LESS_PRIO	cppexp.c	670;"	d	file:
LIBGCC2_LONG_DOUBLE_TYPE_SIZE	libgcc2.c	76;"	d	file:
LIBGCC2_WORDS_BIG_ENDIAN	libgcc2.c	72;"	d	file:
LIBGCC_SPEC	gcc.c	446;"	d	file:
LIBGCC_SPEC	gcc.c	448;"	d	file:
LIB_SPEC	gcc.c	438;"	d	file:
LINE_BEGIN_LABEL	dwarfout.c	604;"	d	file:
LINE_CODE_LABEL	dwarf2out.c	2731;"	d	file:
LINE_CODE_LABEL_FMT	dwarfout.c	702;"	d	file:
LINE_END_LABEL	dwarfout.c	610;"	d	file:
LINE_ENTRY_LABEL_FMT	dwarfout.c	708;"	d	file:
LINE_INFO_TABLE_INCREMENT	dwarf2out.c	2382;"	d	file:
LINE_LAST_ENTRY_LABEL	dwarfout.c	607;"	d	file:
LINE_NOTE	haifa-sched.c	327;"	d	file:
LINE_NOTE	sched.c	212;"	d	file:
LINE_SECTION	dwarfout.c	507;"	d	file:
LINKER_NAME	gcc.c	481;"	d	file:
LINK_SPEC	gcc.c	433;"	d	file:
LOCAL_ALIGNMENT	function.c	66;"	d	file:
LOCAL_INCLUDE_DIR	protoize.c	287;"	d	file:
LOC_BEGIN_LABEL_FMT	dwarfout.c	663;"	d	file:
LOC_END_LABEL_FMT	dwarfout.c	666;"	d	file:
LOC_SECTION	dwarf2out.c	2657;"	d	file:
LOGICAL	cppexp.c	938;"	d	file:
LONG_DOUBLE_TYPE_SIZE	c-decl.c	85;"	d	file:
LONG_DOUBLE_TYPE_SIZE	dwarfout.c	159;"	d	file:
LONG_DOUBLE_TYPE_SIZE	sdbout.c	153;"	d	file:
LONG_LONG_TYPE_SIZE	c-decl.c	69;"	d	file:
LONG_LONG_TYPE_SIZE	dwarfout.c	139;"	d	file:
LONG_LONG_TYPE_SIZE	sdbout.c	141;"	d	file:
LONG_TYPE_SIZE	c-decl.c	65;"	d	file:
LONG_TYPE_SIZE	cexp.c	89;"	d	file:
LONG_TYPE_SIZE	cppexp.c	44;"	d	file:
LONG_TYPE_SIZE	dwarfout.c	135;"	d	file:
LONG_TYPE_SIZE	final.c	111;"	d	file:
LONG_TYPE_SIZE	profile.c	160;"	d	file:
LONG_TYPE_SIZE	sdbout.c	137;"	d	file:
LOOP_ALIGN	final.c	807;"	d	file:
LOOP_ALIGN_MAX_SKIP	final.c	811;"	d	file:
LOWPART	fold-const.c	115;"	d	file:
LOW_PRIORITY_P	haifa-sched.c	317;"	d	file:
LOW_PRIORITY_P	sched.c	202;"	d	file:
LSH	cexp.c	18;"	d	file:
LSH	cppexp.c	90;"	d	file:
LSHIFT	c-parse.c	45;"	d	file:
L_udivmoddi4	libgcc2.c	421;"	d	file:
Long_double	enquire.c	377;"	d	file:
Long_double	enquire.c	386;"	d	file:
M	real.c	320;"	d	file:
MACHINE_STATE_RESTORE	libgcc2.c	1733;"	d	file:
MACHINE_STATE_SAVE	libgcc2.c	1730;"	d	file:
MACINFO_BEGIN_LABEL	dwarfout.c	623;"	d	file:
MACINFO_SECTION	dwarfout.c	516;"	d	file:
MACRODEF	cccp.c	/^typedef struct macrodef MACRODEF;$/;"	t	file:
MACRO_SYMBOL	fix-header.c	179;"	d	file:
MAKE_A	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
MAKE_J	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
MAKE_LINE_SAFE	sdbout.c	300;"	d	file:
MAKE_POS	cccp.c	665;"	d	file:
MALLOC_CHECK	mips-tfile.c	692;"	d	file:
MANT	floatlib.c	63;"	d	file:
MANTD	floatlib.c	71;"	d	file:
MANTD_LL	floatlib.c	74;"	d	file:
MARK	enquire.c	1716;"	d	file:
MARK	enquire.c	1770;"	d	file:
MARK	enquire.c	1856;"	d	file:
MARK	enquire.c	1938;"	d	file:
MARK_LIVE_AFTER	stupid.c	123;"	d	file:
MATCHES	reload.c	276;"	d	file:
MAX	libgcc2.c	1082;"	d	file:
MAX	libgcc2.c	1104;"	d	file:
MAX	libgcc2.c	1126;"	d	file:
MAXDECEXP	real.c	248;"	d	file:
MAXDECEXP	real.c	260;"	d	file:
MAXDECEXP	real.c	266;"	d	file:
MAXP	real.c	4523;"	d	file:
MAXPATHLEN	getpwd.c	73;"	d	file:
MAX_ALIAS_LOOP_PASSES	alias.c	108;"	d	file:
MAX_ARTIFICIAL_LABEL_BYTES	dwarf2out.c	122;"	d	file:
MAX_ARTIFICIAL_LABEL_BYTES	dwarfout.c	115;"	d	file:
MAX_ATTRS_INDEX	genattrtab.c	244;"	d	file:
MAX_BITS_PER_WORD	expmed.c	66;"	d	file:
MAX_BLOCKAGE_COST	haifa-sched.c	310;"	d	file:
MAX_BLOCKAGE_COST	sched.c	195;"	d	file:
MAX_CHAR_TYPE_MASK	cexp.c	112;"	d	file:
MAX_CHAR_TYPE_MASK	cppexp.c	67;"	d	file:
MAX_CHAR_TYPE_SIZE	cexp.c	97;"	d	file:
MAX_CHAR_TYPE_SIZE	cppexp.c	52;"	d	file:
MAX_CLUSTER_PAGES	mips-tfile.c	923;"	d	file:
MAX_CLUSTER_PAGES	mips-tfile.c	925;"	d	file:
MAX_CODE_ALIGN	final.c	987;"	d	file:
MAX_DELAY_HISTOGRAM	reorg.c	640;"	d	file:
MAX_DIGITS	genattrtab.c	127;"	d	file:
MAX_FIXED_MODE_SIZE	stor-layout.c	129;"	d	file:
MAX_HASH_TABLE	halfpic.c	81;"	d	file:
MAX_HASH_TABLE	tree.c	247;"	d	file:
MAX_HASH_TABLE	varasm.c	2269;"	d	file:
MAX_INT_TYPE_SIZE	cexp.c	101;"	d	file:
MAX_INT_TYPE_SIZE	cppexp.c	56;"	d	file:
MAX_ITERATIONS	tlink.c	31;"	d	file:
MAX_LINE	toplev.c	234;"	d	file:
MAX_LONG_TYPE_SIZE	cexp.c	105;"	d	file:
MAX_LONG_TYPE_SIZE	cppexp.c	60;"	d	file:
MAX_MAX_OPERANDS	genoutput.c	102;"	d	file:
MAX_MOVE_MAX	caller-save.c	35;"	d	file:
MAX_OFILE_ALIGNMENT	varasm.c	1301;"	d	file:
MAX_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
MAX_OUTPUT_COLUMNS	cccp.c	10580;"	d	file:
MAX_OUTPUT_COLUMNS	cppfiles.c	1167;"	d	file:
MAX_PASSES	gcse.c	162;"	d	file:
MAX_PRIORITY	haifa-sched.c	313;"	d	file:
MAX_PRIORITY	sched.c	198;"	d	file:
MAX_REORG_PASSES	reorg.c	641;"	d	file:
MAX_RGN_BLOCKS	haifa-sched.c	205;"	d	file:
MAX_RGN_INSNS	haifa-sched.c	206;"	d	file:
MAX_RTX_HASH_TABLE	varasm.c	3106;"	d	file:
MAX_UNROLLED_INSNS	unroll.c	165;"	d	file:
MAX_USES	gcse.c	3551;"	d	file:
MAX_VISUAL_LINES	haifa-sched.c	5718;"	d	file:
MAX_WCHAR_TYPE_MASK	cexp.c	116;"	d	file:
MAX_WCHAR_TYPE_MASK	cppexp.c	71;"	d	file:
MAX_WCHAR_TYPE_SIZE	cexp.c	109;"	d	file:
MAX_WCHAR_TYPE_SIZE	cppexp.c	64;"	d	file:
MD_EXEC_PREFIX	collect2.c	68;"	d	file:
MD_EXEC_PREFIX	gcc.c	1377;"	d	file:
MD_STARTFILE_PREFIX	gcc.c	1378;"	d	file:
MD_STARTFILE_PREFIX_1	gcc.c	1379;"	d	file:
MERGABLE_RELOADS	reload.c	283;"	d	file:
MERGE_TO_OTHER	reload.c	293;"	d	file:
MESSAGE	libgcc2.c	4010;"	d	file:
MIN	libgcc2.c	1081;"	d	file:
MIN	libgcc2.c	1103;"	d	file:
MIN	libgcc2.c	1125;"	d	file:
MINDECEXP	real.c	249;"	d	file:
MINDECEXP	real.c	261;"	d	file:
MINDECEXP	real.c	267;"	d	file:
MINIMAL_DEBUG	dbxout.c	130;"	d	file:
MINIMAL_DEBUG	dbxout.c	134;"	d	file:
MINIMAL_DEBUG	dbxout.c	135;"	d	file:
MINUSMINUS	c-parse.c	49;"	d	file:
MINUS_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
MIN_BLOCKAGE_COST	haifa-sched.c	309;"	d	file:
MIN_BLOCKAGE_COST	sched.c	194;"	d	file:
MIN_DIFF_PRIORITY	haifa-sched.c	684;"	d	file:
MIN_FATAL_STATUS	gcc.c	99;"	d	file:
MIN_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
MIN_PROBABILITY	haifa-sched.c	685;"	d	file:
MIN_PROB_DIFF	haifa-sched.c	686;"	d	file:
MIN_UNITS_PER_WORD	caller-save.c	39;"	d	file:
MIPS_IS_STAB	mips-tdump.c	45;"	d	file:
MIPS_MARK_STAB	mips-tdump.c	46;"	d	file:
MIPS_UNMARK_STAB	mips-tdump.c	47;"	d	file:
MKTEMP_EACH_FILE	gcc.c	1298;"	d	file:
MOVE_BY_PIECES_P	expr.c	227;"	d	file:
MOVE_MAX_PIECES	expr.c	1413;"	d	file:
MOVE_MAX_WORDS	caller-save.c	42;"	d	file:
MOVE_RATIO	expr.c	217;"	d	file:
MOVE_RATIO	expr.c	220;"	d	file:
MSG	gmon.c	72;"	d	file:
MSG	libgcc2.c	1513;"	d	file:
MSG	libgcc2.c	1517;"	d	file:
MT_BEGIN_LABEL_FMT	dwarfout.c	657;"	d	file:
MT_END_LABEL_FMT	dwarfout.c	660;"	d	file:
MULTIBYTE_CHARS	c-lex.c	40;"	d	file:
MULTILIB_DEFAULTS	gcc.c	511;"	d	file:
MUL_PRIO	cppexp.c	673;"	d	file:
MUST_ALIGN	explow.c	1147;"	d	file:
MUST_ALIGN	explow.c	1149;"	d	file:
MY_ISCOFF	collect2.c	106;"	d	file:
M_PI	doprint.c	199;"	d	file:
Mul	enquire.c	1704;"	d	file:
Mul	enquire.c	1760;"	d	file:
Mul	enquire.c	1846;"	d	file:
Mul	enquire.c	1934;"	d	file:
N	pself5.c	2;"	d	file:
NAME	cexp.c	10;"	d	file:
NAME	cppexp.c	92;"	d	file:
NAME	cppinit.c	618;"	d	file:
NAME	cppinit.c	646;"	d	file:
NAME__MAIN	collect2.c	143;"	d	file:
NAME__MAIN	function.c	74;"	d	file:
NAME__MAIN	libgcc2.c	2831;"	d	file:
NANS	real.c	172;"	d	file:
NBITS	real.c	323;"	d	file:
NBUCKETS	cse.c	448;"	d	file:
NDEC	real.c	328;"	d	file:
NE	real.c	247;"	d	file:
NE	real.c	259;"	d	file:
NE	real.c	265;"	d	file:
NEED_HEAD	haifa-sched.c	6694;"	d	file:
NEED_HEAD	sched.c	2616;"	d	file:
NEED_NOTHING	haifa-sched.c	6693;"	d	file:
NEED_NOTHING	sched.c	2615;"	d	file:
NEED_SEPARATE_AP	function.c	94;"	d	file:
NEED_TAIL	haifa-sched.c	6695;"	d	file:
NEED_TAIL	sched.c	2617;"	d	file:
NEVER_SET	gcse.c	1133;"	d	file:
NEXT_DIE_NUM	dwarfout.c	224;"	d	file:
NEXT_IN	haifa-sched.c	481;"	d	file:
NEXT_OUT	haifa-sched.c	482;"	d	file:
NEXT_Q	haifa-sched.c	404;"	d	file:
NEXT_Q	sched.c	290;"	d	file:
NEXT_Q_AFTER	haifa-sched.c	405;"	d	file:
NEXT_Q_AFTER	sched.c	291;"	d	file:
NI	real.c	314;"	d	file:
NM_FLAGS	collect2.c	133;"	d	file:
NOARGS	enquire.c	/^Procedure check_defines NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure iprop NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure lprop NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure sprop NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure uiprop NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure ulprop NOARGS;$/;"	v
NOARGS	enquire.c	/^Procedure usprop NOARGS;$/;"	v
NOARGS	enquire.c	/^int basic NOARGS;$/;"	v
NOARGS	enquire.c	/^int cprop NOARGS;$/;"	v
NOARGS	enquire.c	/^int false NOARGS;$/;"	v
NOARGS	enquire.c	/^int maximum_int NOARGS;$/;"	v
NOARGS	enquire.c	375;"	d	file:
NOARGS	enquire.c	384;"	d	file:
NONCONST	protoize.c	210;"	d	file:
NONE	fix-header.c	/^const char NONE[] = "";  \/* The empty namelist.  *\/$/;"	v
NONZERO_BASE_PLUS_P	cse.c	614;"	d	file:
NOOP	mbchar.c	/^  COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP, EMPTY, ERROR$/;"	e	file:
NORMAL	c-decl.c	/^{ NORMAL,			\/* Ordinary declaration *\/$/;"	e	file:	enum:decl_context
NOTEQUAL	cexp.c	15;"	d	file:
NOTEQUAL	cppexp.c	87;"	d	file:
NOT_TAKEN	cse.c	/^    enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	file:	enum:cse_basic_block_data::branch_path::taken
NO_GENRTL_H	gengenrtl.c	26;"	d	file:
NO_SHARP_TOKEN	cccp.c	/^  NO_SHARP_TOKEN = 0,		\/* token not present *\/$/;"	e	file:	enum:sharp_token_type
NTEN	real.c	4522;"	d	file:
NUL	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
NULL	libgcc2.c	1407;"	d	file:
NULL	libgcc2.c	1456;"	d	file:
NULL	libgcc2.c	2772;"	d	file:
NULL	libgcc2.c	4000;"	d	file:
NULL_ATTR	genattrtab.c	187;"	d	file:
NULL_BINDING_LEVEL	c-decl.c	381;"	d	file:
NUM_ELEM	toplev.c	994;"	d	file:
NUM_ELIMINABLE_REGS	reload1.c	342;"	d	file:
NUM_FACTORS	unroll.c	140;"	d	file:
NUM_KNOWN_PREDS	genrecog.c	171;"	d	file:
NUM_NO_CONFLICT_PAIRS	global.c	241;"	d	file:
NUM_REORG_FUNCTIONS	reorg.c	639;"	d	file:
NUM_UNITOP_CUTOFF	genattrtab.c	1899;"	d	file:
N_BTMASK	mips-tfile.c	871;"	d	file:
N_BT_SHIFT	mips-tfile.c	873;"	d	file:
N_CATCH	dbxout.c	177;"	d	file:
N_CATCH	xcoffout.c	50;"	d	file:
N_REG_INTS	regclass.c	128;"	d	file:
N_SLINE	final.c	98;"	d	file:
N_SOL	final.c	103;"	d	file:
N_TMASK	mips-tfile.c	872;"	d	file:
N_TQ	mips-tfile.c	875;"	d	file:
N_TQ_SHIFT	mips-tfile.c	874;"	d	file:
Number	enquire.c	1695;"	d	file:
Number	enquire.c	1751;"	d	file:
Number	enquire.c	1837;"	d	file:
Number	enquire.c	1916;"	d	file:
OBJC_STRING	c-parse.c	66;"	d	file:
OBJECTNAME	c-parse.c	63;"	d	file:
OBJECTS_PER_PAGE	mips-tfile.c	950;"	d	file:
OBJECTS_PER_PAGE	mips-tfile.c	952;"	d	file:
OBJECT_FORMAT_COFF	collect2.c	66;"	d	file:
OBJECT_FORMAT_NONE	collect2.c	80;"	d	file:
OBJECT_FORMAT_ROSE	collect2.c	67;"	d	file:
OBJECT_SUFFIX	cccp.c	63;"	d	file:
OBJECT_SUFFIX	cppinit.c	97;"	d	file:
OBJECT_SUFFIX	cppinit.c	99;"	d	file:
OBJECT_SUFFIX	gcc.c	57;"	d	file:
OBSTACK_CHUNK_ALLOC	bitmap.c	110;"	d	file:
OBSTACK_CHUNK_ALLOC	tree.c	313;"	d	file:
OBSTACK_CHUNK_FREE	bitmap.c	113;"	d	file:
OBSTACK_CHUNK_FREE	tree.c	316;"	d	file:
OBSTACK_CHUNK_SIZE	bitmap.c	106;"	d	file:
OBSTACK_CHUNK_SIZE	tree.c	309;"	d	file:
OK_UI	enquire.c	1739;"	d	file:
OK_UI	enquire.c	1782;"	d	file:
OK_UI	enquire.c	1867;"	d	file:
OK_UI	enquire.c	1950;"	d	file:
ONE	enquire.c	1708;"	d	file:
ONE	enquire.c	1764;"	d	file:
ONE	enquire.c	1850;"	d	file:
ONE	enquire.c	1920;"	d	file:
ON_EXIT	crtstuff.c	126;"	d	file:
ON_EXIT	libgcc2.c	2863;"	d	file:
ON_EXIT	libgcc2.c	2940;"	d	file:
OR	cexp.c	12;"	d	file:
ORIG_AUX	mips-tfile.c	1541;"	d	file:
ORIG_DENSE	mips-tfile.c	1533;"	d	file:
ORIG_ESTRS	mips-tfile.c	1539;"	d	file:
ORIG_ESYMS	mips-tfile.c	1538;"	d	file:
ORIG_FILES	mips-tfile.c	1535;"	d	file:
ORIG_LINENUM	mips-tfile.c	1532;"	d	file:
ORIG_LSTRS	mips-tfile.c	1537;"	d	file:
ORIG_LSYMS	mips-tfile.c	1536;"	d	file:
ORIG_OPT	mips-tfile.c	1540;"	d	file:
ORIG_PROCS	mips-tfile.c	1534;"	d	file:
ORIG_RFDS	mips-tfile.c	1542;"	d	file:
OROR	c-parse.c	41;"	d	file:
OROR	cppexp.c	84;"	d	file:
OROR_PRIO	cppexp.c	664;"	d	file:
ORX_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
OR_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
OR_PRIO	cppexp.c	666;"	d	file:
OTHER	mbchar.c	/^  ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER, JIS_C_NUM$/;"	e	file:
OUTBUF_SIZE	cccp.c	348;"	d	file:
OUTGOING_REGNO	alias.c	1346;"	d	file:
OUTGOING_REGNO	expr.c	248;"	d	file:
OUTPUT_LABEL	genrecog.c	54;"	d	file:
OUT_EDGES	haifa-sched.c	495;"	d	file:
OVERFLOW	real.c	1463;"	d	file:
Order	enquire.c	992;"	d	file:
PACK	floatlib.c	64;"	d	file:
PACKD_LL	floatlib.c	75;"	d	file:
PAGE_SIZE	mips-tfile.c	915;"	d	file:
PAGE_USIZE	mips-tfile.c	918;"	d	file:
PAREN_INNER_PRIO	cppexp.c	661;"	d	file:
PAREN_OUTER_PRIO	cppexp.c	675;"	d	file:
PARM	c-decl.c	/^  PARM,				\/* Declaration of parm before function body *\/$/;"	e	file:	enum:decl_context
PARM_PASSED_IN_MEMORY	dbxout.c	189;"	d	file:
PARM_PASSED_IN_MEMORY	sdbout.c	76;"	d	file:
PASS	enquire.c	2862;"	d	file:
PASS	enquire.c	2866;"	d	file:
PASS	enquire.c	2872;"	d	file:
PASS	enquire.c	316;"	d	file:
PASS0	enquire.c	2877;"	d	file:
PASS0	enquire.c	317;"	d	file:
PASS1	enquire.c	2871;"	d	file:
PASS1	enquire.c	318;"	d	file:
PASS2	enquire.c	2865;"	d	file:
PASS2	enquire.c	2873;"	d	file:
PASS3	enquire.c	2867;"	d	file:
PASS_FIRST	collect2.c	/^  PASS_FIRST,				\/* without constructors *\/$/;"	e	file:	enum:pass
PASS_LIB	collect2.c	/^  PASS_LIB,			        \/* looking for shared libraries *\/$/;"	e	file:	enum:pass
PASS_OBJ	collect2.c	/^  PASS_OBJ,				\/* individual objects *\/$/;"	e	file:	enum:pass
PASS_SECOND	collect2.c	/^  PASS_SECOND				\/* with constructors linked in *\/$/;"	e	file:	enum:pass
PATHLENGTH	cse.c	565;"	d	file:
PATH_SEPARATOR	cccp.c	51;"	d	file:
PATH_SEPARATOR	collect2.c	785;"	d	file:
PATH_SEPARATOR	cppinit.c	42;"	d	file:
PATH_SEPARATOR	gcc.c	62;"	d	file:
PEEKC	cpplib.c	34;"	d	file:
PEEKN	cpplib.c	31;"	d	file:
PENDING_SIBLINGS_INCREMENT	dwarfout.c	245;"	d	file:
PENDING_TYPES_INCREMENT	dwarf2out.c	2427;"	d	file:
PENDING_TYPES_INCREMENT	dwarfout.c	271;"	d	file:
PERCENT_COLON_TOKEN	cccp.c	/^  PERCENT_COLON_TOKEN = '%',	\/* token spelled with %: only *\/$/;"	e	file:	enum:sharp_token_type
PFREE_CANDIDATE	haifa-sched.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	file:	enum:INSN_TRAP_CLASS
PLOSS	real.c	1466;"	d	file:
PLUSPLUS	c-parse.c	48;"	d	file:
PLUS_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
PLUS_PRIO	cppexp.c	672;"	d	file:
POINTSAT	c-parse.c	51;"	d	file:
POPMACRO	cccp.c	2541;"	d	file:
POPSECTION_ASM_OP	dwarfout.c	491;"	d	file:
POPSTACK	stmt.c	314;"	d	file:
POSIX	protoize.c	47;"	d	file:
POSIX1_SYMBOL	fix-header.c	161;"	d	file:
POSIX1_SYMBOL	fix-header.c	164;"	d	file:
POSIX2_SYMBOL	fix-header.c	162;"	d	file:
POSIX2_SYMBOL	fix-header.c	165;"	d	file:
POS_MINUS_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
PREFERRED_DEBUGGING_TYPE	toplev.c	113;"	d	file:
PREFERRED_DEBUGGING_TYPE	toplev.c	116;"	d	file:
PREFERRED_DEBUGGING_TYPE	toplev.c	119;"	d	file:
PREFERRED_DEBUGGING_TYPE	toplev.c	122;"	d	file:
PREFERRED_DEBUGGING_TYPE	toplev.c	125;"	d	file:
PREFERRED_DEBUGGING_TYPE	toplev.c	132;"	d	file:
PREFERRED_STACK_BOUNDARY	calls.c	33;"	d	file:
PREFERRED_STACK_BOUNDARY	explow.c	36;"	d	file:
PREFERRED_STACK_BOUNDARY	reload1.c	43;"	d	file:
PRINT_CHAR	doprint.c	40;"	d	file:
PRINT_REG	dwarfout.c	73;"	d	file:
PRINT_TYPE	doprint.c	48;"	d	file:
PRISKY_CANDIDATE	haifa-sched.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	file:	enum:INSN_TRAP_CLASS
PRIVATE	c-parse.c	60;"	d	file:
PROTECTED	c-parse.c	61;"	d	file:
PROTOCOL	c-parse.c	62;"	d	file:
PTRDIFF_TYPE	c-decl.c	99;"	d	file:
PTRDIFF_TYPE	cccp.c	683;"	d	file:
PTRDIFF_TYPE	cppinit.c	64;"	d	file:
PTR_SIZE	dwarf2out.c	133;"	d	file:
PTR_T	mips-tdump.c	/^typedef PTR PTR_T;$/;"	t	file:
PTR_T	mips-tfile.c	/^typedef PTR PTR_T;$/;"	t	file:
PUBLIC	c-parse.c	59;"	d	file:
PUBNAMES_SECTION	dwarf2out.c	2660;"	d	file:
PUBNAMES_SECTION	dwarfout.c	519;"	d	file:
PUBNAME_TABLE_INCREMENT	dwarf2out.c	2396;"	d	file:
PUB_DIE_LABEL_FMT	dwarfout.c	633;"	d	file:
PUSHSECTION_ASM_OP	dwarfout.c	488;"	d	file:
PUSHSECTION_FORMAT	dwarfout.c	500;"	d	file:
PUSH_ARGS_REVERSED	calls.c	45;"	d	file:
PUSH_ARGS_REVERSED	expr.c	55;"	d	file:
PUSH_DERIVED_LEVEL	sdbout.c	408;"	d	file:
PUSH_SPELLING	c-typeck.c	4599;"	d	file:
PUT_REAL	real.c	251;"	d	file:
PUT_REAL	real.c	263;"	d	file:
PUT_REAL	real.c	287;"	d	file:
PUT_REAL	real.c	306;"	d	file:
PUT_SDB_BLOCK_END	sdbout.c	247;"	d	file:
PUT_SDB_BLOCK_START	sdbout.c	240;"	d	file:
PUT_SDB_DEF	sdbout.c	193;"	d	file:
PUT_SDB_ENDEF	sdbout.c	204;"	d	file:
PUT_SDB_EPILOGUE_END	sdbout.c	268;"	d	file:
PUT_SDB_FUNCTION_END	sdbout.c	261;"	d	file:
PUT_SDB_FUNCTION_START	sdbout.c	254;"	d	file:
PUT_SDB_INT_VAL	sdbout.c	176;"	d	file:
PUT_SDB_LAST_DIM	sdbout.c	229;"	d	file:
PUT_SDB_NEXT_DIM	sdbout.c	225;"	d	file:
PUT_SDB_PLAIN_DEF	sdbout.c	200;"	d	file:
PUT_SDB_SCL	sdbout.c	172;"	d	file:
PUT_SDB_SIZE	sdbout.c	212;"	d	file:
PUT_SDB_SRC_FILE	sdbout.c	312;"	d	file:
PUT_SDB_START_DIM	sdbout.c	221;"	d	file:
PUT_SDB_TAG	sdbout.c	233;"	d	file:
PUT_SDB_TYPE	sdbout.c	208;"	d	file:
PUT_SDB_VAL	sdbout.c	186;"	d	file:
Procedure	enquire.c	347;"	d	file:
Procedure	enquire.c	349;"	d	file:
Promoted	enquire.c	1034;"	d	file:
Ptrdiff_t	mips-tfile.c	630;"	d	file:
Q	pself5.c	3;"	d	file:
QTY_CMP_PRI	local-alloc.c	1511;"	d	file:
QTY_CMP_PRI	local-alloc.c	1583;"	d	file:
QTY_CMP_SUGG	local-alloc.c	1545;"	d	file:
QTY_CMP_SUGG	local-alloc.c	1582;"	d	file:
QUOTE	cppinit.c	/^enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };$/;"	e	file:
RANGE_OP	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	e	file:	enum:operator
READ	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	file:	enum:match::<anonymous>
READWRITE	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	file:	enum:match::<anonymous>
REALPART	c-parse.c	38;"	d	file:
REAL_LD_FILE_NAME	collect2.c	69;"	d	file:
REAL_NM_FILE_NAME	collect2.c	70;"	d	file:
REAL_STRIP_FILE_NAME	collect2.c	71;"	d	file:
REAL_WORDS_BIG_ENDIAN	real.c	139;"	d	file:
REAL_WORDS_BIG_ENDIAN	real.c	164;"	d	file:
RECACHE	cccp.c	2549;"	d	file:
RECOG	genrecog.c	/^enum routine_type {RECOG, SPLIT};$/;"	e	file:	enum:routine_type
REGBITP	global.c	201;"	d	file:
REGISTER_MOVE_COST	regclass.c	41;"	d	file:
REGISTER_MOVE_COST	reload.c	106;"	d	file:
REGISTER_MOVE_COST	reload1.c	82;"	d	file:
REGISTER_PREFIX	cccp.c	705;"	d	file:
REGISTER_PREFIX	cppinit.c	84;"	d	file:
REGNO_MODE_OK_FOR_BASE_P	reload.c	110;"	d	file:
REGNO_QTY_VALID_P	cse.c	522;"	d	file:
REG_BASE_VALUE	alias.c	128;"	d	file:
REG_IN_TABLE	cse.c	513;"	d	file:
REG_MODE_OK_FOR_BASE_P	reload.c	114;"	d	file:
REG_OK_STRICT	reload.c	88;"	d	file:
REG_QTY	cse.c	517;"	d	file:
REG_SET_TABLE_SLOP	gcse.c	445;"	d	file:
REG_STACK_SIZE	reg-stack.c	168;"	d	file:
REG_TICK	cse.c	509;"	d	file:
REG_WHERE_BORN	stupid.c	96;"	d	file:
RELOAD_COMBINE_MAX_USES	reload1.c	9506;"	d	file:
REP_BIT	libgcc2.c	1055;"	d	file:
REQUIRED	fix-header.c	441;"	d	file:
RESTORE_SPELLING_DEPTH	c-typeck.c	4585;"	d	file:
REST_EXTENSION_LENGTH	cccp.c	585;"	d	file:
REST_EXTENSION_LENGTH	cpphash.c	581;"	d	file:
RESULT	doprint.c	202;"	d	file:
RETURN	c-parse.c	30;"	d	file:
REVERSIBLE_CC_MODE	combine.c	122;"	d	file:
RGN_BLOCKS	haifa-sched.c	539;"	d	file:
RGN_NR_BLOCKS	haifa-sched.c	538;"	d	file:
RIGHT_OPERAND_REQUIRED	cppexp.c	97;"	d	file:
RODATA1_BEGIN_LABEL	dwarfout.c	590;"	d	file:
RODATA1_END_LABEL	dwarfout.c	593;"	d	file:
RODATA1_SECTION	dwarfout.c	537;"	d	file:
RODATA_BEGIN_LABEL	dwarfout.c	583;"	d	file:
RODATA_END_LABEL	dwarfout.c	586;"	d	file:
RODATA_SECTION	dwarfout.c	534;"	d	file:
ROUND_BITS	enquire.c	536;"	d	file:
ROUND_DOUBLE	enquire.c	546;"	d	file:
ROUND_EXTENDED	enquire.c	544;"	d	file:
ROUND_SINGLE	enquire.c	545;"	d	file:
RSH	cexp.c	19;"	d	file:
RSH	cppexp.c	91;"	d	file:
RSHIFT	c-parse.c	46;"	d	file:
RTL_HASH	genattrtab.c	491;"	d	file:
RTL_HASH_SIZE	genattrtab.c	486;"	d	file:
RTX_DOUBLE	varasm.c	/^enum kind { RTX_DOUBLE, RTX_INT };$/;"	e	file:	enum:kind
RTX_INT	varasm.c	/^enum kind { RTX_DOUBLE, RTX_INT };$/;"	e	file:	enum:kind
SAVE_SPELLING_DEPTH	c-typeck.c	4589;"	d	file:
SAVE_SUFFIX	protoize.c	106;"	d	file:
SAVE_SUFFIX	protoize.c	108;"	d	file:
SCALE_1_TO_1	gmon.c	70;"	d	file:
SCAN_LIBRARIES	collect2.c	151;"	d	file:
SCHAR_MAX	enquire.c	1364;"	d	file:
SCHAR_MAX	enquire.c	1384;"	d	file:
SCHAR_MAX	enquire.c	419;"	d	file:
SCHAR_MIN	enquire.c	1367;"	d	file:
SCHAR_MIN	enquire.c	1387;"	d	file:
SCHAR_MIN	enquire.c	420;"	d	file:
SCHED_SORT	haifa-sched.c	4125;"	d	file:
SCHED_SORT	sched.c	1825;"	d	file:
SCSPEC	c-parse.c	10;"	d	file:
SDB_DELIM	sdbout.c	163;"	d	file:
SDB_GENERATE_FAKE	sdbout.c	277;"	d	file:
SDB_MAX_DIM	sdbout.c	168;"	d	file:
SECTION_ASM_OP	dwarf2out.c	236;"	d	file:
SECTION_FORMAT	dwarf2out.c	245;"	d	file:
SECTION_FORMAT	dwarf2out.c	247;"	d	file:
SEEN	fix-header.c	444;"	d	file:
SELECTOR	c-parse.c	55;"	d	file:
SEPARATE_LINE_CODE_LABEL	dwarf2out.c	2734;"	d	file:
SEQUENCE_RESULT_SIZE	emit-rtl.c	233;"	d	file:
SET_ALLOCNO_LIVE	global.c	217;"	d	file:
SET_ASM_OP	dwarfout.c	476;"	d	file:
SET_CONFLICT	global.c	131;"	d	file:
SET_INSN_VOLATILE	flow.c	272;"	d	file:
SET_KNOWN_TYPE_TAG	sdbout.c	288;"	d	file:
SET_REGBIT	global.c	205;"	d	file:
SET_REQUIRED	fix-header.c	442;"	d	file:
SET_SEEN	fix-header.c	443;"	d	file:
SET_WORD_SIZE	stor-layout.c	1152;"	d	file:
SFNAMES_BEGIN_LABEL	dwarfout.c	617;"	d	file:
SFNAMES_ENTRY_LABEL_FMT	dwarfout.c	705;"	d	file:
SFNAMES_SECTION	dwarfout.c	510;"	d	file:
SF_SIZE	libgcc2.c	1025;"	d	file:
SF_SIZE	libgcc2.c	1030;"	d	file:
SF_SIZE	libgcc2.c	1035;"	d	file:
SFbignan	real.c	/^unsigned EMUSHORT SFbignan[2] = {0x7fff, 0xffff};$/;"	v
SFlittlenan	real.c	/^unsigned EMUSHORT SFlittlenan[2] = {0, 0xffc0};$/;"	v
SFtype	libgcc2.c	/^typedef 	float SFtype	__attribute__ ((mode (SF)));$/;"	t	file:
SFtype	libgcc2.c	1144;"	d	file:
SHARP_TOKEN	cccp.c	/^  SHARP_TOKEN = '#',		\/* token spelled with # only *\/$/;"	e	file:	enum:sharp_token_type
SHASH_SIZE	mips-tfile.c	1023;"	d	file:
SHIFT_PRIO	cppexp.c	671;"	d	file:
SHORT_TYPE_SIZE	c-decl.c	57;"	d	file:
SHORT_TYPE_SIZE	dwarfout.c	127;"	d	file:
SHORT_TYPE_SIZE	sdbout.c	129;"	d	file:
SIGN	floatlib.c	61;"	d	file:
SIGNBIT	floatlib.c	59;"	d	file:
SIGND	floatlib.c	70;"	d	file:
SIGNED	cexp.c	146;"	d	file:
SIGNED_CHAR_SPEC	gcc.c	474;"	d	file:
SIGNED_CHAR_SPEC	gcc.c	476;"	d	file:
SIMPLIFY_ALTERNATIVE	genattrtab.c	352;"	d	file:
SIMPLIFY_TEST_EXP	genattrtab.c	346;"	d	file:
SING	real.c	1462;"	d	file:
SIZEOF	c-parse.c	16;"	d	file:
SIZE_FOR_MODE	alias.c	95;"	d	file:
SIZE_FOR_MODE	haifa-sched.c	772;"	d	file:
SIZE_FOR_MODE	sched.c	353;"	d	file:
SIZE_FUNC_EH	except.c	755;"	d	file:
SIZE_TYPE	c-decl.c	95;"	d	file:
SIZE_TYPE	cccp.c	677;"	d	file:
SIZE_TYPE	cppinit.c	58;"	d	file:
SI_TYPE_SIZE	libgcc2.c	120;"	d	file:
SItype	libgcc2.c	/^typedef 	 int SItype	__attribute__ ((mode (SI)));$/;"	t	file:
SItype	libgcc2.c	1140;"	d	file:
SKIP_ALL_WHITE_SPACE	cccp.c	831;"	d	file:
SKIP_ALL_WHITE_SPACE	cpplib.c	29;"	d	file:
SKIP_OPERAND	cppexp.c	101;"	d	file:
SKIP_WHITE_SPACE	cccp.c	830;"	d	file:
SKIP_WHITE_SPACE	cpphash.c	38;"	d	file:
SKIP_WHITE_SPACE	cpplib.c	28;"	d	file:
SLOW_UNALIGNED_ACCESS	expmed.c	58;"	d	file:
SLOW_UNALIGNED_ACCESS	expr.c	240;"	d	file:
SL_BEGIN_LABEL_FMT	dwarfout.c	681;"	d	file:
SL_END_LABEL_FMT	dwarfout.c	684;"	d	file:
SPECCASE_BACKSLASH	cppfiles.c	821;"	d	file:
SPECCASE_CR	cppfiles.c	820;"	d	file:
SPECCASE_EMPTY	cppfiles.c	818;"	d	file:
SPECCASE_NUL	cppfiles.c	819;"	d	file:
SPECCASE_QUESTION	cppfiles.c	822;"	d	file:
SPELLING_BOUNDS	c-typeck.c	4575;"	d	file:
SPELLING_DEPTH	c-typeck.c	4584;"	d	file:
SPELLING_MEMBER	c-typeck.c	4574;"	d	file:
SPELLING_STRING	c-typeck.c	4573;"	d	file:
SPLIT	genrecog.c	/^enum routine_type {RECOG, SPLIT};$/;"	e	file:	enum:routine_type
SRCINFO_BEGIN_LABEL	dwarfout.c	620;"	d	file:
SRCINFO_SECTION	dwarfout.c	513;"	d	file:
SRC_PROB	haifa-sched.c	607;"	d	file:
SS_BEGIN_LABEL_FMT	dwarfout.c	645;"	d	file:
SS_END_LABEL_FMT	dwarfout.c	648;"	d	file:
STABS_SYMBOL	mips-tfile.c	1575;"	d	file:
STAB_CODE_TYPE	dbxout.c	182;"	d	file:
STAB_CODE_TYPE	dbxout.c	184;"	d	file:
STAB_CODE_TYPE	mips-tfile.c	685;"	d	file:
STAB_CODE_TYPE	mips-tfile.c	687;"	d	file:
STACK_BYTES	calls.c	51;"	d	file:
STACK_BYTES	function.c	5092;"	d	file:
STACK_DYNAMIC_OFFSET	function.c	2950;"	d	file:
STACK_DYNAMIC_OFFSET	function.c	2955;"	d	file:
STACK_DYNAMIC_OFFSET	function.c	2960;"	d	file:
STACK_GROW_OP	explow.c	1354;"	d	file:
STACK_GROW_OP	explow.c	1356;"	d	file:
STACK_POINTER_OFFSET	function.c	2931;"	d	file:
STACK_POP_CODE	recog.c	47;"	d	file:
STACK_POP_CODE	recog.c	49;"	d	file:
STACK_PUSH_CODE	expr.c	62;"	d	file:
STACK_PUSH_CODE	expr.c	64;"	d	file:
STACK_PUSH_CODE	recog.c	39;"	d	file:
STACK_PUSH_CODE	recog.c	41;"	d	file:
STANDARD_BINDIR_PREFIX	gcc.c	1414;"	d	file:
STANDARD_EXEC_PREFIX	gcc.c	1383;"	d	file:
STANDARD_INCLUDE_COMPONENT	cccp.c	425;"	d	file:
STANDARD_INCLUDE_COMPONENT	cppinit.c	161;"	d	file:
STANDARD_INCLUDE_DIR	cccp.c	46;"	d	file:
STANDARD_INCLUDE_DIR	cppinit.c	46;"	d	file:
STANDARD_INCLUDE_DIR	protoize.c	283;"	d	file:
STANDARD_STARTFILE_PREFIX	gcc.c	1393;"	d	file:
STARTFILE_SPEC	gcc.c	454;"	d	file:
STATIC	crtstuff.c	119;"	d	file:
STATIC	crtstuff.c	128;"	d	file:
STATIC	mips-tfile.c	1584;"	d	file:
STDC	enquire.c	358;"	d	file:
STD_PROTO_DIR	protoize.c	215;"	d	file:
STRING	c-parse.c	14;"	d	file:
STRING_SIZE	gcov.c	84;"	d	file:
STRUCT	c-parse.c	18;"	d	file:
STR_SECTION	dwarf2out.c	2663;"	d	file:
SUBROUTINE_THRESHOLD	genrecog.c	109;"	d	file:
SUBST	combine.c	346;"	d	file:
SUBST_INT	combine.c	369;"	d	file:
SUNOS4_SHARED_LIBRARIES	collect2.c	65;"	d	file:
SUPPORTS_ONE_ONLY	varasm.c	4444;"	d	file:
SUPPORTS_ONE_ONLY	varasm.c	4446;"	d	file:
SWAP	frame.c	335;"	d	file:
SWAP	frame.c	385;"	d	file:
SWITCH	c-parse.c	25;"	d	file:
SWITCHES_NEED_SPACES	gcc.c	461;"	d	file:
SWITCH_CURTAILS_COMPILATION	gcc.c	557;"	d	file:
SWITCH_TAKES_ARG	cppspec.c	43;"	d	file:
SWITCH_TAKES_ARG	gcc.c	533;"	d	file:
SYMBOL_TABLE_SIZE	fix-header.c	186;"	d	file:
SYMBOL__MAIN	collect2.c	144;"	d	file:
SYMBOL__MAIN	function.c	75;"	d	file:
SYMBOL__MAIN	libgcc2.c	/^SYMBOL__MAIN ()$/;"	f
SYMBOL__MAIN	libgcc2.c	2832;"	d	file:
SYMHASH	varasm.c	3150;"	d	file:
SYSTEM	cppinit.c	/^enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };$/;"	e	file:
SYS_FLOAT_H_WRAP	enquire.c	430;"	d	file:
Self	enquire.c	1712;"	d	file:
Self	enquire.c	1768;"	d	file:
Self	enquire.c	1854;"	d	file:
Self	enquire.c	1936;"	d	file:
Signed	enquire.c	1037;"	d	file:
Size_t	mips-tfile.c	626;"	d	file:
Size_t	mips-tfile.c	628;"	d	file:
Store	enquire.c	1701;"	d	file:
Store	enquire.c	1757;"	d	file:
Store	enquire.c	1843;"	d	file:
Store	enquire.c	1931;"	d	file:
Sum	enquire.c	1702;"	d	file:
Sum	enquire.c	1758;"	d	file:
Sum	enquire.c	1844;"	d	file:
Sum	enquire.c	1932;"	d	file:
TAG_NAME	sdbout.c	294;"	d	file:
TAIL_PRIORITY	haifa-sched.c	314;"	d	file:
TAIL_PRIORITY	sched.c	199;"	d	file:
TAKEN	cse.c	/^    enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	file:	enum:cse_basic_block_data::branch_path::taken
TARGET_HASH_PRIME	resource.c	46;"	d	file:
TEXT_BEGIN_LABEL	dwarfout.c	562;"	d	file:
TEXT_END_LABEL	dwarf2out.c	2707;"	d	file:
TEXT_END_LABEL	dwarfout.c	565;"	d	file:
TEXT_SECTION	dwarf2out.c	2668;"	d	file:
TEXT_SECTION	dwarfout.c	525;"	d	file:
TEXT_SECTION_ASM_OP	crtstuff.c	/^asm (TEXT_SECTION_ASM_OP);$/;"	v
TEXT_SECTION_LABEL	dwarf2out.c	2681;"	d	file:
TFbignan	real.c	/^unsigned EMUSHORT TFbignan[8] =$/;"	v
TFlittlenan	real.c	/^unsigned EMUSHORT TFlittlenan[8] = {0, 0, 0, 0, 0, 0, 0x8000, 0xffff};$/;"	v
TFtype	libgcc2.c	/^typedef		float TFtype	__attribute__ ((mode (TF)));$/;"	t	file:
THASH_SIZE	mips-tfile.c	1047;"	d	file:
THING	enquire.c	1696;"	d	file:
THING	enquire.c	1752;"	d	file:
THING	enquire.c	1838;"	d	file:
THING	enquire.c	1926;"	d	file:
THREE	enquire.c	1710;"	d	file:
THREE	enquire.c	1766;"	d	file:
THREE	enquire.c	1852;"	d	file:
THREE	enquire.c	1922;"	d	file:
TICKS_PER_SECOND	toplev.c	1371;"	d	file:
TICKS_PER_SECOND	toplev.c	1374;"	d	file:
TICKS_PER_SECOND	toplev.c	1376;"	d	file:
TIMEVAR	toplev.c	1409;"	d	file:
TLOSS	real.c	1465;"	d	file:
TOLIMIT	gmon.c	306;"	d	file:
TOOLDIR_BASE_PREFIX	gcc.c	1407;"	d	file:
TOTAL_PARTS	c-lex.c	1447;"	d	file:
TO_BLOCK	haifa-sched.c	484;"	d	file:
TO_MINUS_INF	enquire.c	539;"	d	file:
TO_NEAREST	enquire.c	537;"	d	file:
TO_PLUS_INF	enquire.c	540;"	d	file:
TO_ZERO	enquire.c	538;"	d	file:
TRACE_KEEP	libgcc2.c	/^  TRACE_KEEP = 0, TRACE_ON = 1, TRACE_OFF = 2$/;"	e	file:	enum:bb_func_mode
TRACE_OFF	libgcc2.c	/^  TRACE_KEEP = 0, TRACE_ON = 1, TRACE_OFF = 2$/;"	e	file:	enum:bb_func_mode
TRACE_ON	libgcc2.c	/^  TRACE_KEEP = 0, TRACE_ON = 1, TRACE_OFF = 2$/;"	e	file:	enum:bb_func_mode
TRAMPOLINE_ALIGNMENT	function.c	62;"	d	file:
TRAMPOLINE_ALIGNMENT	varasm.c	56;"	d	file:
TRAMPOLINE_REAL_SIZE	function.c	5659;"	d	file:
TRAMPOLINE_REAL_SIZE	function.c	5662;"	d	file:
TRAP_FREE	haifa-sched.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	file:	enum:INSN_TRAP_CLASS
TRAP_RISKY	haifa-sched.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	file:	enum:INSN_TRAP_CLASS
TWO	enquire.c	1709;"	d	file:
TWO	enquire.c	1765;"	d	file:
TWO	enquire.c	1851;"	d	file:
TWO	enquire.c	1921;"	d	file:
TYPENAME	c-decl.c	/^  TYPENAME};			\/* Typename (inside cast or sizeof)  *\/$/;"	e	file:	enum:decl_context
TYPENAME	c-parse.c	9;"	d	file:
TYPEOF	c-parse.c	33;"	d	file:
TYPESPEC	c-parse.c	11;"	d	file:
TYPE_DECL_IS_STUB	dwarf2out.c	2208;"	d	file:
TYPE_DECL_IS_STUB	dwarfout.c	103;"	d	file:
TYPE_DEFINED	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	file:	enum:typestatus
TYPE_HASH	tree.c	264;"	d	file:
TYPE_HASH_SIZE	tree.c	3690;"	d	file:
TYPE_NAME_FMT	dwarfout.c	696;"	d	file:
TYPE_QUAL	c-parse.c	12;"	d	file:
TYPE_UNSEEN	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	file:	enum:typestatus
TYPE_USED_FOR_FUNCTION	dwarfout.c	92;"	d	file:
TYPE_XREF	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	file:	enum:typestatus
T_ARG	mips-tfile.c	/^  T_ARG		= 1,$/;"	e	file:	enum:coff_type
T_ASSERT	cccp.c	/^ T_ASSERT,	\/* `#assert', taken from system V.  *\/$/;"	e	file:	enum:node_type
T_BASE_FILE	cccp.c	/^ T_BASE_FILE,	\/* `__BASE_FILE__' *\/$/;"	e	file:	enum:node_type
T_C	c-common.c	1081;"	d	file:
T_CHAR	mips-tfile.c	/^  T_CHAR	= 2,$/;"	e	file:	enum:coff_type
T_CONST	cccp.c	/^ T_CONST,	\/* Constant value, used by `__STDC__' *\/$/;"	e	file:	enum:node_type
T_D	c-common.c	1079;"	d	file:
T_DATE	cccp.c	/^ T_DATE,	\/* `__DATE__' *\/$/;"	e	file:	enum:node_type
T_DEFINE	cccp.c	/^ T_DEFINE = 1,	\/* the `#define' keyword *\/$/;"	e	file:	enum:node_type
T_DISABLED	cccp.c	/^ T_DISABLED,	\/* macro temporarily turned off for rescan *\/$/;"	e	file:	enum:node_type
T_DOUBLE	mips-tfile.c	/^  T_DOUBLE	= 7,$/;"	e	file:	enum:coff_type
T_ELIF	cccp.c	/^ T_ELIF,	\/* `#elif' *\/$/;"	e	file:	enum:node_type
T_ELSE	cccp.c	/^ T_ELSE,	\/* `#else' *\/$/;"	e	file:	enum:node_type
T_ENDIF	cccp.c	/^ T_ENDIF,	\/* `#endif' *\/$/;"	e	file:	enum:node_type
T_ENUM	mips-tfile.c	/^  T_ENUM	= 10,$/;"	e	file:	enum:coff_type
T_ERROR	cccp.c	/^ T_ERROR,	\/* `#error' *\/$/;"	e	file:	enum:node_type
T_F	c-common.c	1078;"	d	file:
T_FILE	cccp.c	/^ T_FILE,	\/* `__FILE__' *\/$/;"	e	file:	enum:node_type
T_FLOAT	mips-tfile.c	/^  T_FLOAT	= 6,$/;"	e	file:	enum:coff_type
T_I	c-common.c	1070;"	d	file:
T_IDENT	cccp.c	/^ T_IDENT,	\/* `#ident', used on system V.  *\/$/;"	e	file:	enum:node_type
T_IF	cccp.c	/^ T_IF,		\/* the `#if' keyword *\/$/;"	e	file:	enum:node_type
T_IFDEF	cccp.c	/^ T_IFDEF,	\/* the `#ifdef' keyword *\/$/;"	e	file:	enum:node_type
T_IFNDEF	cccp.c	/^ T_IFNDEF,	\/* the `#ifndef' keyword *\/$/;"	e	file:	enum:node_type
T_IMMEDIATE_PREFIX_TYPE	cccp.c	/^ T_IMMEDIATE_PREFIX_TYPE,  \/* `__IMMEDIATE_PREFIX__' *\/$/;"	e	file:	enum:node_type
T_IMPORT	cccp.c	/^ T_IMPORT,      \/* the `#import' keyword *\/$/;"	e	file:	enum:node_type
T_INCLUDE	cccp.c	/^ T_INCLUDE,	\/* the `#include' keyword *\/$/;"	e	file:	enum:node_type
T_INCLUDE_LEVEL	cccp.c	/^ T_INCLUDE_LEVEL, \/* `__INCLUDE_LEVEL__' *\/$/;"	e	file:	enum:node_type
T_INCLUDE_NEXT	cccp.c	/^ T_INCLUDE_NEXT, \/* the `#include_next' keyword *\/$/;"	e	file:	enum:node_type
T_INT	mips-tfile.c	/^  T_INT		= 4,$/;"	e	file:	enum:coff_type
T_L	c-common.c	1071;"	d	file:
T_LD	c-common.c	1080;"	d	file:
T_LINE	cccp.c	/^ T_LINE,	\/* `#line' *\/$/;"	e	file:	enum:node_type
T_LL	c-common.c	1072;"	d	file:
T_LONG	mips-tfile.c	/^  T_LONG	= 5,$/;"	e	file:	enum:coff_type
T_MACRO	cccp.c	/^ T_MACRO,	\/* macro defined by `#define' *\/$/;"	e	file:	enum:node_type
T_MAX	mips-tfile.c	/^  T_MAX		= 16$/;"	e	file:	enum:coff_type
T_MOE	mips-tfile.c	/^  T_MOE		= 11,$/;"	e	file:	enum:coff_type
T_NULL	mips-tfile.c	/^  T_NULL	= 0,$/;"	e	file:	enum:coff_type
T_PCSTRING	cccp.c	/^ T_PCSTRING,	\/* precompiled string (hashval is KEYDEF *) *\/$/;"	e	file:	enum:node_type
T_PRAGMA	cccp.c	/^ T_PRAGMA,	\/* `#pragma' *\/$/;"	e	file:	enum:node_type
T_PTRDIFF_TYPE	cccp.c	/^ T_PTRDIFF_TYPE,   \/* `__PTRDIFF_TYPE__' *\/$/;"	e	file:	enum:node_type
T_REGISTER_PREFIX_TYPE	cccp.c	/^ T_REGISTER_PREFIX_TYPE,   \/* `__REGISTER_PREFIX__' *\/$/;"	e	file:	enum:node_type
T_S	c-common.c	1073;"	d	file:
T_SCCS	cccp.c	/^ T_SCCS,	\/* `#sccs', used on system V.  *\/$/;"	e	file:	enum:node_type
T_SHORT	mips-tfile.c	/^  T_SHORT	= 3,$/;"	e	file:	enum:coff_type
T_SIZE_TYPE	cccp.c	/^ T_SIZE_TYPE,   \/* `__SIZE_TYPE__' *\/$/;"	e	file:	enum:node_type
T_SPECLINE	cccp.c	/^ T_SPECLINE,	\/* special symbol `__LINE__' *\/$/;"	e	file:	enum:node_type
T_SPEC_DEFINED	cccp.c	/^ T_SPEC_DEFINED, \/* special `defined' macro for use in #if statements *\/$/;"	e	file:	enum:node_type
T_ST	c-common.c	1085;"	d	file:
T_STRUCT	mips-tfile.c	/^  T_STRUCT	= 8,$/;"	e	file:	enum:coff_type
T_TIME	cccp.c	/^ T_TIME,	\/* `__TIME__' *\/$/;"	e	file:	enum:node_type
T_UC	c-common.c	1082;"	d	file:
T_UCHAR	mips-tfile.c	/^  T_UCHAR	= 12,$/;"	e	file:	enum:coff_type
T_UI	c-common.c	1074;"	d	file:
T_UINT	mips-tfile.c	/^  T_UINT	= 14,$/;"	e	file:	enum:coff_type
T_UL	c-common.c	1075;"	d	file:
T_ULL	c-common.c	1076;"	d	file:
T_ULONG	mips-tfile.c	/^  T_ULONG	= 15,$/;"	e	file:	enum:coff_type
T_UNASSERT	cccp.c	/^ T_UNASSERT,	\/* `#unassert', taken from system V.  *\/$/;"	e	file:	enum:node_type
T_UNDEF	cccp.c	/^ T_UNDEF,	\/* `#undef' *\/$/;"	e	file:	enum:node_type
T_UNION	mips-tfile.c	/^  T_UNION	= 9,$/;"	e	file:	enum:coff_type
T_UNUSED	cccp.c	/^ T_UNUSED	\/* Used for something not defined.  *\/$/;"	e	file:	enum:node_type
T_US	c-common.c	1077;"	d	file:
T_USER_LABEL_PREFIX_TYPE	cccp.c	/^ T_USER_LABEL_PREFIX_TYPE, \/* `__USER_LABEL_PREFIX__' *\/$/;"	e	file:	enum:node_type
T_USHORT	mips-tfile.c	/^  T_USHORT	= 13,$/;"	e	file:	enum:coff_type
T_V	c-common.c	1083;"	d	file:
T_VERSION	cccp.c	/^ T_VERSION,	\/* `__VERSION__' *\/$/;"	e	file:	enum:node_type
T_VOID	sdbout.c	66;"	d	file:
T_W	c-common.c	1084;"	d	file:
T_WARNING	cccp.c	/^ T_WARNING,	\/* `#warning' *\/$/;"	e	file:	enum:node_type
T_WCHAR_TYPE	cccp.c	/^ T_WCHAR_TYPE,   \/* `__WCHAR_TYPE__' *\/$/;"	e	file:	enum:node_type
Thing	enquire.c	1697;"	d	file:
Thing	enquire.c	1753;"	d	file:
Thing	enquire.c	1839;"	d	file:
Thing	enquire.c	1927;"	d	file:
U	enquire.c	379;"	d	file:
U	enquire.c	388;"	d	file:
UCHAR_MAX	enquire.c	1370;"	d	file:
UCHAR_MAX	enquire.c	1390;"	d	file:
UCHAR_MAX	enquire.c	421;"	d	file:
UCHAR_MIN	enquire.c	422;"	d	file:
UDItype	libgcc2.c	/^typedef unsigned int UDItype	__attribute__ ((mode (DI)));$/;"	t	file:
UDItype	libgcc2.c	1143;"	d	file:
UNALIGNED_DOUBLE_INT_ASM_OP	dwarf2out.c	222;"	d	file:
UNALIGNED_INT_ASM_OP	dwarf2out.c	219;"	d	file:
UNALIGNED_INT_ASM_OP	dwarfout.c	470;"	d	file:
UNALIGNED_OFFSET_ASM_OP	dwarf2out.c	294;"	d	file:
UNALIGNED_SHORT_ASM_OP	dwarf2out.c	216;"	d	file:
UNALIGNED_SHORT_ASM_OP	dwarfout.c	467;"	d	file:
UNALIGNED_WORD_ASM_OP	dwarf2out.c	299;"	d	file:
UNARY	c-parse.c	47;"	d	file:
UNARY	cexp.c	20;"	d	file:
UNARY_PRIO	cppexp.c	674;"	d	file:
UNDEFINED	enquire.c	1997;"	d	file:
UNDERFLOW	real.c	1464;"	d	file:
UNGETC	c-common.c	2821;"	d	file:
UNGETC	c-lex.c	73;"	d	file:
UNGETC	c-lex.c	76;"	d	file:
UNION	c-parse.c	19;"	d	file:
UNIQUE_SECTION	varasm.c	287;"	d	file:
UNIQUE_SECTION_P	varasm.c	304;"	d	file:
UNIT_BITS	haifa-sched.c	297;"	d	file:
UNIT_BITS	sched.c	182;"	d	file:
UNIT_BLOCKED	haifa-sched.c	303;"	d	file:
UNIT_BLOCKED	sched.c	188;"	d	file:
UNK	real.c	133;"	d	file:
UNK	real.c	159;"	d	file:
UNKNOWN_FLOAT_FORMAT	libgcc2.c	1013;"	d	file:
UNKNOWN_STAB	xcoffout.c	178;"	d	file:
UNPROTOIZE	unprotoize.c	1;"	d	file:
UNROLL_COMPLETELY	unroll.c	/^enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };$/;"	e	file:	enum:unroll_types
UNROLL_MODULO	unroll.c	/^enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };$/;"	e	file:	enum:unroll_types
UNROLL_NAIVE	unroll.c	/^enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };$/;"	e	file:	enum:unroll_types
UNSET_RESERVED_WORD	c-lex.c	279;"	d	file:
UNSIGNED	cexp.c	147;"	d	file:
UPDATE_LOOP_RELATIONS	haifa-sched.c	1428;"	d	file:
UPROP	enquire.c	/^Procedure UPROP () {$/;"	f
UPROP	enquire.c	1737;"	d	file:
UPROP	enquire.c	1786;"	d	file:
UPROP	enquire.c	1870;"	d	file:
UPROP	enquire.c	1954;"	d	file:
UQItype	libgcc2.c	/^typedef unsigned int UQItype	__attribute__ ((mode (QI)));$/;"	t	file:
USER_LABEL_PREFIX	cccp.c	697;"	d	file:
USER_LABEL_PREFIX	cccp.c	700;"	d	file:
USER_LABEL_PREFIX	cppinit.c	78;"	d	file:
USER_LABEL_PREFIX	toplev.c	834;"	d	file:
USE_MMAP	collect2.c	114;"	d	file:
USItype	libgcc2.c	/^typedef unsigned int USItype	__attribute__ ((mode (SI)));$/;"	t	file:
USItype	libgcc2.c	1141;"	d	file:
U_CHAR	cccp.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_CHAR	cexp.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_MAX	enquire.c	1744;"	d	file:
U_MAX	enquire.c	1796;"	d	file:
U_MAX	enquire.c	1880;"	d	file:
U_MAX	enquire.c	1964;"	d	file:
U_MAX	enquire.c	2006;"	d	file:
Uname	enquire.c	1738;"	d	file:
Uname	enquire.c	1787;"	d	file:
Uname	enquire.c	1871;"	d	file:
Uname	enquire.c	1955;"	d	file:
Unexpected	enquire.c	438;"	d	file:
Unsigned	enquire.c	1038;"	d	file:
V	enquire.c	/^int V= 0,	\/* verbose *\/$/;"	v
VARRAY_HDR_SIZE	varray.c	29;"	d	file:
VAX_FLOAT_FORMAT	libgcc2.c	1015;"	d	file:
VA_ARGS_NAME_LENGTH	cccp.c	590;"	d	file:
VERSION	enquire.c	5;"	d	file:
VERSION_ASM_OP	dwarfout.c	464;"	d	file:
VFORK_STRING	collect2.c	33;"	d	file:
VFORK_STRING	collect2.c	35;"	d	file:
VMS_fopen	cccp.c	/^VMS_fopen (fname, type)$/;"	f	file:
VMS_freopen	cccp.c	/^VMS_freopen (fname, type, oldfile)$/;"	f	file:
VMS_fstat	cccp.c	/^VMS_fstat (fd, statbuf)$/;"	f	file:
VMS_open	cccp.c	/^VMS_open (fname, flags, prot)$/;"	f	file:
VMS_stat	cccp.c	/^VMS_stat (name, statbuf)$/;"	f	file:
VOLATILE	protoize.c	30;"	d	file:
VOLATILE	protoize.c	32;"	d	file:
Validate	enquire.c	/^Procedure Validate(prec, val, req, same) int prec, same; Long_double val, req; {$/;"	f
Validate	enquire.c	1714;"	d	file:
Validate	enquire.c	1772;"	d	file:
Validate	enquire.c	1858;"	d	file:
Validate	enquire.c	1940;"	d	file:
Validate	enquire.c	2044;"	d	file:
Volatile	enquire.c	376;"	d	file:
Volatile	enquire.c	385;"	d	file:
Vprintf	enquire.c	437;"	d	file:
WCHAR_BYTES	c-lex.c	103;"	d	file:
WCHAR_TYPE	c-decl.c	103;"	d	file:
WCHAR_TYPE	cccp.c	689;"	d	file:
WCHAR_TYPE	cccp.c	692;"	d	file:
WCHAR_TYPE	cppinit.c	70;"	d	file:
WCHAR_TYPE_SIZE	c-common.c	42;"	d	file:
WCHAR_TYPE_SIZE	c-common.c	44;"	d	file:
WCHAR_TYPE_SIZE	c-lex.c	96;"	d	file:
WCHAR_TYPE_SIZE	c-lex.c	98;"	d	file:
WCHAR_TYPE_SIZE	cexp.c	93;"	d	file:
WCHAR_TYPE_SIZE	cppexp.c	48;"	d	file:
WCHAR_TYPE_SIZE	dwarfout.c	143;"	d	file:
WCHAR_UNSIGNED	c-decl.c	73;"	d	file:
WCHAR_UNSIGNED	dwarfout.c	147;"	d	file:
WEAK_ALIAS	libgcc2.c	57;"	d	file:
WHILE	c-parse.c	22;"	d	file:
WHITE_PERCENT_COLON_TOKEN	cccp.c	/^  WHITE_PERCENT_COLON_TOKEN	\/* token spelled with %: and white space *\/$/;"	e	file:	enum:sharp_token_type
WHITE_SHARP_TOKEN	cccp.c	/^  WHITE_SHARP_TOKEN,		\/* token spelled with # and white space *\/$/;"	e	file:	enum:sharp_token_type
WORD_ALIGN	mips-tfile.c	900;"	d	file:
WORD_SIZE	libgcc2.c	1005;"	d	file:
WORD_SIZE	libgcc2.c	776;"	d	file:
WORD_SIZE	libgcc2.c	818;"	d	file:
WORD_SIZE	libgcc2.c	860;"	d	file:
WORD_SIZE	libgcc2.c	902;"	d	file:
WORD_SIZE	libgcc2.c	948;"	d	file:
WORD_SIZE	libgcc2.c	967;"	d	file:
WORD_SIZE	libgcc2.c	986;"	d	file:
WORD_SWITCH_TAKES_ARG	cppspec.c	57;"	d	file:
WORD_SWITCH_TAKES_ARG	gcc.c	547;"	d	file:
WORST_CLASS	haifa-sched.c	2370;"	d	file:
WRITE	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	file:	enum:match::<anonymous>
W_options	toplev.c	/^lang_independent_options W_options[] =$/;"	v
XFbignan	real.c	/^unsigned EMUSHORT XFbignan[6] =$/;"	v
XFlittlenan	real.c	/^unsigned EMUSHORT XFlittlenan[6] = {0, 0, 0, 0xc000, 0xffff, 0};$/;"	v
XFtype	libgcc2.c	/^typedef		float XFtype	__attribute__ ((mode (XF)));$/;"	t	file:
XOPEN_EXTENDED_SYMBOL	fix-header.c	172;"	d	file:
XOPEN_EXTENDED_SYMBOL	fix-header.c	175;"	d	file:
XOPEN_SYMBOL	fix-header.c	170;"	d	file:
XOPEN_SYMBOL	fix-header.c	174;"	d	file:
XOR_PRIO	cppexp.c	667;"	d	file:
YYABORT	c-parse.c	1277;"	d	file:
YYABORT	cexp.c	406;"	d	file:
YYACCEPT	c-parse.c	1276;"	d	file:
YYACCEPT	cexp.c	405;"	d	file:
YYBACKUP	c-parse.c	1285;"	d	file:
YYBACKUP	cexp.c	414;"	d	file:
YYBISON	c-parse.c	6;"	d	file:
YYBISON	cexp.c	6;"	d	file:
YYDEBUG	c-lex.c	65;"	d	file:
YYDEBUG	c-parse.c	95;"	d	file:
YYEMPTY	c-parse.c	1274;"	d	file:
YYEMPTY	cexp.c	403;"	d	file:
YYEOF	c-parse.c	1275;"	d	file:
YYEOF	cexp.c	404;"	d	file:
YYERRCODE	c-parse.c	1298;"	d	file:
YYERRCODE	cexp.c	427;"	d	file:
YYERROR	c-parse.c	1278;"	d	file:
YYERROR	cexp.c	407;"	d	file:
YYERROR1	c-parse.c	92;"	d	file:
YYFAIL	c-parse.c	1283;"	d	file:
YYFAIL	cexp.c	412;"	d	file:
YYFINAL	c-parse.c	137;"	d	file:
YYFINAL	cexp.c	165;"	d	file:
YYFLAG	c-parse.c	138;"	d	file:
YYFLAG	cexp.c	166;"	d	file:
YYINITDEPTH	c-parse.c	1345;"	d	file:
YYINITDEPTH	cexp.c	474;"	d	file:
YYLAST	c-parse.c	717;"	d	file:
YYLAST	cexp.c	292;"	d	file:
YYLEX	c-parse.c	1301;"	d	file:
YYLEX	c-parse.c	1307;"	d	file:
YYLEX	c-parse.c	1309;"	d	file:
YYLEX	c-parse.c	1313;"	d	file:
YYLEX	c-parse.c	1315;"	d	file:
YYLEX	cexp.c	430;"	d	file:
YYLEX	cexp.c	436;"	d	file:
YYLEX	cexp.c	438;"	d	file:
YYLEX	cexp.c	442;"	d	file:
YYLEX	cexp.c	444;"	d	file:
YYMAXDEPTH	c-parse.c	1352;"	d	file:
YYMAXDEPTH	c-parse.c	1356;"	d	file:
YYMAXDEPTH	cexp.c	481;"	d	file:
YYMAXDEPTH	cexp.c	485;"	d	file:
YYNTBASE	c-parse.c	139;"	d	file:
YYNTBASE	cexp.c	167;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1413;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1416;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1420;"	d	file:
YYPARSE_PARAM_ARG	cexp.c	542;"	d	file:
YYPARSE_PARAM_ARG	cexp.c	545;"	d	file:
YYPARSE_PARAM_ARG	cexp.c	549;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1414;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1417;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1421;"	d	file:
YYPARSE_PARAM_DECL	cexp.c	543;"	d	file:
YYPARSE_PARAM_DECL	cexp.c	546;"	d	file:
YYPARSE_PARAM_DECL	cexp.c	550;"	d	file:
YYPOPSTACK	c-parse.c	1446;"	d	file:
YYPOPSTACK	c-parse.c	1448;"	d	file:
YYPOPSTACK	cexp.c	575;"	d	file:
YYPOPSTACK	cexp.c	577;"	d	file:
YYPRINT	c-parse.c	125;"	d	file:
YYRECOVERING	c-parse.c	1284;"	d	file:
YYRECOVERING	cexp.c	413;"	d	file:
YYSTYPE	c-parse.c	/^	char *filename; int lineno; int ends_in_label; } YYSTYPE;$/;"	t	file:
YYSTYPE	cexp.c	/^} YYSTYPE;$/;"	t	file:
YYTERROR	c-parse.c	1297;"	d	file:
YYTERROR	cexp.c	426;"	d	file:
YYTRANSLATE	c-parse.c	141;"	d	file:
YYTRANSLATE	cexp.c	169;"	d	file:
ZERO	enquire.c	1706;"	d	file:
ZERO	enquire.c	1762;"	d	file:
ZERO	enquire.c	1848;"	d	file:
ZERO	enquire.c	1918;"	d	file:
_POSIX_SOURCE	protoize.c	56;"	d	file:
_POSIX_SOURCE	protoize.c	57;"	d	file:
__CTOR_END__	crtstuff.c	/^STATIC func_ptr __CTOR_END__[1] = { (func_ptr) 0 };$/;"	v
__CTOR_END__	crtstuff.c	/^static func_ptr __CTOR_END__[];$/;"	v	file:
__CTOR_LIST__	crtstuff.c	/^STATIC func_ptr __CTOR_LIST__[1] __attribute__ ((__unused__))$/;"	v
__CTOR_LIST__	libgcc2.c	/^func_ptr __CTOR_LIST__[2] = {0, 0};$/;"	v
__CTOR_LIST__	libgcc2.c	/^func_ptr __CTOR_LIST__[2];$/;"	v
__DTOR_END__	crtstuff.c	/^STATIC func_ptr __DTOR_END__[1] __attribute__ ((__unused__))$/;"	v
__DTOR_LIST__	crtstuff.c	/^STATIC func_ptr __DTOR_LIST__[1] = { (func_ptr) (-1) };$/;"	v
__DTOR_LIST__	crtstuff.c	/^static func_ptr __DTOR_LIST__[];$/;"	v	file:
__DTOR_LIST__	libgcc2.c	/^func_ptr __DTOR_LIST__[2] = {0, 0};$/;"	v
__DTOR_LIST__	libgcc2.c	/^func_ptr __DTOR_LIST__[2];$/;"	v
__EH_FRAME_BEGIN__	crtstuff.c	/^char __EH_FRAME_BEGIN__[] = { };$/;"	v
__EH_FRAME_BEGIN__	crtstuff.c	/^static char __EH_FRAME_BEGIN__[];$/;"	v	file:
__FRAME_END__	crtstuff.c	/^STATIC ui32 __FRAME_END__[] __attribute__ ((__unused__)) = { 0 };$/;"	v
__FRAME_END__	crtstuff.c	/^static ui32 __FRAME_END__[] __attribute__ ((__unused__)) = { 0 };$/;"	v	file:
__GCC_FLOAT_NOT_NEEDED	enquire.c	397;"	d	file:
__LINE__	mips-tfile.c	610;"	d	file:
__STDC__	protoize.c	26;"	d	file:
__VERSION__	toplev.c	5525;"	d	file:
__adddf3	floatlib.c	/^__adddf3 (double a1, double a2)$/;"	f
__adddf3	libgcc1.c	/^__adddf3 (a, b)$/;"	f
__addsf3	floatlib.c	/^__addsf3 (float a1, float a2)$/;"	f
__addsf3	libgcc1.c	/^__addsf3 (a, b)$/;"	f
__alignof__	bitmap.c	117;"	d	file:
__ashldi3	libgcc2.c	/^__ashldi3 (DItype u, word_type b)$/;"	f
__ashlsi3	libgcc1.c	/^__ashlsi3 (a, b)$/;"	f
__ashrdi3	libgcc2.c	/^__ashrdi3 (DItype u, word_type b)$/;"	f
__ashrsi3	libgcc1.c	/^__ashrsi3 (a, b)$/;"	f
__bb	libgcc2.c	/^} __bb;$/;"	v
__bb_exit_func	libgcc2.c	/^__bb_exit_func (void)$/;"	f
__bb_exit_trace_func	libgcc2.c	/^__bb_exit_trace_func ()$/;"	f	file:
__bb_init_file	libgcc2.c	/^__bb_init_file (struct bb *blocks)$/;"	f	file:
__bb_init_func	libgcc2.c	/^__bb_init_func (struct bb *blocks)$/;"	f
__bb_init_prg	libgcc2.c	/^__bb_init_prg ()$/;"	f	file:
__bb_init_trace_func	libgcc2.c	/^__bb_init_trace_func (struct bb *blocks, unsigned long blockno)$/;"	f
__bb_trace_func	libgcc2.c	/^__bb_trace_func ()$/;"	f
__bb_trace_func_ret	libgcc2.c	/^__bb_trace_func_ret ()$/;"	f	file:
__bb_trace_ret	libgcc2.c	/^__bb_trace_ret ()$/;"	f
__builtin_saveregs	libgcc2.c	/^__builtin_saveregs ()$/;"	f
__clear_cache	libgcc2.c	/^__clear_cache (char *beg, char *end)$/;"	f
__clear_insn_cache	libgcc2.c	/^__clear_insn_cache ()$/;"	f
__clz_tab	libgcc2.c	/^static const UQItype __clz_tab[] =$/;"	v	file:
__cmpdf2	floatlib.c	/^__cmpdf2 (double a1, double a2)$/;"	f
__cmpdi2	libgcc2.c	/^__cmpdi2 (DItype a, DItype b)$/;"	f
__cmpsf2	floatlib.c	/^__cmpsf2 (float a1, float a2)$/;"	f
__default_terminate	libgcc2.c	/^__default_terminate ()$/;"	f
__define_stab	mips-tdump.c	296;"	d	file:
__define_stab	mips-tdump.c	299;"	d	file:
__dereg_frame_dtor	crtstuff.c	/^__dereg_frame_dtor (void)$/;"	f	file:
__deregister_frame	frame.c	/^__deregister_frame (void *begin)$/;"	f
__deregister_frame_info	frame.c	/^__deregister_frame_info (void *begin)$/;"	f
__divdf3	floatlib.c	/^__divdf3 (double a1, double a2)$/;"	f
__divdf3	libgcc1.c	/^__divdf3 (a, b)$/;"	f
__divdi3	libgcc2.c	/^__divdi3 (DItype u, DItype v)$/;"	f
__divsf3	floatlib.c	/^__divsf3 (float a1, float a2)$/;"	f
__divsf3	libgcc1.c	/^__divsf3 (a, b)$/;"	f
__divsi3	libgcc1.c	/^__divsi3 (a, b)$/;"	f
__do_global_ctors	crtstuff.c	/^__do_global_ctors (void)$/;"	f
__do_global_ctors	libgcc2.c	/^__do_global_ctors ()$/;"	f
__do_global_ctors_aux	crtstuff.c	/^__do_global_ctors_aux (void)	\/* prologue goes in .init section *\/$/;"	f	file:
__do_global_ctors_aux	crtstuff.c	/^__do_global_ctors_aux (void)	\/* prologue goes in .text section *\/$/;"	f	file:
__do_global_ctors_aux	crtstuff.c	/^__do_global_ctors_aux (void)$/;"	f	file:
__do_global_dtors	crtstuff.c	/^__do_global_dtors (void)$/;"	f
__do_global_dtors	libgcc2.c	/^__do_global_dtors ()$/;"	f
__do_global_dtors_aux	crtstuff.c	/^__do_global_dtors_aux (void)$/;"	f	file:
__dummy	libgcc2.c	/^__dummy () {}$/;"	f
__eh_rtime_match	libgcc2.c	/^__eh_rtime_match (void *rtime)$/;"	f
__empty	libgcc2.c	/^__empty ()$/;"	f
__enable_execute_stack	libgcc2.c	/^__enable_execute_stack ()$/;"	f
__enable_execute_stack	libgcc2.c	/^__enable_execute_stack (char *addr)$/;"	f
__eprintf	libgcc2.c	/^__eprintf (const char *string, const char *expression,$/;"	f
__eqdf2	floatlib.c	/^__eqdf2 (double a1, double a2)$/;"	f
__eqdf2	libgcc1.c	/^__eqdf2 (a, b)$/;"	f
__eqsf2	libgcc1.c	/^__eqsf2 (a, b)$/;"	f
__extendsfdf2	floatlib.c	/^__extendsfdf2 (float a1)$/;"	f
__extendsfdf2	libgcc1.c	/^__extendsfdf2 (a)$/;"	f
__ffsdi2	libgcc2.c	/^__ffsdi2 (DItype u)$/;"	f
__fixdfdi	floatlib.c	/^__fixdfdi (double a1)$/;"	f
__fixdfdi	libgcc2.c	/^__fixdfdi (DFtype a)$/;"	f
__fixdfsi	floatlib.c	/^__fixdfsi (double a1)$/;"	f
__fixdfsi	libgcc1.c	/^__fixdfsi (a)$/;"	f
__fixsfdi	libgcc2.c	/^__fixsfdi (SFtype a)$/;"	f
__fixsfsi	libgcc1.c	/^__fixsfsi (a)$/;"	f
__fixtfdi	libgcc2.c	/^__fixtfdi (TFtype a)$/;"	f
__fixunsdfdi	floatlib.c	/^__fixunsdfdi (double a1)$/;"	f
__fixunsdfdi	libgcc2.c	/^__fixunsdfdi (DFtype a)$/;"	f
__fixunsdfsi	floatlib.c	/^__fixunsdfsi (double a1)$/;"	f
__fixunsdfsi	libgcc2.c	/^__fixunsdfsi (DFtype a)$/;"	f
__fixunssfdi	libgcc2.c	/^__fixunssfdi (SFtype original_a)$/;"	f
__fixunssfsi	libgcc2.c	/^__fixunssfsi (SFtype a)$/;"	f
__fixunstfdi	libgcc2.c	/^__fixunstfdi (TFtype a)$/;"	f
__fixunsxfdi	libgcc2.c	/^__fixunsxfdi (XFtype a)$/;"	f
__fixunsxfsi	libgcc2.c	/^__fixunsxfsi (XFtype a)$/;"	f
__fixxfdi	libgcc2.c	/^__fixxfdi (XFtype a)$/;"	f
__floatdidf	floatlib.c	/^__floatdidf (register long long a1)$/;"	f
__floatdidf	libgcc2.c	/^__floatdidf (DItype u)$/;"	f
__floatdisf	floatlib.c	/^__floatdisf (register long long a1)$/;"	f
__floatdisf	libgcc2.c	/^__floatdisf (DItype u)$/;"	f
__floatditf	libgcc2.c	/^__floatditf (DItype u)$/;"	f
__floatdixf	libgcc2.c	/^__floatdixf (DItype u)$/;"	f
__floatsidf	floatlib.c	/^__floatsidf (register long a1)$/;"	f
__floatsidf	libgcc1.c	/^__floatsidf (a)$/;"	f
__floatsisf	floatlib.c	/^__floatsisf (register long a1)$/;"	f
__floatsisf	libgcc1.c	/^__floatsisf (a)$/;"	f
__frame_dummy	crtstuff.c	/^__frame_dummy (void)$/;"	f
__frame_state_for	frame.c	/^__frame_state_for (void *pc_target, struct frame_state *state_in)$/;"	f
__gcc_bcmp	libgcc2.c	/^__gcc_bcmp (unsigned char *s1, unsigned char *s2, size_t size)$/;"	f
__gedf2	floatlib.c	/^__gedf2 (double a1, double a2)$/;"	f
__gedf2	libgcc1.c	/^__gedf2 (a, b)$/;"	f
__gesf2	libgcc1.c	/^__gesf2 (a, b)$/;"	f
__get_dynamic_handler_chain	libgcc2.c	/^__get_dynamic_handler_chain ()$/;"	f
__get_eh_context	libgcc2.c	/^__get_eh_context ()$/;"	f
__get_eh_info	libgcc2.c	/^__get_eh_info ()$/;"	f
__get_eh_table_language	libgcc2.c	/^__get_eh_table_language (exception_descriptor *table)$/;"	f
__get_eh_table_version	libgcc2.c	/^__get_eh_table_version (exception_descriptor *table) $/;"	f
__gtdf2	floatlib.c	/^__gtdf2 (double a1, double a2)$/;"	f
__gtdf2	libgcc1.c	/^__gtdf2 (a, b)$/;"	f
__gtsf2	libgcc1.c	/^__gtsf2 (a, b)$/;"	f
__inline	haifa-sched.c	980;"	d	file:
__inline	sched.c	460;"	d	file:
__ledf2	floatlib.c	/^__ledf2 (double a1, double a2)$/;"	f
__ledf2	libgcc1.c	/^__ledf2 (a, b)$/;"	f
__lesf2	libgcc1.c	/^__lesf2 (a, b)$/;"	f
__lshrdi3	libgcc2.c	/^__lshrdi3 (DItype u, word_type b)$/;"	f
__lshrsi3	libgcc1.c	/^__lshrsi3 (a, b)$/;"	f
__ltdf2	floatlib.c	/^__ltdf2 (double a1, double a2)$/;"	f
__ltdf2	libgcc1.c	/^__ltdf2 (a, b)$/;"	f
__ltsf2	libgcc1.c	/^__ltsf2 (a, b)$/;"	f
__moddi3	libgcc2.c	/^__moddi3 (DItype u, DItype v)$/;"	f
__modsi3	libgcc1.c	/^__modsi3 (a, b)$/;"	f
__muldf3	floatlib.c	/^__muldf3 (double a1, double a2)$/;"	f
__muldf3	libgcc1.c	/^__muldf3 (a, b)$/;"	f
__muldi3	libgcc2.c	/^__muldi3 (DItype u, DItype v)$/;"	f
__mulsf3	floatlib.c	/^__mulsf3 (float a1, float a2)$/;"	f
__mulsf3	libgcc1.c	/^__mulsf3 (a, b)$/;"	f
__mulsi3	libgcc1.c	/^__mulsi3 (a, b)$/;"	f
__nedf2	floatlib.c	/^__nedf2 (double a1, double a2)$/;"	f
__nedf2	libgcc1.c	/^__nedf2 (a, b)$/;"	f
__negdf2	floatlib.c	/^__negdf2 (double a1)$/;"	f
__negdf2	libgcc1.c	/^__negdf2 (a)$/;"	f
__negdi2	libgcc2.c	/^__negdi2 (DItype u)$/;"	f	file:
__negsf2	floatlib.c	/^__negsf2 (float a1)$/;"	f
__negsf2	libgcc1.c	/^__negsf2 (a)$/;"	f
__nesf2	libgcc1.c	/^__nesf2 (a, b)$/;"	f
__proto	mips-tdump.c	50;"	d	file:
__proto	mips-tfile.c	613;"	d	file:
__pure_virtual	libgcc2.c	/^__pure_virtual ()$/;"	f
__reg_frame_ctor	crtstuff.c	/^__reg_frame_ctor (void)$/;"	f	file:
__register_frame	frame.c	/^__register_frame (void *begin)$/;"	f
__register_frame_info	frame.c	/^__register_frame_info (void *begin, struct object *ob)$/;"	f
__register_frame_info_table	frame.c	/^__register_frame_info_table (void *begin, struct object *ob)$/;"	f
__register_frame_table	frame.c	/^__register_frame_table (void *begin)$/;"	f
__rethrow	libgcc2.c	/^__rethrow (index)$/;"	f
__shtab	libgcc2.c	/^unsigned int __shtab[] = {$/;"	v
__sjpopnthrow	libgcc2.c	/^__sjpopnthrow ()$/;"	f
__sjthrow	libgcc2.c	/^__sjthrow ()$/;"	f
__start	libgcc1-test.c	/^void __start() {}$/;"	f
__subdf3	floatlib.c	/^__subdf3 (double a1, double a2)$/;"	f
__subdf3	libgcc1.c	/^__subdf3 (a, b)$/;"	f
__subsf3	floatlib.c	/^__subsf3 (float a1, float a2)$/;"	f
__subsf3	libgcc1.c	/^__subsf3 (a, b)$/;"	f
__terminate	libgcc2.c	/^__terminate ()$/;"	f
__terminate_func	libgcc2.c	/^void (*__terminate_func)() = __default_terminate;$/;"	v
__throw	libgcc2.c	/^__throw ()$/;"	f
__throw_type_match	libgcc2.c	/^__throw_type_match (void *catch_type, void *throw_type, void *obj)$/;"	f
__truncdfsf2	floatlib.c	/^__truncdfsf2 (double a1)$/;"	f
__truncdfsf2	libgcc1.c	/^__truncdfsf2 (a)$/;"	f
__ucmpdi2	libgcc2.c	/^__ucmpdi2 (DItype a, DItype b)$/;"	f
__udiv_w_sdiv	libgcc2.c	/^__udiv_w_sdiv (USItype *rp __attribute__ ((__unused__)),$/;"	f
__udiv_w_sdiv	libgcc2.c	/^__udiv_w_sdiv (USItype *rp, USItype a1, USItype a0, USItype d)$/;"	f
__udivdi3	libgcc2.c	/^__udivdi3 (UDItype n, UDItype d)$/;"	f
__udivmoddi4	libgcc2.c	/^__udivmoddi4 (UDItype n, UDItype d, UDItype *rp)$/;"	f	file:
__udivsi3	libgcc1.c	/^__udivsi3 (a, b)$/;"	f
__umoddi3	libgcc2.c	/^__umoddi3 (UDItype u, UDItype v)$/;"	f
__umodsi3	libgcc1.c	/^__umodsi3 (a, b)$/;"	f
__unwinding_cleanup	libgcc2.c	/^__unwinding_cleanup ()$/;"	f
__yy_memcpy	c-parse.c	/^__yy_memcpy (char *to, char *from, int count)$/;"	f	file:
__yy_memcpy	c-parse.c	/^__yy_memcpy (to, from, count)$/;"	f	file:
__yy_memcpy	c-parse.c	1365;"	d	file:
__yy_memcpy	cexp.c	/^__yy_memcpy (char *to, char *from, int count)$/;"	f	file:
__yy_memcpy	cexp.c	/^__yy_memcpy (to, from, count)$/;"	f	file:
__yy_memcpy	cexp.c	494;"	d	file:
_ddip	protoize.c	/^    const def_dec_info *	_ddip;$/;"	m	union:hash_table_entry_struct::<anonymous>
_doprnt	doprint.c	/^_doprnt (format, ap, stream)$/;"	f
_doprnt	doprint.c	23;"	d	file:
_doprnt	doprint.c	26;"	d	file:
_exit_dummy_decl	libgcc2.c	/^int _exit_dummy_decl = 0;	\/* prevent compiler & linker warnings *\/$/;"	v
_exit_dummy_ref	libgcc2.c	/^int *_exit_dummy_ref = &_exit_dummy_decl;$/;"	v
_factor	unroll.c	/^struct _factor { int factor, count; } factors[NUM_FACTORS]$/;"	s	file:
_fip	protoize.c	/^    file_info *			_fip;$/;"	m	union:hash_table_entry_struct::<anonymous>
_info	protoize.c	/^  } _info;$/;"	m	struct:hash_table_entry_struct
_mcleanup	gmon.c	/^_mcleanup()$/;"	f
_pseudo_ops	mips-tfile.c	/^typedef struct _pseudo_ops {$/;"	s	file:
_start	libgcc1-test.c	/^void _start() {}$/;"	f
abbrev_die_table	dwarf2out.c	/^static dw_die_ref *abbrev_die_table;$/;"	v	file:
abbrev_die_table_allocated	dwarf2out.c	/^static unsigned abbrev_die_table_allocated;$/;"	v	file:
abbrev_die_table_in_use	dwarf2out.c	/^static unsigned abbrev_die_table_in_use;$/;"	v	file:
abbrev_section_label	dwarf2out.c	/^static char abbrev_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
abort	cpphash.c	29;"	d	file:
abort	frame.c	62;"	d	file:
abort	gcov.c	48;"	d	file:
abort	gen-protos.c	23;"	d	file:
abort	gengenrtl.c	24;"	d	file:
abort	libgcc1.c	39;"	d	file:
abort	libgcc2.c	53;"	d	file:
abort	protoize.c	62;"	d	file:
abs_optab	optabs.c	/^optab abs_optab;$/;"	v
absolute_filename	cccp.c	/^absolute_filename (filename)$/;"	f	file:
abspath	protoize.c	/^abspath (cwd, rel_filename)$/;"	f	file:
abstract_origin_attribute	dwarfout.c	/^abstract_origin_attribute (origin)$/;"	f	file:
accessor_from_format	gengenrtl.c	/^accessor_from_format (c)$/;"	f	file:
actual_directory	cppfiles.c	/^actual_directory (pfile, fname)$/;"	f	file:
actual_hazard	haifa-sched.c	/^actual_hazard (unit, insn, clock, cost)$/;"	f	file:
actual_hazard	sched.c	/^actual_hazard (unit, insn, clock, cost)$/;"	f	file:
actual_hazard_this_instance	haifa-sched.c	/^actual_hazard_this_instance (unit, instance, insn, clock, cost)$/;"	f	file:
actual_hazard_this_instance	sched.c	/^actual_hazard_this_instance (unit, instance, insn, clock, cost)$/;"	f	file:
add_AT_addr	dwarf2out.c	/^add_AT_addr (die, attr_kind, addr)$/;"	f	file:
add_AT_die_ref	dwarf2out.c	/^add_AT_die_ref (die, attr_kind, targ_die)$/;"	f	file:
add_AT_fde_ref	dwarf2out.c	/^add_AT_fde_ref (die, attr_kind, targ_fde)$/;"	f	file:
add_AT_flag	dwarf2out.c	/^add_AT_flag (die, attr_kind, flag)$/;"	f	file:
add_AT_float	dwarf2out.c	/^add_AT_float (die, attr_kind, length, array)$/;"	f	file:
add_AT_int	dwarf2out.c	/^add_AT_int (die, attr_kind, int_val)$/;"	f	file:
add_AT_lbl_id	dwarf2out.c	/^add_AT_lbl_id (die, attr_kind, lbl_id)$/;"	f	file:
add_AT_lbl_offset	dwarf2out.c	/^add_AT_lbl_offset (die, attr_kind, label)$/;"	f	file:
add_AT_loc	dwarf2out.c	/^add_AT_loc (die, attr_kind, loc)$/;"	f	file:
add_AT_location_description	dwarf2out.c	/^add_AT_location_description (die, attr_kind, rtl)$/;"	f	file:
add_AT_long_long	dwarf2out.c	/^add_AT_long_long (die, attr_kind, val_hi, val_low)$/;"	f	file:
add_AT_string	dwarf2out.c	/^add_AT_string (die, attr_kind, str)$/;"	f	file:
add_AT_unsigned	dwarf2out.c	/^add_AT_unsigned (die, attr_kind, unsigned_val)$/;"	f	file:
add_abstract_origin_attribute	dwarf2out.c	/^add_abstract_origin_attribute (die, origin)$/;"	f	file:
add_arange	dwarf2out.c	/^add_arange (decl, die)$/;"	f	file:
add_assembler_option	gcc.c	/^add_assembler_option (option, len)					$/;"	f	file:
add_attribute	c-common.c	/^add_attribute (id, string, min_len, max_len, decl_req)$/;"	f	file:
add_auto_inc_notes	reload1.c	/^add_auto_inc_notes (insn, x)$/;"	f	file:
add_aux_sym_rndx	mips-tfile.c	/^add_aux_sym_rndx (file_index, sym_index)$/;"	f
add_aux_sym_symint	mips-tfile.c	/^add_aux_sym_symint (aux_word)$/;"	f
add_aux_sym_tir	mips-tfile.c	/^add_aux_sym_tir (t, state, hash_tbl)$/;"	f
add_bb	final.c	/^add_bb (file)$/;"	f	file:
add_bb_string	final.c	/^add_bb_string (string, perm_p)$/;"	f	file:
add_bit_offset_attribute	dwarf2out.c	/^add_bit_offset_attribute (die, decl)$/;"	f	file:
add_bit_size_attribute	dwarf2out.c	/^add_bit_size_attribute (die, decl)$/;"	f	file:
add_bound_info	dwarf2out.c	/^add_bound_info (subrange_die, bound_attr, bound)$/;"	f	file:
add_branch_dependences	haifa-sched.c	/^add_branch_dependences (head, tail)$/;"	f	file:
add_byte_size_attribute	dwarf2out.c	/^add_byte_size_attribute (die, tree_node)$/;"	f	file:
add_bytes	mips-tfile.c	/^add_bytes (vp, input_ptr, nitems)$/;"	f
add_case_node	stmt.c	/^add_case_node (low, high, label, duplicate)$/;"	f	file:
add_cfi	dwarf2out.c	/^add_cfi (list_head, cfi)$/;"	f	file:
add_child_die	dwarf2out.c	/^add_child_die (die, child_die)$/;"	f	file:
add_const_value_attribute	dwarf2out.c	/^add_const_value_attribute (die, rtl)$/;"	f	file:
add_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
add_cost	loop.c	/^static int add_cost;$/;"	v	file:
add_data_member_location_attribute	dwarf2out.c	/^add_data_member_location_attribute (die, decl)$/;"	f	file:
add_dependence	haifa-sched.c	/^add_dependence (insn, elem, dep_type)$/;"	f	file:
add_dependence	sched.c	/^add_dependence (insn, elem, dep_type)$/;"	f	file:
add_double	fold-const.c	/^add_double (l1, h1, l2, h2, lv, hv)$/;"	f
add_dwarf_attr	dwarf2out.c	/^add_dwarf_attr (die, attr)$/;"	f	file:
add_eh_table_entry	except.c	/^add_eh_table_entry (n)$/;"	f
add_ent	doschk.c	/^add_ent (ent)$/;"	f
add_equal_note	optabs.c	/^add_equal_note (seq, target, code, op0, op1)$/;"	f	file:
add_ext_symbol	mips-tfile.c	/^add_ext_symbol (str_start, str_end_p1, type, storage, value, indx, ifd)$/;"	f
add_fde_cfi	dwarf2out.c	/^add_fde_cfi (label, cfi)$/;"	f	file:
add_fdes	frame.c	/^add_fdes (fde *this_fde, fde_accumulator *accu, void **beg_ptr, void **end_ptr)$/;"	f	file:
add_file	mips-tfile.c	/^add_file (file_start, file_end_p1)$/;"	f
add_func_table	collect2.c	/^add_func_table (hdr_p, load_array, sym, type)$/;"	f	file:
add_global_decls	protoize.c	/^add_global_decls (file_p, clean_text_p)$/;"	f	file:
add_hash	gen-protos.c	/^add_hash (fname)$/;"	f	file:
add_incomplete_type	dwarf2out.c	/^add_incomplete_type (type)$/;"	f	file:
add_incomplete_type	dwarfout.c	/^add_incomplete_type (type)$/;"	f	file:
add_insn	emit-rtl.c	/^add_insn (insn)$/;"	f
add_insn_after	emit-rtl.c	/^add_insn_after (insn, after)$/;"	f
add_insn_before	emit-rtl.c	/^add_insn_before (insn, before)$/;"	f
add_insn_mem_dependence	haifa-sched.c	/^add_insn_mem_dependence (insn_list, mem_list, insn, mem)$/;"	f	file:
add_insn_mem_dependence	sched.c	/^add_insn_mem_dependence (insn_list, mem_list, insn, mem)$/;"	f	file:
add_int_list_node	flow.c	/^add_int_list_node (blk_list, list, val)$/;"	f	file:
add_ixpansion	c-iterate.c	/^add_ixpansion (idecl, pro_start, pro_end, epi_start, epi_end)$/;"	f	file:
add_label_notes	gcse.c	/^add_label_notes (x, insn)$/;"	f	file:
add_label_notes	loop.c	/^add_label_notes (x, insns)$/;"	f	file:
add_linker_option	gcc.c	/^add_linker_option (option, len)					$/;"	f	file:
add_loc_descr	dwarf2out.c	/^add_loc_descr (list_head, descr)$/;"	f	file:
add_local_decl	protoize.c	/^add_local_decl (def_dec_p, clean_text_p)$/;"	f	file:
add_local_symbol	mips-tfile.c	/^add_local_symbol (str_start, str_end_p1, type, storage, value, indx)$/;"	f
add_location_or_const_value_attribute	dwarf2out.c	/^add_location_or_const_value_attribute (die, decl)$/;"	f	file:
add_name_and_src_coords_attributes	dwarf2out.c	/^add_name_and_src_coords_attributes (die, decl)$/;"	f	file:
add_name_attribute	dwarf2out.c	/^add_name_attribute (die, name_string)$/;"	f	file:
add_new_handler	except.c	/^add_new_handler (region, newhandler)$/;"	f
add_optab	optabs.c	/^optab add_optab;$/;"	v
add_partial_entry	except.c	/^add_partial_entry (handler)$/;"	f
add_pending_init	c-typeck.c	/^add_pending_init (purpose, value)$/;"	f	file:
add_pred_succ	flow.c	/^add_pred_succ (pred_bb, succ_bb, s_preds, s_succs, num_preds, num_succs)$/;"	f	file:
add_prefix	collect2.c	/^add_prefix (pprefix, prefix)$/;"	f	file:
add_prefix	gcc.c	/^add_prefix (pprefix, prefix, component, first, require_machine_suffix, warn)$/;"	f	file:
add_preprocessor_option	gcc.c	/^add_preprocessor_option (option, len)					$/;"	f	file:
add_procedure	mips-tfile.c	/^add_procedure (func_start, func_end_p1)$/;"	f
add_prototyped_attribute	dwarf2out.c	/^add_prototyped_attribute (die, func_type)$/;"	f	file:
add_pubname	dwarf2out.c	/^add_pubname (decl, die)$/;"	f	file:
add_pure_or_virtual_attribute	dwarf2out.c	/^add_pure_or_virtual_attribute (die, func_decl)$/;"	f	file:
add_sibling_attributes	dwarf2out.c	/^add_sibling_attributes(die)$/;"	f	file:
add_src_coords_attributes	dwarf2out.c	/^add_src_coords_attributes (die, decl)$/;"	f	file:
add_string	mips-tfile.c	/^add_string (vp, hash_tbl, start, end_p1, ret_hash)$/;"	f
add_subscript_info	dwarf2out.c	/^add_subscript_info (type_die, type)$/;"	f	file:
add_symbol	protoize.c	/^add_symbol (p, s)$/;"	f	file:
add_symbols	fix-header.c	/^add_symbols (flags, names)$/;"	f
add_to_delay_list	reorg.c	/^add_to_delay_list (insn, delay_list)$/;"	f	file:
add_to_list	collect2.c	/^add_to_list (head_ptr, name)$/;"	f	file:
add_to_sequence	genrecog.c	/^add_to_sequence (pattern, last, position)$/;"	f	file:
add_type_attribute	dwarf2out.c	/^add_type_attribute (object_die, type, decl_const, decl_volatile, context_die)$/;"	f	file:
add_unknown_tag	mips-tfile.c	/^add_unknown_tag (ptag)$/;"	f
add_values_to_cover	genattrtab.c	/^add_values_to_cover (dim)$/;"	f	file:
add_varray_page	mips-tfile.c	/^add_varray_page (vp)$/;"	f
add_weak	varasm.c	/^add_weak (name, value)$/;"	f
added_libraries	gcc.c	/^static int added_libraries;$/;"	v	file:
added_links_insn	combine.c	/^static rtx added_links_insn;$/;"	v	file:
addr	varasm.c	/^    struct addr_const addr;$/;"	m	union:rtx_const::<anonymous>
addr_combined_regs	unroll.c	/^static struct induction **addr_combined_regs;$/;"	v	file:
addr_const	varasm.c	/^struct addr_const$/;"	s	file:
addr_const_to_string	dwarf2out.c	/^addr_const_to_string (str, x)$/;"	f	file:
addr_placeholder	loop.c	/^static rtx addr_placeholder;$/;"	v	file:
addr_side_effect_eval	alias.c	/^addr_side_effect_eval (addr, size, n_refs)$/;"	f
addr_taken	function.c	/^  char addr_taken;$/;"	m	struct:temp_slot
addr_to_string	dwarf2out.c	/^addr_to_string (x)$/;"	f	file:
address	cexp.c	/^  struct name {U_CHAR *address; int length;} name;$/;"	m	struct:<anonymous>::name
address	function.c	/^  rtx address;$/;"	m	struct:temp_slot
address_operand	recog.c	/^address_operand (op, mode)$/;"	f
address_p	genoutput.c	/^  char address_p[MAX_MAX_OPERANDS];$/;"	m	struct:data
address_p	genoutput.c	/^static char address_p[MAX_MAX_OPERANDS];$/;"	v	file:
address_used	genattrtab.c	/^static int address_used;$/;"	v	file:
addresses	libgcc2.c	/^  const unsigned long *addresses;$/;"	m	struct:bb
addressof_dump	toplev.c	/^int addressof_dump = 0;$/;"	v
adj_list	gcov.c	/^struct adj_list {$/;"	s	file:
adj_list	profile.c	/^struct adj_list$/;"	s	file:
adj_offsettable_operand	recog.c	/^adj_offsettable_operand (op, offset)$/;"	f
adjust_copied_decl_tree	integrate.c	/^adjust_copied_decl_tree (block)$/;"	f	file:
adjust_priority	haifa-sched.c	/^adjust_priority (prev)$/;"	f	file:
adjust_priority	sched.c	/^adjust_priority (prev)$/;"	f	file:
adjust_stack	explow.c	/^adjust_stack (adjust)$/;"	f
ae_gen	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_in	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_kill	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_out	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
affix_data_type	c-aux-info.c	/^affix_data_type (param)$/;"	f	file:
after_function_constants	varasm.c	/^static struct deferred_constant *after_function_constants;$/;"	v	file:
after_include	cccp.c	/^static struct file_name_list *after_include = 0;$/;"	v	file:
after_insn_hard_regs	stupid.c	/^static HARD_REG_SET *after_insn_hard_regs;$/;"	v	file:
afterward	genrecog.c	/^  struct decision *afterward;	\/* Node to test on success, but failure of$/;"	m	struct:decision
aggregate_value_p	function.c	/^aggregate_value_p (exp)$/;"	f
aix64_flag	collect2.c	/^static int aix64_flag;			\/* true if -b64 *\/$/;"	v	file:
aix_std_libs	collect2.c	/^static char* aix_std_libs[] = {$/;"	v	file:
alg_add	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	file:	enum:alg_code
alg_add_factor	expmed.c	/^		  alg_add_factor, alg_sub_factor,$/;"	e	file:	enum:alg_code
alg_add_t2_m	expmed.c	/^		  alg_add_t2_m, alg_sub_t2_m,$/;"	e	file:	enum:alg_code
alg_add_t_m2	expmed.c	/^		  alg_add_t_m2, alg_sub_t_m2,$/;"	e	file:	enum:alg_code
alg_code	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	g	file:
alg_factor	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	file:	enum:alg_code
alg_m	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	file:	enum:alg_code
alg_shift	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	file:	enum:alg_code
alg_shiftop	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	file:	enum:alg_code
alg_sub_factor	expmed.c	/^		  alg_add_factor, alg_sub_factor,$/;"	e	file:	enum:alg_code
alg_sub_t2_m	expmed.c	/^		  alg_add_t2_m, alg_sub_t2_m,$/;"	e	file:	enum:alg_code
alg_sub_t_m2	expmed.c	/^		  alg_add_t_m2, alg_sub_t_m2,$/;"	e	file:	enum:alg_code
alg_subtract	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	file:	enum:alg_code
alg_zero	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	file:	enum:alg_code
algorithm	expmed.c	/^struct algorithm$/;"	s	file:
alias_invariant	alias.c	/^static rtx *alias_invariant;$/;"	v	file:
alias_set	alias.c	/^  int alias_set;$/;"	m	struct:alias_set_entry
alias_set	function.c	/^  int alias_set;$/;"	m	struct:temp_slot
alias_set_entry	alias.c	/^typedef struct alias_set_entry {$/;"	s	file:
alias_set_entry	alias.c	/^}* alias_set_entry;$/;"	t	file:
alias_sets	alias.c	/^static splay_tree alias_sets;$/;"	v	file:
aliases_everything_p	alias.c	/^aliases_everything_p (mem)$/;"	f	file:
align	function.c	/^  int align;$/;"	m	struct:temp_slot
align	varasm.c	/^  int align;$/;"	m	struct:pool_constant
align_fuzz	final.c	/^align_fuzz (start, end, known_align_log, growth)$/;"	f
align_stack	c-pragma.c	/^typedef struct align_stack$/;"	s	file:
align_stack	c-pragma.c	/^} align_stack;$/;"	t	file:
aligned_regs	calls.c	/^  rtx *aligned_regs;$/;"	m	struct:arg_data
alignment	c-pragma.c	/^  int                  alignment;$/;"	m	struct:align_stack
alignment	enquire.c	1595;"	d	file:
alignment	final.c	/^  short alignment;$/;"	m	struct:label_alignment
alignment_stack	c-pragma.c	/^static struct align_stack * alignment_stack = NULL;$/;"	v	file:
all	stmt.c	/^  struct nesting *all;$/;"	m	struct:nesting
all_blocks	function.c	/^all_blocks (block, vector)$/;"	f	file:
all_cases_count	stmt.c	/^all_cases_count (type, spareness)$/;"	f
all_kinds	tree.c	/^  all_kinds$/;"	e	file:
all_ones_mask_p	fold-const.c	/^all_ones_mask_p (mask, size)$/;"	f	file:
all_refs	halfpic.c	/^struct all_refs {$/;"	s	file:
all_types_permanent	tree.c	/^int all_types_permanent;$/;"	v
alloc_EXPR_LIST	haifa-sched.c	/^alloc_EXPR_LIST (kind, val, next)$/;"	f	file:
alloc_INSN_LIST	haifa-sched.c	/^alloc_INSN_LIST (val, next)$/;"	f	file:
alloc_avail_expr_mem	gcse.c	/^alloc_avail_expr_mem (n_blocks, n_exprs)$/;"	f	file:
alloc_counts	mips-tfile.c	/^static alloc_info_t alloc_counts[ (int)alloc_type_last ];$/;"	v	file:
alloc_cprop_mem	gcse.c	/^alloc_cprop_mem (n_blocks, n_sets)$/;"	f	file:
alloc_ent	doschk.c	/^alloc_ent ()$/;"	f
alloc_expr_hash_table	gcse.c	/^alloc_expr_hash_table (n_insns)$/;"	f	file:
alloc_gcse_mem	gcse.c	/^alloc_gcse_mem (f)$/;"	f	file:
alloc_info	mips-tfile.c	/^typedef struct alloc_info {$/;"	s	file:
alloc_info_t	mips-tfile.c	/^} alloc_info_t;$/;"	t	file:
alloc_int_list_node	flow.c	/^alloc_int_list_node (head_ptr)$/;"	f	file:
alloc_name	mips-tfile.c	/^  const char	*alloc_name;	\/* name of this allocation type (must be first) *\/$/;"	m	struct:alloc_info
alloc_p	gcc.c	/^  int alloc_p;			\/* whether string was allocated *\/$/;"	m	struct:spec_list
alloc_pre_mem	gcse.c	/^alloc_pre_mem (n_blocks, n_exprs)$/;"	f	file:
alloc_qty	local-alloc.c	/^alloc_qty (regno, mode, size, birth)$/;"	f	file:
alloc_rd_mem	gcse.c	/^alloc_rd_mem (n_blocks, n_insns)$/;"	f	file:
alloc_reg_set_mem	gcse.c	/^alloc_reg_set_mem (n_regs)$/;"	f	file:
alloc_set_hash_table	gcse.c	/^alloc_set_hash_table (n_insns)$/;"	f	file:
alloc_type	mips-tfile.c	/^enum alloc_type {$/;"	g	file:
alloc_type_forward	mips-tfile.c	/^  alloc_type_forward,		\/* element to hold unknown tag *\/$/;"	e	file:	enum:alloc_type
alloc_type_last	mips-tfile.c	/^  alloc_type_last		\/* last+1 element for array bounds *\/$/;"	e	file:	enum:alloc_type
alloc_type_none	mips-tfile.c	/^  alloc_type_none,		\/* dummy value *\/$/;"	e	file:	enum:alloc_type
alloc_type_scope	mips-tfile.c	/^  alloc_type_scope,		\/* nested scopes linked list *\/$/;"	e	file:	enum:alloc_type
alloc_type_shash	mips-tfile.c	/^  alloc_type_shash,		\/* string hash element *\/$/;"	e	file:	enum:alloc_type
alloc_type_tag	mips-tfile.c	/^  alloc_type_tag,		\/* struct\/union\/tag element *\/$/;"	e	file:	enum:alloc_type
alloc_type_thash	mips-tfile.c	/^  alloc_type_thash,		\/* type hash element *\/$/;"	e	file:	enum:alloc_type
alloc_type_thead	mips-tfile.c	/^  alloc_type_thead,		\/* head of type hash list *\/$/;"	e	file:	enum:alloc_type
alloc_type_varray	mips-tfile.c	/^  alloc_type_varray,		\/* general varray allocation *\/$/;"	e	file:	enum:alloc_type
alloc_type_vlinks	mips-tfile.c	/^  alloc_type_vlinks,		\/* glue linking pages in varray *\/$/;"	e	file:	enum:alloc_type
alloca	c-parse.c	1236;"	d	file:
alloca	cexp.c	365;"	d	file:
allocate_bb_life_data	flow.c	/^allocate_bb_life_data ()$/;"	f
allocate_cluster	mips-tfile.c	/^allocate_cluster (npages)$/;"	f
allocate_dynamic_stack_space	explow.c	/^allocate_dynamic_stack_space (size, target, known_align)$/;"	f
allocate_forward	mips-tfile.c	/^allocate_forward __proto((void))$/;"	f
allocate_multiple_pages	mips-tfile.c	/^allocate_multiple_pages (npages)$/;"	f
allocate_page	mips-tfile.c	/^allocate_page __proto((void))$/;"	f
allocate_reg_info	regclass.c	/^allocate_reg_info (num_regs, new_p, renumber_p)$/;"	f
allocate_reg_life_data	flow.c	/^allocate_reg_life_data ()$/;"	f
allocate_reload_reg	reload1.c	/^allocate_reload_reg (chain, r, last_reload, noerror)$/;"	f	file:
allocate_scope	mips-tfile.c	/^allocate_scope __proto((void))$/;"	f
allocate_shash	mips-tfile.c	/^allocate_shash __proto((void))$/;"	f
allocate_tag	mips-tfile.c	/^allocate_tag __proto((void))$/;"	f
allocate_thash	mips-tfile.c	/^allocate_thash __proto((void))$/;"	f
allocate_thead	mips-tfile.c	/^allocate_thead __proto((void))$/;"	f
allocate_vlinks	mips-tfile.c	/^allocate_vlinks __proto((void))$/;"	f
allocation_temporary_p	tree.c	/^allocation_temporary_p ()$/;"	f
allocno_calls_crossed	global.c	/^static int *allocno_calls_crossed;$/;"	v	file:
allocno_compare	global.c	/^allocno_compare (v1p, v2p)$/;"	f	file:
allocno_live_length	global.c	/^static int *allocno_live_length;$/;"	v	file:
allocno_n_refs	global.c	/^static int *allocno_n_refs;$/;"	v	file:
allocno_order	global.c	/^static int *allocno_order;$/;"	v	file:
allocno_reg	global.c	/^static int *allocno_reg;$/;"	v	file:
allocno_row_words	global.c	/^static int allocno_row_words;$/;"	v	file:
allocno_size	global.c	/^static int *allocno_size;$/;"	v	file:
allocnos_live	global.c	/^static INT_TYPE *allocnos_live;$/;"	v	file:
alt_end_label	stmt.c	/^	  rtx alt_end_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
altclass	regclass.c	/^static char *altclass;$/;"	v	file:
altclass_buffer	regclass.c	/^static char *altclass_buffer;$/;"	v	file:
alter_cond	final.c	/^alter_cond (cond)$/;"	f	file:
alter_reg	reload1.c	/^alter_reg (i, from_reg)$/;"	f	file:
alter_subreg	final.c	/^alter_subreg (x)$/;"	f
alternative_allows_memconst	reload.c	/^alternative_allows_memconst (constraint, altnum)$/;"	f	file:
alternative_name	genattrtab.c	/^static char *alternative_name;$/;"	v	file:
always_delete_queue	gcc.c	/^static struct temp_file *always_delete_queue;$/;"	v	file:
ancestor_edges	haifa-sched.c	/^static edgeset *ancestor_edges;$/;"	v	file:
and_optab	optabs.c	/^optab and_optab;$/;"	v
announce_function	toplev.c	/^announce_function (decl)$/;"	f
anonymous_types	sdbout.c	/^static tree anonymous_types;$/;"	v	file:
ansi	c-aux-info.c	/^  ansi,$/;"	e	file:	enum:formals_style_enum
ansi_decl	protoize.c	/^  const char *		ansi_decl;	\/* -> left end of ansi decl *\/$/;"	m	struct:def_dec_info_struct
anti_adjust_stack	explow.c	/^anti_adjust_stack (adjust)$/;"	f
anti_dependence	alias.c	/^anti_dependence (mem, x)$/;"	f
antic_occr	gcse.c	/^  struct occr *antic_occr;$/;"	m	struct:expr
antloc	gcse.c	/^static sbitmap *antloc;$/;"	v	file:
any_pending_cleanups	stmt.c	/^any_pending_cleanups (this_contour)$/;"	f
app_disable	final.c	/^app_disable ()$/;"	f
app_enable	final.c	/^app_enable ()$/;"	f
app_on	final.c	/^static int app_on;$/;"	v	file:
append_include_chain	cccp.c	/^append_include_chain (first, last)$/;"	f	file:
append_include_chain	cppinit.c	/^append_include_chain (pfile, pend, dir, path)$/;"	f	file:
append_random_chars	tree.c	/^append_random_chars (template)$/;"	f	file:
apply_args_mode	expr.c	/^static enum machine_mode apply_args_mode[FIRST_PSEUDO_REGISTER];$/;"	v	file:
apply_args_reg_offset	expr.c	/^static int apply_args_reg_offset[FIRST_PSEUDO_REGISTER];$/;"	v	file:
apply_args_register_offset	expr.c	/^apply_args_register_offset (regno)$/;"	f
apply_args_size	expr.c	/^apply_args_size ()$/;"	f	file:
apply_args_value	expr.c	/^static rtx apply_args_value;$/;"	v	file:
apply_change_group	recog.c	/^apply_change_group ()$/;"	f
apply_distributive_law	combine.c	/^apply_distributive_law (x)$/;"	f	file:
apply_result_mode	expr.c	/^static enum machine_mode apply_result_mode[FIRST_PSEUDO_REGISTER];$/;"	v	file:
apply_result_size	expr.c	/^apply_result_size ()$/;"	f	file:
arange_ref	dwarf2out.c	/^typedef dw_die_ref *arange_ref;$/;"	t	file:
arange_table	dwarf2out.c	/^static arange_ref arange_table;$/;"	v	file:
arange_table_allocated	dwarf2out.c	/^static unsigned arange_table_allocated;$/;"	v	file:
arange_table_in_use	dwarf2out.c	/^static unsigned arange_table_in_use;$/;"	v	file:
arc_count	gcov.c	/^  int arc_count;$/;"	m	struct:adj_list
arc_count	profile.c	/^  int arc_count;$/;"	m	struct:adj_list
arcdata	gcov.c	/^struct arcdata$/;"	s	file:
arg	cppinit.c	/^  char *arg;$/;"	m	struct:pending_option
arg	toplev.c	/^  const char * arg;$/;"	m	struct:
arg1	fold-const.c	/^  tree arg1, type;$/;"	m	struct:fc_args
arg1	fold-const.c	/^  tree arg1;$/;"	m	struct:cb_args
arg_data	calls.c	/^struct arg_data$/;"	s	file:
arg_going	gcc.c	/^static int arg_going;$/;"	v	file:
arg_info	gcc.c	/^  const char *arg_info;$/;"	m	struct:option_map
arg_pointer_save_area	function.c	/^rtx arg_pointer_save_area;$/;"	v
argbuf	gcc.c	/^static char **argbuf;$/;"	v	file:
argbuf_index	gcc.c	/^static int argbuf_index;$/;"	v	file:
argbuf_length	gcc.c	/^static int argbuf_length;$/;"	v	file:
argdata	cccp.c	/^struct argdata {$/;"	s	file:
argdata	cpphash.c	/^struct argdata$/;"	s	file:
arglist	cccp.c	/^struct arglist {$/;"	s	file:
arglist	cexp.c	/^struct arglist {$/;"	s	file:
arglist	cpphash.c	/^struct arglist$/;"	s	file:
argnames	cccp.c	/^    U_CHAR *argnames;$/;"	m	union:definition::<anonymous>
argno	cccp.c	/^    int argno;			\/* Number of arg to substitute (origin-0) *\/$/;"	m	struct:definition::reflist
argno	cccp.c	/^  int argno;$/;"	m	struct:arglist
argno	cexp.c	/^  int argno;$/;"	m	struct:arglist
argno	cpphash.c	/^  int argno;$/;"	m	struct:arglist
args	cccp.c	/^  } args;$/;"	m	struct:definition
args	gcc.c	/^  char **args;$/;"	m	struct:switchstr
args	tlink.c	/^  const char *args;$/;"	m	struct:file_hash_entry
args_size	dwarf2out.c	/^static long args_size;$/;"	v	file:
argument_registers	alias.c	/^static HARD_REG_SET argument_registers;$/;"	v	file:
array	dwarf2out.c	/^  long *array;$/;"	m	struct:dw_fp_struct
array	frame.c	/^  fde **array;$/;"	m	struct:fde_vector
array_type_nelts	tree.c	/^array_type_nelts (type)$/;"	f
asctoe	real.c	/^asctoe (s, y)$/;"	f	file:
asctoe113	real.c	/^asctoe113 (s, y)$/;"	f	file:
asctoe24	real.c	/^asctoe24 (s, y)$/;"	f	file:
asctoe53	real.c	/^asctoe53 (s, y)$/;"	f	file:
asctoe64	real.c	/^asctoe64 (s, y)$/;"	f	file:
asctoeg	real.c	/^asctoeg (ss, y, oprec)$/;"	f	file:
ashl_optab	optabs.c	/^optab ashl_optab;$/;"	v
ashr_optab	optabs.c	/^optab ashr_optab;$/;"	v
asm_file_name	toplev.c	/^char *asm_file_name;$/;"	v
asm_final_spec	gcc.c	/^static char *asm_final_spec = ASM_FINAL_SPEC;$/;"	v	file:
asm_fprintf	final.c	/^asm_fprintf VPROTO((FILE *file, const char *p, ...))$/;"	f
asm_insn_count	final.c	/^asm_insn_count (body)$/;"	f	file:
asm_noperands	recog.c	/^asm_noperands (body)$/;"	f
asm_operand_ok	recog.c	/^asm_operand_ok (op, constraint)$/;"	f
asm_out_file	toplev.c	/^FILE *asm_out_file;$/;"	v
asm_output_aligned_bss	varasm.c	/^asm_output_aligned_bss (file, decl, name, size, align)$/;"	f	file:
asm_output_bss	varasm.c	/^asm_output_bss (file, decl, name, size, rounded)$/;"	f	file:
asm_spec	gcc.c	/^static char *asm_spec = ASM_SPEC;$/;"	v	file:
asmfile	dbxout.c	/^static FILE *asmfile;$/;"	v	file:
asmspec	c-typeck.c	/^  char *asmspec;$/;"	m	struct:initializer_stack
assemble_alias	varasm.c	/^assemble_alias (decl, target)$/;"	f
assemble_align	varasm.c	/^assemble_align (align)$/;"	f
assemble_asm	varasm.c	/^assemble_asm (string)$/;"	f
assemble_constant_align	varasm.c	/^assemble_constant_align (exp)$/;"	f
assemble_constructor	varasm.c	/^assemble_constructor (name)$/;"	f
assemble_destructor	varasm.c	/^assemble_destructor (name)$/;"	f
assemble_end_function	varasm.c	/^assemble_end_function (decl, fnname)$/;"	f
assemble_external	varasm.c	/^assemble_external (decl)$/;"	f
assemble_external_libcall	varasm.c	/^assemble_external_libcall (fun)$/;"	f
assemble_gc_entry	varasm.c	/^assemble_gc_entry (name)$/;"	f
assemble_global	varasm.c	/^assemble_global (name)$/;"	f
assemble_integer	varasm.c	/^assemble_integer (x, size, force)$/;"	f
assemble_label	varasm.c	/^assemble_label (name)$/;"	f
assemble_name	varasm.c	/^assemble_name (file, name)$/;"	f
assemble_real	varasm.c	/^assemble_real (d, mode)$/;"	f
assemble_start_function	varasm.c	/^assemble_start_function (decl, fnname)$/;"	f
assemble_static_space	varasm.c	/^assemble_static_space (size)$/;"	f
assemble_string	varasm.c	/^assemble_string (p, size)$/;"	f
assemble_trampoline_template	varasm.c	/^assemble_trampoline_template ()$/;"	f
assemble_variable	varasm.c	/^assemble_variable (decl, top_level, at_end, dont_output_data)$/;"	f
assemble_zeros	varasm.c	/^assemble_zeros (size)$/;"	f
assembler_name	c-common.c	/^  tree assembler_name;		\/* optional mangled identifier (for C++) *\/$/;"	m	struct:function_format_info
assembler_name	c-common.c	/^  tree assembler_name;		\/* optional mangled identifier (for C++) *\/$/;"	m	struct:international_format_info
assembler_options	gcc.c	/^static char **assembler_options;$/;"	v	file:
assert	dwarf2out.c	50;"	d	file:
assert	dwarf2out.c	52;"	d	file:
assert	dwarf2out.c	54;"	d	file:
assert	dwarfout.c	46;"	d	file:
assert	dwarfout.c	48;"	d	file:
assert	dwarfout.c	50;"	d	file:
assertion_hashnode	cccp.c	/^struct assertion_hashnode {$/;"	s	file:
assertion_hashtab	cccp.c	/^static ASSERTION_HASHNODE *assertion_hashtab[ASSERTION_HASHSIZE];$/;"	v	file:
assertion_install	cccp.c	/^assertion_install (name, len, hash)$/;"	f	file:
assertion_lookup	cccp.c	/^assertion_lookup (name, len, hash)$/;"	f	file:
assertions_flag	cccp.c	/^static int assertions_flag;$/;"	v	file:
assign_outer_stack_local	function.c	/^assign_outer_stack_local (mode, size, align, function)$/;"	f	file:
assign_parms	function.c	/^assign_parms (fndecl, second_time)$/;"	f
assign_stack_local	function.c	/^assign_stack_local (mode, size, align)$/;"	f
assign_stack_temp	function.c	/^assign_stack_temp (mode, size, keep)$/;"	f
assign_stack_temp_for_type	function.c	/^assign_stack_temp_for_type (mode, size, keep, type)$/;"	f	file:
assign_temp	function.c	/^assign_temp (type, keep, memory_required, dont_promote)$/;"	f
assign_type_number	xcoffout.c	/^assign_type_number (syms, name, number)$/;"	f	file:
asynchronous_exceptions	except.c	/^int asynchronous_exceptions = 0;$/;"	v
atexit	libgcc2.c	/^int atexit (func_ptr func)$/;"	f
atexit_chain	libgcc2.c	/^static func_ptr *atexit_chain = 0;$/;"	v	file:
atexit_chain_length	libgcc2.c	/^static long atexit_chain_length = 0;$/;"	v	file:
atoll	rtl.c	/^atoll(p)$/;"	f
attach_deaths	haifa-sched.c	/^attach_deaths (x, insn, set_p)$/;"	f	file:
attach_deaths	sched.c	/^attach_deaths (x, insn, set_p)$/;"	f	file:
attach_deaths_insn	haifa-sched.c	/^attach_deaths_insn (insn)$/;"	f	file:
attach_deaths_insn	sched.c	/^attach_deaths_insn (insn)$/;"	f	file:
attr	genattrtab.c	/^  struct attr_desc *attr;	\/* Attribute for this dimension.  *\/$/;"	m	struct:dimension
attr_copy_rtx	genattrtab.c	/^attr_copy_rtx (orig)$/;"	f
attr_desc	genattrtab.c	/^struct attr_desc$/;"	s	file:
attr_eq	genattrtab.c	/^attr_eq (name, value)$/;"	f
attr_equal_p	genattrtab.c	/^attr_equal_p (x, y)$/;"	f
attr_hash	genattrtab.c	/^struct attr_hash$/;"	s	file:
attr_hash_add_rtx	genattrtab.c	/^attr_hash_add_rtx (hashcode, rtl)$/;"	f	file:
attr_hash_add_string	genattrtab.c	/^attr_hash_add_string (hashcode, str)$/;"	f	file:
attr_hash_table	genattrtab.c	/^struct attr_hash *attr_hash_table[RTL_HASH_SIZE];$/;"	v
attr_numeral	genattrtab.c	/^attr_numeral (n)$/;"	f
attr_printf	genattrtab.c	/^attr_printf VPROTO((register int len, const char *fmt, ...))$/;"	f	file:
attr_rtx	genattrtab.c	/^attr_rtx VPROTO((enum rtx_code code, ...))$/;"	f	file:
attr_string	genattrtab.c	/^attr_string (str, len)$/;"	f	file:
attr_value	genattrtab.c	/^struct attr_value$/;"	s	file:
attribute_hash_list	tree.c	/^attribute_hash_list (list)$/;"	f
attribute_list_contained	tree.c	/^attribute_list_contained (l1, l2)$/;"	f
attribute_list_equal	tree.c	/^attribute_list_equal (l1, l2)$/;"	f
attrs	c-common.c	/^enum attrs {A_PACKED, A_NOCOMMON, A_COMMON, A_NORETURN, A_CONST, A_T_UNION,$/;"	g	file:
attrs	genattrtab.c	/^static struct attr_desc *attrs[MAX_ATTRS_INDEX];$/;"	v	file:
attrtab	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	v	file:
attrtab_idx	c-common.c	/^static int attrtab_idx = 0;$/;"	v	file:
augmentation	frame.c	/^  char *augmentation;$/;"	m	struct:cie_info
augmentation	frame.c	/^  char augmentation[0];$/;"	m	struct:dwarf_cie
autinc_from	expr.c	/^  int autinc_from;$/;"	m	struct:move_by_pieces
autinc_to	expr.c	/^  int autinc_to;$/;"	m	struct:clear_by_pieces
autinc_to	expr.c	/^  int autinc_to;$/;"	m	struct:move_by_pieces
auto_inc_dec_reg_p	regclass.c	/^auto_inc_dec_reg_p (reg, mode)$/;"	f	file:
auto_inc_p	rtlanal.c	/^auto_inc_p (x)$/;"	f
aux	mips-tfile.c	/^  AUXU		aux	[ PAGE_SIZE \/ sizeof (AUXU)	 ];$/;"	m	union:page
aux_info_corrupted	protoize.c	/^aux_info_corrupted ()$/;"	f	file:
aux_info_file	toplev.c	/^FILE *aux_info_file;$/;"	v
aux_info_file_name	toplev.c	/^static char *aux_info_file_name;$/;"	v	file:
aux_info_file_name_index	protoize.c	/^static int aux_info_file_name_index = 0;$/;"	v	file:
aux_info_suffix	protoize.c	/^static const char * const aux_info_suffix = AUX_INFO_SUFFIX;$/;"	v	file:
aux_symbols	mips-tdump.c	/^AUXU	*aux_symbols;		\/* Auxiliary symbols *\/$/;"	v
aux_syms	mips-tfile.c	/^  varray_t	 aux_syms;	\/* auxiliary symbols *\/$/;"	m	struct:efdr
aux_used	mips-tdump.c	/^char	*aux_used;		\/* map of which aux syms are used *\/$/;"	v
avail_occr	gcse.c	/^  struct occr *avail_occr;$/;"	m	struct:expr
b2	frame.c	/^  unsigned b2 __attribute__ ((mode (HI)));$/;"	m	union:unaligned
b4	frame.c	/^  unsigned b4 __attribute__ ((mode (SI)));$/;"	m	union:unaligned
b8	frame.c	/^  unsigned b8 __attribute__ ((mode (DI)));$/;"	m	union:unaligned
b_kind	tree.c	/^  b_kind,$/;"	e	file:
back_branch_in_range_p	unroll.c	/^back_branch_in_range_p (insn, loop_start, loop_end)$/;"	f
bad_header	collect2.c	/^bad_header (status)$/;"	f	file:
bad_spill_regs	reload1.c	/^static HARD_REG_SET bad_spill_regs;$/;"	v	file:
bad_spill_regs_global	reload1.c	/^static HARD_REG_SET bad_spill_regs_global;$/;"	v	file:
balance	c-typeck.c	/^  int balance;$/;"	m	struct:init_node
balance	stmt.c	/^  int			balance;$/;"	m	struct:case_node
balance_case_nodes	stmt.c	/^balance_case_nodes (head, parent)$/;"	f	file:
base	c-lex.c	/^  int base;$/;"	m	struct:pf_args
base	reload.c	/^  rtx base;		\/* Base address for MEM.  *\/$/;"	m	struct:decomposition
base	tree.c	/^  char *base;$/;"	m	struct:momentary_level
base	varasm.c	/^  rtx base;$/;"	m	struct:addr_const
base_alias_check	alias.c	/^base_alias_check (x, y, x_mode, y_mode)$/;"	f	file:
base_label_num	emit-rtl.c	/^static int base_label_num;$/;"	v	file:
base_name	cccp.c	/^base_name (fname)$/;"	f	file:
base_name	cppinit.c	/^base_name (fname)$/;"	f	file:
base_offset	function.c	/^  HOST_WIDE_INT base_offset;$/;"	m	struct:temp_slot
base_source_filenames	protoize.c	/^static const char **base_source_filenames;$/;"	v	file:
base_type_die	dwarf2out.c	/^base_type_die (type)$/;"	f	file:
based_loc_descr	dwarf2out.c	/^based_loc_descr (reg, offset)$/;"	f	file:
basename_length	gcc.c	/^static int basename_length;$/;"	v	file:
basic	enquire.c	/^int basic() {$/;"	f
basic_block_for_insn	flow.c	/^varray_type basic_block_for_insn;$/;"	v
basic_block_info	flow.c	/^varray_type basic_block_info;$/;"	v
basic_induction_var	loop.c	/^basic_induction_var (x, mode, dest_reg, p, inc_val, mult_val, location)$/;"	f	file:
basic_type	mips-tfile.c	/^  bt_t		  basic_type;	\/* bt_Struct, bt_Union, or bt_Enum *\/$/;"	m	struct:tag
basic_type	mips-tfile.c	/^  bt_t	      basic_type;		\/* basic type *\/$/;"	m	struct:type_info
bb	libgcc2.c	/^struct bb$/;"	s	file:
bb_callcount	libgcc2.c	/^static unsigned long bb_callcount = 0;$/;"	v	file:
bb_data	gcov.c	/^static char *bb_data;$/;"	v	file:
bb_data_size	gcov.c	/^static long bb_data_size;$/;"	v	file:
bb_dead_regs	sched.c	/^static regset bb_dead_regs;$/;"	v	file:
bb_dst	libgcc2.c	/^static unsigned long bb_dst = 0;$/;"	v	file:
bb_edge	libgcc2.c	/^struct bb_edge$/;"	s	file:
bb_file	gcov.c	/^static FILE *bb_file;$/;"	v	file:
bb_file	profile.c	/^static FILE *bb_file;$/;"	v	file:
bb_file_label_num	final.c	/^static int bb_file_label_num	= -1;		\/* Current label # for file *\/$/;"	v	file:
bb_file_name	gcov.c	/^static char *bb_file_name;$/;"	v	file:
bb_func	libgcc2.c	/^struct bb_func$/;"	s	file:
bb_func_head	libgcc2.c	/^static struct bb_func *bb_func_head = (struct bb_func *) 0;$/;"	v	file:
bb_func_label_num	final.c	/^static int bb_func_label_num	= -1;		\/* Current label # for func *\/$/;"	v	file:
bb_func_mode	libgcc2.c	/^enum bb_func_mode$/;"	g	file:
bb_graph	gcov.c	/^  struct bb_info *bb_graph;$/;"	m	struct:bb_info_list
bb_graph	profile.c	/^static struct bb_info *bb_graph;$/;"	v	file:
bb_graph_list	gcov.c	/^static struct bb_info_list *bb_graph_list = 0;$/;"	v	file:
bb_hashbuckets	libgcc2.c	/^static struct bb_edge **bb_hashbuckets = (struct bb_edge **) 0;$/;"	v	file:
bb_head	final.c	/^static struct bb_list *bb_head	= 0;		\/* Head of basic block list *\/$/;"	v	file:
bb_head	libgcc2.c	/^static struct bb *bb_head;$/;"	v	file:
bb_info	gcov.c	/^struct bb_info {$/;"	s	file:
bb_info	profile.c	/^struct bb_info$/;"	s	file:
bb_info_list	gcov.c	/^struct bb_info_list {$/;"	s	file:
bb_last_function_call	haifa-sched.c	/^static rtx *bb_last_function_call;$/;"	v	file:
bb_last_pending_memory_flush	haifa-sched.c	/^static rtx *bb_last_pending_memory_flush;$/;"	v	file:
bb_list	final.c	/^struct bb_list {$/;"	s	file:
bb_live_regs	haifa-sched.c	/^static regset bb_live_regs;$/;"	v	file:
bb_live_regs	sched.c	/^static regset bb_live_regs;$/;"	v	file:
bb_mode	libgcc2.c	/^static int bb_mode = 0;$/;"	v	file:
bb_pending_lists_length	haifa-sched.c	/^static int *bb_pending_lists_length;$/;"	v	file:
bb_pending_read_insns	haifa-sched.c	/^static rtx *bb_pending_read_insns;$/;"	v	file:
bb_pending_read_mems	haifa-sched.c	/^static rtx *bb_pending_read_mems;$/;"	v	file:
bb_pending_write_insns	haifa-sched.c	/^static rtx *bb_pending_write_insns;$/;"	v	file:
bb_pending_write_mems	haifa-sched.c	/^static rtx *bb_pending_write_mems;$/;"	v	file:
bb_reg_last_clobbers	haifa-sched.c	/^static rtx **bb_reg_last_clobbers;$/;"	v	file:
bb_reg_last_sets	haifa-sched.c	/^static rtx **bb_reg_last_sets;$/;"	v	file:
bb_reg_last_uses	haifa-sched.c	/^static rtx **bb_reg_last_uses;$/;"	v	file:
bb_sched_before_next_call	haifa-sched.c	/^static rtx *bb_sched_before_next_call;$/;"	v	file:
bb_src	libgcc2.c	/^static unsigned long bb_src = 0;$/;"	v	file:
bb_stack	libgcc2.c	/^static unsigned long *bb_stack = (unsigned long *) 0;$/;"	v	file:
bb_stacksize	libgcc2.c	/^static size_t bb_stacksize = 0;$/;"	v	file:
bb_str	final.c	/^struct bb_str {$/;"	s	file:
bb_tail	final.c	/^static struct bb_list **bb_tail = &bb_head;	\/* Ptr to store next bb ptr *\/$/;"	v	file:
bb_tick	resource.c	/^  int bb_tick;			\/* Generation count of basic block info.  *\/$/;"	m	struct:target_info
bb_ticks	resource.c	/^static int *bb_ticks;$/;"	v	file:
bb_tracefile	libgcc2.c	/^static FILE *bb_tracefile = (FILE *) 0;$/;"	v	file:
bbg_file	gcov.c	/^static FILE *bbg_file;$/;"	v	file:
bbg_file	profile.c	/^static FILE *bbg_file;$/;"	v	file:
bbg_file_name	gcov.c	/^static char *bbg_file_name;$/;"	v	file:
bbg_file_name	profile.c	/^static char *bbg_file_name;$/;"	v	file:
bblst	haifa-sched.c	/^typedef bitlst bblst;$/;"	t	file:
bblst_last	haifa-sched.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bblst_size	haifa-sched.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bblst_table	haifa-sched.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bbset	haifa-sched.c	/^typedef bitset bbset;$/;"	t	file:
bbset_size	haifa-sched.c	/^static int bbset_size;$/;"	v	file:
bcc_gen_fctn	optabs.c	/^rtxfun bcc_gen_fctn[NUM_RTX_CODE];$/;"	v
bcmp_libfunc	optabs.c	/^rtx bcmp_libfunc;$/;"	v
bcopy_libfunc	optabs.c	/^rtx bcopy_libfunc;$/;"	v
before_jump	stmt.c	/^  rtx before_jump;$/;"	m	struct:goto_fixup
before_system	cccp.c	/^static struct file_name_list *before_system = 0;$/;"	v	file:
beg	dwarf2out.c	/^  int beg;$/;"	m	struct:reg_size_range
bigllen	c-common.c	/^  tree *bigllen;$/;"	m	struct:
binary_op_error	c-common.c	/^binary_op_error (code)$/;"	f
binding_level	c-decl.c	/^  struct binding_level *binding_level;$/;"	m	struct:c_function
binding_level	c-decl.c	/^struct binding_level$/;"	s	file:
binfo_member	tree.c	/^binfo_member (elem, list)$/;"	f
birthing_insn_p	haifa-sched.c	/^birthing_insn_p (pat)$/;"	f	file:
birthing_insn_p	sched.c	/^birthing_insn_p (pat)$/;"	f	file:
bit_index	c-typeck.c	/^  tree bit_index;$/;"	m	struct:constructor_stack
bit_offset_attribute	dwarfout.c	/^bit_offset_attribute (decl)$/;"	f	file:
bit_size_attribute	dwarfout.c	/^bit_size_attribute (decl)$/;"	f	file:
bitfield	mips-tfile.c	/^  int	      bitfield;			\/* symbol is a bitfield *\/$/;"	m	struct:type_info
bitlst	haifa-sched.c	/^bitlst;$/;"	t	file:
bitlst_table	haifa-sched.c	/^static int *bitlst_table;$/;"	v	file:
bitlst_table_last	haifa-sched.c	/^static int bitlst_table_last;$/;"	v	file:
bitlst_table_size	haifa-sched.c	/^static int bitlst_table_size;$/;"	v	file:
bitmap_bit_p	bitmap.c	/^bitmap_bit_p (head, bit)$/;"	f
bitmap_clear	bitmap.c	/^bitmap_clear (head)$/;"	f
bitmap_clear_bit	bitmap.c	/^bitmap_clear_bit (head, bit)$/;"	f
bitmap_copy	bitmap.c	/^bitmap_copy (to, from)$/;"	f
bitmap_debug_file	bitmap.c	/^bitmap_debug_file (file, head)$/;"	f
bitmap_element_allocate	bitmap.c	/^bitmap_element_allocate ()$/;"	f	file:
bitmap_element_free	bitmap.c	/^bitmap_element_free (head, elt)$/;"	f	file:
bitmap_element_link	bitmap.c	/^bitmap_element_link (head, element)$/;"	f	file:
bitmap_element_zerop	bitmap.c	/^bitmap_element_zerop (element)$/;"	f	file:
bitmap_find_bit	bitmap.c	/^bitmap_find_bit (head, bit)$/;"	f	file:
bitmap_free	bitmap.c	/^bitmap_element *bitmap_free;		\/* Freelist of bitmap elements. *\/$/;"	v
bitmap_index	gcse.c	/^  int bitmap_index;$/;"	m	struct:expr
bitmap_initialize	bitmap.c	/^bitmap_initialize (head)$/;"	f
bitmap_ior_and_compl	bitmap.c	/^bitmap_ior_and_compl (to, from1, from2)$/;"	f
bitmap_obstack	bitmap.c	/^static struct obstack bitmap_obstack;$/;"	v	file:
bitmap_obstack_init	bitmap.c	/^static int bitmap_obstack_init = FALSE;$/;"	v	file:
bitmap_operation	bitmap.c	/^bitmap_operation (to, from1, from2, operation)$/;"	f
bitmap_print	bitmap.c	/^bitmap_print (file, head, prefix, suffix)$/;"	f
bitmap_release_memory	bitmap.c	/^bitmap_release_memory ()$/;"	f
bitmap_set_bit	bitmap.c	/^bitmap_set_bit (head, bit)$/;"	f
bitmap_zero	bitmap.c	/^bitmap_element bitmap_zero;		\/* An element of all zero bits. *\/$/;"	v
bitpattern	enquire.c	/^Procedure bitpattern(p, size) char *p; unsigned int size; {$/;"	f
bits_per_byte	enquire.c	/^int bits_per_byte; \/* the number of bits per unit returned by sizeof() *\/$/;"	v
bitset	haifa-sched.c	/^typedef unsigned HOST_WIDE_INT *bitset;$/;"	t	file:
bitset_member	haifa-sched.c	/^bitset_member (set, index, len)$/;"	f	file:
biv_elimination_giv_has_0_offset	loop.c	/^biv_elimination_giv_has_0_offset (biv, giv, insn)$/;"	f	file:
biv_total_increment	unroll.c	/^biv_total_increment (bl, loop_start, loop_end)$/;"	f
block	resource.c	/^  int block;			\/* Basic block number containing target.  *\/$/;"	m	struct:target_info
block	stmt.c	/^	} block;$/;"	m	union:nesting::<anonymous>
block_alloc	local-alloc.c	/^block_alloc (b)$/;"	f	file:
block_begin	reg-stack.c	/^static rtx *block_begin;$/;"	v	file:
block_depth	final.c	/^static int block_depth;$/;"	v	file:
block_drops_in	reg-stack.c	/^static char *block_drops_in;$/;"	v	file:
block_end	reg-stack.c	/^static rtx *block_end;$/;"	v	file:
block_number	reg-stack.c	/^static int *block_number;$/;"	v	file:
block_out_reg_set	reg-stack.c	/^static HARD_REG_SET *block_out_reg_set;$/;"	v	file:
block_stack	stmt.c	/^struct nesting *block_stack;$/;"	v
block_stack_in	reg-stack.c	/^static stack block_stack_in;$/;"	v	file:
block_start_count	stmt.c	/^	  int block_start_count;$/;"	m	struct:nesting::<anonymous>::<anonymous>
block_start_count	stmt.c	/^  int block_start_count;$/;"	m	struct:goto_fixup
block_start_count	stmt.c	/^int block_start_count;$/;"	v
block_to_bb	haifa-sched.c	/^static int *block_to_bb;$/;"	v	file:
block_ultimate_origin	dwarf2out.c	/^block_ultimate_origin (block)$/;"	f	file:
block_ultimate_origin	dwarfout.c	/^block_ultimate_origin (block)$/;"	f	file:
block_vector	stmt.c	/^static tree *block_vector;$/;"	v	file:
blockage_p	genattrtab.c	/^  unsigned blockage_p	: 1;	\/* this is the blockage range function *\/$/;"	m	struct:attr_desc
blockage_range	haifa-sched.c	/^blockage_range (unit, insn)$/;"	f	file:
blockage_range	sched.c	/^blockage_range (unit, insn)$/;"	f	file:
blockno	libgcc2.c	/^  unsigned long blockno;$/;"	m	struct:
blocks	c-decl.c	/^    tree blocks;$/;"	m	struct:binding_level
blocks	libgcc2.c	/^  struct bb *blocks;$/;"	m	struct:
blocks	reg-stack.c	/^static int blocks;$/;"	v	file:
blocks_nreverse	function.c	/^blocks_nreverse (t)$/;"	f	file:
bmask	real.c	/^static unsigned EMUSHORT bmask[] =$/;"	v	file:
body_begin_attribute	dwarfout.c	/^body_begin_attribute (asm_begin_label)$/;"	f	file:
body_end_attribute	dwarfout.c	/^body_end_attribute (asm_end_label)$/;"	f	file:
boolean_false_node	c-decl.c	/^tree boolean_false_node;$/;"	v
boolean_true_node	c-decl.c	/^tree boolean_true_node;$/;"	v
boolean_type_node	c-decl.c	/^tree boolean_type_node;$/;"	v
botch	mips-tfile.c	/^botch (s)$/;"	f
botch	toplev.c	/^botch (s)$/;"	f
brace_nesting	scan-decls.c	/^int brace_nesting = 0;$/;"	v
branch	cse.c	/^    rtx branch;$/;"	m	struct:cse_basic_block_data::branch_path
branch_insn	profile.c	/^  rtx branch_insn;$/;"	m	struct:adj_list
branch_path	cse.c	/^  struct branch_path {$/;"	s	file:	struct:cse_basic_block_data
branch_prob	profile.c	/^branch_prob (f, dump_file)$/;"	f
branch_prob_dump	toplev.c	/^int branch_prob_dump = 0;$/;"	v
branch_prob_time	toplev.c	/^int branch_prob_time;$/;"	v
break_out_memory_refs	explow.c	/^break_out_memory_refs (x)$/;"	f	file:
break_out_subroutines	genrecog.c	/^break_out_subroutines (head, type, initial)$/;"	f	file:
brfic_args	tree.c	/^struct brfic_args$/;"	s	file:
bss_section	varasm.c	/^bss_section ()$/;"	f
bt	mips-tdump.c	/^typedef enum bt {$/;"	g	file:
bt	mips-tfile.c	/^typedef enum bt {$/;"	g	file:
btVoid	mips-tdump.c	98;"	d	file:
bt_Adr	mips-tdump.c	/^  bt_Adr	= btAdr,	\/* address - integer same size as pointer *\/$/;"	e	file:	enum:bt
bt_Adr	mips-tfile.c	/^  bt_Adr	= btAdr,	\/* address - integer same size as pointer *\/$/;"	e	file:	enum:bt
bt_Bit	mips-tdump.c	/^  bt_Bit	= btBit,	\/* Aligned Bit String *\/$/;"	e	file:	enum:bt
bt_Bit	mips-tfile.c	/^  bt_Bit	= btBit,	\/* Aligned Bit String *\/$/;"	e	file:	enum:bt
bt_Char	mips-tdump.c	/^  bt_Char	= btChar,	\/* character *\/$/;"	e	file:	enum:bt
bt_Char	mips-tfile.c	/^  bt_Char	= btChar,	\/* character *\/$/;"	e	file:	enum:bt
bt_Complex	mips-tdump.c	/^  bt_Complex	= btComplex,	\/* fortran complex *\/$/;"	e	file:	enum:bt
bt_Complex	mips-tfile.c	/^  bt_Complex	= btComplex,	\/* fortran complex *\/$/;"	e	file:	enum:bt
bt_DComplex	mips-tdump.c	/^  bt_DComplex	= btDComplex,	\/* fortran double complex *\/$/;"	e	file:	enum:bt
bt_DComplex	mips-tfile.c	/^  bt_DComplex	= btDComplex,	\/* fortran double complex *\/$/;"	e	file:	enum:bt
bt_Double	mips-tdump.c	/^  bt_Double	= btDouble,	\/* Double (real) *\/$/;"	e	file:	enum:bt
bt_Double	mips-tfile.c	/^  bt_Double	= btDouble,	\/* Double (real) *\/$/;"	e	file:	enum:bt
bt_Enum	mips-tdump.c	/^  bt_Enum	= btEnum,	\/* Enumerated *\/$/;"	e	file:	enum:bt
bt_Enum	mips-tfile.c	/^  bt_Enum	= btEnum,	\/* Enumerated *\/$/;"	e	file:	enum:bt
bt_FixedDec	mips-tdump.c	/^  bt_FixedDec	= btFixedDec,	\/* Fixed Decimal *\/$/;"	e	file:	enum:bt
bt_FixedDec	mips-tfile.c	/^  bt_FixedDec	= btFixedDec,	\/* Fixed Decimal *\/$/;"	e	file:	enum:bt
bt_Float	mips-tdump.c	/^  bt_Float	= btFloat,	\/* float (real) *\/$/;"	e	file:	enum:bt
bt_Float	mips-tfile.c	/^  bt_Float	= btFloat,	\/* float (real) *\/$/;"	e	file:	enum:bt
bt_FloatDec	mips-tdump.c	/^  bt_FloatDec	= btFloatDec,	\/* Float Decimal *\/$/;"	e	file:	enum:bt
bt_FloatDec	mips-tfile.c	/^  bt_FloatDec	= btFloatDec,	\/* Float Decimal *\/$/;"	e	file:	enum:bt
bt_Indirect	mips-tdump.c	/^  bt_Indirect	= btIndirect,	\/* forward or unnamed typedef *\/$/;"	e	file:	enum:bt
bt_Indirect	mips-tfile.c	/^  bt_Indirect	= btIndirect,	\/* forward or unnamed typedef *\/$/;"	e	file:	enum:bt
bt_Int	mips-tdump.c	/^  bt_Int	= btInt,	\/* int *\/$/;"	e	file:	enum:bt
bt_Int	mips-tfile.c	/^  bt_Int	= btInt,	\/* int *\/$/;"	e	file:	enum:bt
bt_Long	mips-tdump.c	/^  bt_Long	= btLong,	\/* long *\/$/;"	e	file:	enum:bt
bt_Long	mips-tfile.c	/^  bt_Long	= btLong,	\/* long *\/$/;"	e	file:	enum:bt
bt_Max	mips-tdump.c	/^  bt_Max	= btMax		\/* Max basic type+1 *\/$/;"	e	file:	enum:bt
bt_Max	mips-tfile.c	/^  bt_Max	= btMax		\/* Max basic type+1 *\/$/;"	e	file:	enum:bt
bt_Nil	mips-tdump.c	/^  bt_Nil	= btNil,	\/* undefined *\/$/;"	e	file:	enum:bt
bt_Nil	mips-tfile.c	/^  bt_Nil	= btNil,	\/* undefined *\/$/;"	e	file:	enum:bt
bt_Picture	mips-tdump.c	/^  bt_Picture	= btPicture,	\/* Picture *\/$/;"	e	file:	enum:bt
bt_Picture	mips-tfile.c	/^  bt_Picture	= btPicture,	\/* Picture *\/$/;"	e	file:	enum:bt
bt_Range	mips-tdump.c	/^  bt_Range	= btRange,	\/* subrange of int *\/$/;"	e	file:	enum:bt
bt_Range	mips-tfile.c	/^  bt_Range	= btRange,	\/* subrange of int *\/$/;"	e	file:	enum:bt
bt_Set	mips-tdump.c	/^  bt_Set	= btSet,	\/* pascal sets *\/$/;"	e	file:	enum:bt
bt_Set	mips-tfile.c	/^  bt_Set	= btSet,	\/* pascal sets *\/$/;"	e	file:	enum:bt
bt_Short	mips-tdump.c	/^  bt_Short	= btShort,	\/* short *\/$/;"	e	file:	enum:bt
bt_Short	mips-tfile.c	/^  bt_Short	= btShort,	\/* short *\/$/;"	e	file:	enum:bt
bt_String	mips-tdump.c	/^  bt_String	= btString,	\/* Varying Length Character String *\/$/;"	e	file:	enum:bt
bt_String	mips-tfile.c	/^  bt_String	= btString,	\/* Varying Length Character String *\/$/;"	e	file:	enum:bt
bt_Struct	mips-tdump.c	/^  bt_Struct	= btStruct,	\/* Structure (Record) *\/$/;"	e	file:	enum:bt
bt_Struct	mips-tfile.c	/^  bt_Struct	= btStruct,	\/* Structure (Record) *\/$/;"	e	file:	enum:bt
bt_Typedef	mips-tdump.c	/^  bt_Typedef	= btTypedef,	\/* defined via a typedef, isymRef points *\/$/;"	e	file:	enum:bt
bt_Typedef	mips-tfile.c	/^  bt_Typedef	= btTypedef,	\/* defined via a typedef, isymRef points *\/$/;"	e	file:	enum:bt
bt_UChar	mips-tdump.c	/^  bt_UChar	= btUChar,	\/* unsigned character *\/$/;"	e	file:	enum:bt
bt_UChar	mips-tfile.c	/^  bt_UChar	= btUChar,	\/* unsigned character *\/$/;"	e	file:	enum:bt
bt_UInt	mips-tdump.c	/^  bt_UInt	= btUInt,	\/* unsigned int *\/$/;"	e	file:	enum:bt
bt_UInt	mips-tfile.c	/^  bt_UInt	= btUInt,	\/* unsigned int *\/$/;"	e	file:	enum:bt
bt_ULong	mips-tdump.c	/^  bt_ULong	= btULong,	\/* unsigned long *\/$/;"	e	file:	enum:bt
bt_ULong	mips-tfile.c	/^  bt_ULong	= btULong,	\/* unsigned long *\/$/;"	e	file:	enum:bt
bt_UShort	mips-tdump.c	/^  bt_UShort	= btUShort,	\/* unsigned short *\/$/;"	e	file:	enum:bt
bt_UShort	mips-tfile.c	/^  bt_UShort	= btUShort,	\/* unsigned short *\/$/;"	e	file:	enum:bt
bt_Union	mips-tdump.c	/^  bt_Union	= btUnion,	\/* Union (variant) *\/$/;"	e	file:	enum:bt
bt_Union	mips-tfile.c	/^  bt_Union	= btUnion,	\/* Union (variant) *\/$/;"	e	file:	enum:bt
bt_Void	mips-tdump.c	/^  bt_Void	= btVoid,	\/* void *\/$/;"	e	file:	enum:bt
bt_Void	mips-tfile.c	/^  bt_Void	= btVoid,	\/* Void *\/$/;"	e	file:	enum:bt
bt_Void	mips-tfile.c	801;"	d	file:
bt_t	mips-tdump.c	/^} bt_t;$/;"	t	file:
bt_t	mips-tfile.c	/^} bt_t;$/;"	t	file:
bucket	print-tree.c	/^struct bucket$/;"	s	file:
bucket_hdr	cccp.c	/^  struct assertion_hashnode **bucket_hdr;$/;"	m	struct:assertion_hashnode
bucket_hdr	cccp.c	/^  struct hashnode **bucket_hdr;	\/* also, a back pointer to this node's hash$/;"	m	struct:hashnode
buf	cccp.c	/^  U_CHAR *buf;$/;"	m	struct:file_buf
buf	fix-header.c	/^sstring buf;$/;"	v
bufp	cccp.c	/^  U_CHAR *bufp;$/;"	m	struct:file_buf
bugs	enquire.c	/^    bugs=0;	\/* The number of (possible) bugs in the output *\/$/;"	v
build	tree.c	/^build VPROTO((enum tree_code code, tree tt, ...))$/;"	f
build1	tree.c	/^build1 (code, type, node)$/;"	f
build_abbrev_table	dwarf2out.c	/^build_abbrev_table (die)$/;"	f	file:
build_array_ref	c-typeck.c	/^build_array_ref (array, index)$/;"	f
build_array_type	tree.c	/^build_array_type (elt_type, index_type)$/;"	f
build_binary_op	c-typeck.c	/^build_binary_op (code, orig_op0, orig_op1, convert_p)$/;"	f
build_block	tree.c	/^build_block (vars, tags, subblocks, supercontext, chain)$/;"	f
build_c_cast	c-typeck.c	/^build_c_cast (type, expr)$/;"	f
build_complex	tree.c	/^build_complex (type, real, imag)$/;"	f
build_complex_type	tree.c	/^build_complex_type (component_type)$/;"	f
build_component_ref	c-typeck.c	/^build_component_ref (datum, component)$/;"	f
build_compound_expr	c-typeck.c	/^build_compound_expr (list)$/;"	f
build_conditional_expr	c-typeck.c	/^build_conditional_expr (ifexp, op1, op2)$/;"	f
build_control_flow	haifa-sched.c	/^build_control_flow (s_preds, s_succs, num_preds, num_succs)$/;"	f	file:
build_decl	tree.c	/^build_decl (code, name, type)$/;"	f
build_decl_attribute_variant	tree.c	/^build_decl_attribute_variant (ddecl, attribute)$/;"	f
build_decl_list	tree.c	/^build_decl_list (parm, value)$/;"	f
build_enumerator	c-decl.c	/^build_enumerator (name, value)$/;"	f
build_expr_list	tree.c	/^build_expr_list (parm, value)$/;"	f
build_expr_wfl	tree.c	/^build_expr_wfl (node, file, line, col)$/;"	f
build_function_call	c-typeck.c	/^build_function_call (function, params)$/;"	f
build_function_type	tree.c	/^build_function_type (value_type, arg_types)$/;"	f
build_index_2_type	tree.c	/^build_index_2_type (lowval,highval)$/;"	f
build_index_type	tree.c	/^build_index_type (maxval)$/;"	f
build_indirect_ref	c-typeck.c	/^build_indirect_ref (ptr, errorstring)$/;"	f
build_insn_chain	global.c	/^build_insn_chain (first)$/;"	f	file:
build_int_2_wide	tree.c	/^build_int_2_wide (low, hi)$/;"	f
build_method_type	tree.c	/^build_method_type (basetype, type)$/;"	f
build_modify_expr	c-typeck.c	/^build_modify_expr (lhs, modifycode, rhs)$/;"	f
build_nt	tree.c	/^build_nt VPROTO((enum tree_code code, ...))$/;"	f
build_objc_string	c-lang.c	/^build_objc_string (len, str)$/;"	f
build_offset_type	tree.c	/^build_offset_type (basetype, type)$/;"	f
build_parse_node	tree.c	/^build_parse_node VPROTO((enum tree_code code, ...))$/;"	f
build_pointer_type	tree.c	/^build_pointer_type (to_type)$/;"	f
build_qualified_type	tree.c	/^build_qualified_type (type, type_quals)$/;"	f
build_range_check	fold-const.c	/^build_range_check (type, exp, in_p, low, high)$/;"	f	file:
build_range_type	tree.c	/^build_range_type (type, lowval, highval)$/;"	f
build_real	tree.c	/^build_real (type, d)$/;"	f
build_real_from_int_cst	tree.c	/^build_real_from_int_cst (type, i)$/;"	f
build_real_from_int_cst_1	tree.c	/^build_real_from_int_cst_1 (data)$/;"	f	file:
build_reference_type	tree.c	/^build_reference_type (to_type)$/;"	f
build_search_list	gcc.c	/^build_search_list (paths, prefix, check_dir_p)$/;"	f	file:
build_string	tree.c	/^build_string (len, str)$/;"	f
build_tree_list	tree.c	/^build_tree_list (parm, value)$/;"	f
build_type_attribute_variant	tree.c	/^build_type_attribute_variant (ttype, attribute)$/;"	f
build_type_copy	tree.c	/^build_type_copy (type)$/;"	f
build_unary_op	c-typeck.c	/^build_unary_op (code, xarg, noconvert)$/;"	f
builtin_function	c-decl.c	/^builtin_function (name, type, function_code, library_name)$/;"	f
byte	mips-tfile.c	/^  char		byte	[ PAGE_SIZE ];$/;"	m	union:page
byte_mode	emit-rtl.c	/^enum machine_mode byte_mode;	\/* Mode whose width is BITS_PER_UNIT.  *\/$/;"	v
byte_size_attribute	dwarfout.c	/^byte_size_attribute (tree_node)$/;"	f	file:
bytes_used	gcse.c	/^static int bytes_used;$/;"	v	file:
bzero_libfunc	optabs.c	/^rtx bzero_libfunc;$/;"	v
c	c-lex.c	/^  int c;$/;"	m	struct:pf_args
c4xtoe	real.c	/^c4xtoe (d, e, mode)$/;"	f	file:
c89	cccp.c	/^int c89;$/;"	v
c89	cexp.c	/^int c89;$/;"	v
c9x	cccp.c	/^int c9x;$/;"	v
c_alignof	c-typeck.c	/^c_alignof (type)$/;"	f
c_alignof_expr	c-typeck.c	/^c_alignof_expr (expr)$/;"	f
c_apply_type_quals_to_decl	c-common.c	/^c_apply_type_quals_to_decl (type_quals, decl)$/;"	f
c_build_qualified_type	c-common.c	/^c_build_qualified_type (type, type_quals)$/;"	f
c_decode_option	c-decl.c	/^c_decode_option (argc, argv)$/;"	f
c_expand_asm_operands	c-typeck.c	/^c_expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)$/;"	f
c_expand_end_cond	c-common.c	/^c_expand_end_cond ()$/;"	f
c_expand_expr_stmt	c-common.c	/^c_expand_expr_stmt (expr)$/;"	f
c_expand_return	c-typeck.c	/^c_expand_return (retval)$/;"	f
c_expand_start_case	c-typeck.c	/^c_expand_start_case (exp)$/;"	f
c_expand_start_cond	c-common.c	/^c_expand_start_cond (cond, exitflag, compstmt_count)$/;"	f
c_expand_start_else	c-common.c	/^c_expand_start_else ()$/;"	f
c_file	collect2.c	/^static char *c_file;			\/* <xxx>.c for constructor\/destructor list.  *\/$/;"	v	file:
c_file_name	collect2.c	/^char *c_file_name;		        \/* pathname of gcc *\/$/;"	v
c_find_base_decl	c-common.c	/^c_find_base_decl (t)$/;"	f	file:
c_function	c-decl.c	/^struct c_function$/;"	s	file:
c_function_chain	c-decl.c	/^struct c_function *c_function_chain;$/;"	v
c_function_varargs	c-decl.c	/^static int c_function_varargs;$/;"	v	file:
c_get_alias_set	c-common.c	/^c_get_alias_set (t)$/;"	f
c_kind	tree.c	/^  c_kind,$/;"	e	file:
c_mark_varargs	c-decl.c	/^c_mark_varargs ()$/;"	f
c_size_in_bytes	c-typeck.c	/^c_size_in_bytes (type)$/;"	f
c_sizeof	c-typeck.c	/^c_sizeof (type)$/;"	f
c_sizeof_nowarn	c-typeck.c	/^c_sizeof_nowarn (type)$/;"	f
c_strlen	expr.c	/^c_strlen (src)$/;"	f	file:
c_system_include_path	cccp.c	/^    int c_system_include_path;$/;"	m	struct:file_name_list
c_test	genrecog.c	/^  char *c_test;			\/* Additional test to perform *\/$/;"	m	struct:decision
cached_cse_reg_info	cse.c	/^static struct cse_reg_info *cached_cse_reg_info;$/;"	v	file:
cached_regno	cse.c	/^static int cached_regno;$/;"	v	file:
cacheflush	libgcc2.c	/^cacheflush (char *beg, int size, int flag)$/;"	f
calc_die_sizes	dwarf2out.c	/^calc_die_sizes (die)$/;"	f	file:
calculate_branch_probs	gcov.c	/^calculate_branch_probs (current_graph, block_num, branch_probs, last_line_num)$/;"	f	file:
calculate_can_reach_end	jump.c	/^calculate_can_reach_end (last, check_deleted, delete_final_note)$/;"	f	file:
calculate_giv_inc	unroll.c	/^calculate_giv_inc (pattern, src_insn, regno)$/;"	f	file:
calculate_loop_depth	flow.c	/^calculate_loop_depth (insns)$/;"	f	file:
calculate_needs	reload1.c	/^calculate_needs (chain)$/;"	f	file:
calculate_needs_all_insns	reload1.c	/^calculate_needs_all_insns (global)$/;"	f	file:
call_fixed_reg_set	regclass.c	/^HARD_REG_SET call_fixed_reg_set;$/;"	v
call_fixed_regs	regclass.c	/^char call_fixed_regs[FIRST_PSEUDO_REGISTER];$/;"	v
call_get_eh_context	except.c	/^call_get_eh_context ()$/;"	f	file:
call_insn	gcov.c	/^  int call_insn;$/;"	m	struct:arcdata
call_obstack	genflags.c	/^static struct obstack call_obstack, normal_obstack;$/;"	v	file:
call_used_reg_set	regclass.c	/^HARD_REG_SET call_used_reg_set;$/;"	v
call_used_regs	regclass.c	/^char call_used_regs[FIRST_PSEUDO_REGISTER];$/;"	v
caller_save_needed	reload1.c	/^int caller_save_needed;$/;"	v
calls_crossed	haifa-sched.c	/^    int calls_crossed;$/;"	m	struct:sometimes
calls_crossed	sched.c	/^  int calls_crossed;$/;"	m	struct:sometimes
calls_function	calls.c	/^calls_function (exp, which)$/;"	f	file:
calls_function_1	calls.c	/^calls_function_1 (exp, which)$/;"	f	file:
calls_function_save_exprs	calls.c	/^static tree calls_function_save_exprs;$/;"	v	file:
can_combine_p	combine.c	/^can_combine_p (insn, i3, pred, succ, pdest, psrc)$/;"	f	file:
can_compare_p	optabs.c	/^can_compare_p (mode)$/;"	f
can_conditionally_move_p	optabs.c	/^can_conditionally_move_p (mode)$/;"	f
can_copy_init_p	gcse.c	/^static int can_copy_init_p;$/;"	v	file:
can_copy_p	gcse.c	/^static char can_copy_p[(int) NUM_MACHINE_MODES];$/;"	v	file:
can_delete_label_p	flow.c	/^can_delete_label_p (label)$/;"	f	file:
can_delete_note_p	flow.c	/^can_delete_note_p (note)$/;"	f	file:
can_disregard_other_sets	gcse.c	/^can_disregard_other_sets (addr_this_reg, insn, for_combine)$/;"	f	file:
can_eliminate	reload1.c	/^  int can_eliminate;		\/* Non-zero if this elimination can be done.  *\/$/;"	m	struct:elim_table
can_eliminate_previous	reload1.c	/^  int can_eliminate_previous;	\/* Value of CAN_ELIMINATE in previous scan over$/;"	m	struct:elim_table
can_extend_p	optabs.c	/^can_extend_p (to_mode, from_mode, unsignedp)$/;"	f
can_fix_p	optabs.c	/^can_fix_p (fixmode, fltmode, unsignedp, truncp_ptr)$/;"	f	file:
can_float_p	optabs.c	/^can_float_p (fltmode, fixmode, unsignedp)$/;"	f	file:
can_reach_end	jump.c	/^int can_reach_end;$/;"	v
can_reverse_comparison_p	jump.c	/^can_reverse_comparison_p (comparison, insn)$/;"	f
can_throw	except.c	/^can_throw (insn)$/;"	f	file:
cancel_changes	recog.c	/^cancel_changes (num)$/;"	f
candidate	haifa-sched.c	/^candidate;$/;"	t	file:
candidate_table	haifa-sched.c	/^static candidate *candidate_table;$/;"	v	file:
canon_hash	cse.c	/^canon_hash (x, mode)$/;"	f	file:
canon_reg	cse.c	/^canon_reg (x, insn)$/;"	f	file:
canon_rtx	alias.c	/^canon_rtx (x)$/;"	f	file:
cant_move	haifa-sched.c	/^static char *cant_move;$/;"	v	file:
careful_find_l_paren	protoize.c	/^careful_find_l_paren (p)$/;"	f	file:
case_index_expr_type	stmt.c	/^case_index_expr_type ()$/;"	f
case_list	stmt.c	/^	  struct case_node *case_list;$/;"	m	struct:nesting::<anonymous>::<anonymous>
case_node	stmt.c	/^struct case_node$/;"	s	file:
case_node	stmt.c	/^typedef struct case_node case_node;$/;"	t	file:
case_node_ptr	stmt.c	/^typedef struct case_node *case_node_ptr;$/;"	t	file:
case_stack	stmt.c	/^struct nesting *case_stack;$/;"	v
case_stmt	stmt.c	/^	} case_stmt;$/;"	m	union:nesting::<anonymous>
case_tree2list	stmt.c	/^case_tree2list (node, right)$/;"	f	file:
catch_clauses	except.c	/^rtx catch_clauses;$/;"	v
catch_signal	mips-tfile.c	/^catch_signal (signum)$/;"	f
catchstack	except.c	/^static struct eh_stack catchstack;$/;"	v	file:
caught_return_label_stack	except.c	/^struct label_node *caught_return_label_stack = NULL;$/;"	v
cb_args	fold-const.c	/^struct cb_args$/;"	s	file:
cc0_live	flow.c	/^static int cc0_live;$/;"	v	file:
cc1_spec	gcc.c	/^static char *cc1_spec = CC1_SPEC;$/;"	v	file:
cc1plus_spec	gcc.c	/^static char *cc1plus_spec = CC1PLUS_SPEC;$/;"	v	file:
cc_prev_status	final.c	/^CC_STATUS cc_prev_status;$/;"	v
cc_status	final.c	/^CC_STATUS cc_status;$/;"	v
ceil_log	enquire.c	/^int ceil_log(base, x) int base; Long_double x; {$/;"	f
ceil_log2	expmed.c	/^ceil_log2 (x)$/;"	f
ceiling	dwarf2out.c	/^ceiling (value, boundary)$/;"	f	file:
ceiling	dwarfout.c	/^ceiling (value, boundary)$/;"	f	file:
cfa_offset	dwarf2out.c	/^static long cfa_offset;$/;"	v	file:
cfa_offset	function.c	/^static int cfa_offset;$/;"	v	file:
cfa_reg	dwarf2out.c	/^static unsigned long cfa_reg;$/;"	v	file:
cfa_store_offset	dwarf2out.c	/^static long cfa_store_offset;$/;"	v	file:
cfa_store_reg	dwarf2out.c	/^static unsigned cfa_store_reg;$/;"	v	file:
cfa_temp_reg	dwarf2out.c	/^static unsigned cfa_temp_reg;$/;"	v	file:
cfa_temp_value	dwarf2out.c	/^static long cfa_temp_value;$/;"	v	file:
cfc_args	cse.c	/^struct cfc_args$/;"	s	file:
chain_member	tree.c	/^chain_member (elem, chain)$/;"	f
chain_member_purpose	tree.c	/^chain_member_purpose (elem, chain)$/;"	f
chain_member_value	tree.c	/^chain_member_value (elem, chain)$/;"	f
chain_next	protoize.c	/^  const f_list_chain_item *	chain_next;	\/* -> to next item on chain *\/$/;"	m	struct:f_list_chain_item_struct
chainon	tree.c	/^chainon (op1, op2)$/;"	f
change_address	emit-rtl.c	/^change_address (memref, mode, addr)$/;"	f
change_newlines	cccp.c	/^change_newlines (start, length)$/;"	f	file:
change_newlines	cpphash.c	/^change_newlines (start, length)$/;"	f	file:
change_stack	reg-stack.c	/^change_stack (insn, old, new, when)$/;"	f	file:
change_state	genrecog.c	/^change_state (oldpos, newpos, indent)$/;"	f	file:
change_t	recog.c	/^typedef struct change_t$/;"	s	file:
change_t	recog.c	/^} change_t;$/;"	t	file:
changes	recog.c	/^static change_t *changes;$/;"	v	file:
changes_allocated	recog.c	/^static int changes_allocated;$/;"	v	file:
char	libgcc2.c	1074;"	d	file:
char	libgcc2.c	1096;"	d	file:
char	libgcc2.c	1118;"	d	file:
char	libgcc2.c	112;"	d	file:
char	libgcc2.c	1147;"	d	file:
char_array_type_node	c-decl.c	/^tree char_array_type_node;$/;"	v
char_type_node	c-decl.c	/^tree char_type_node;$/;"	v
check_annul_list_true_false	reorg.c	/^check_annul_list_true_false (annul_true_p, delay_list)$/;"	f	file:
check_asm_operands	recog.c	/^check_asm_operands (x)$/;"	f
check_assertion	cccp.c	/^check_assertion (name, sym_length, tokens_specified, tokens)$/;"	f
check_assertion	cexp.c	/^check_assertion (name, sym_length, tokens_specified, tokens)$/;"	f
check_attr_test	genattrtab.c	/^check_attr_test (exp, is_const)$/;"	f	file:
check_attr_value	genattrtab.c	/^check_attr_value (exp, attr)$/;"	f	file:
check_aux_info	protoize.c	/^check_aux_info (cond)$/;"	f	file:
check_case_value	c-common.c	/^check_case_value (value)$/;"	f
check_dbra_loop	loop.c	/^check_dbra_loop (loop_end, insn_count, loop_start, loop_info)$/;"	f	file:
check_defines	enquire.c	/^Procedure check_defines() {$/;"	f
check_defs	genattrtab.c	/^check_defs ()$/;"	f	file:
check_exception_handler_labels	except.c	/^check_exception_handler_labels ()$/;"	f
check_expand	cccp.c	354;"	d	file:
check_final_value	loop.c	/^check_final_value (v, loop_start, loop_end, n_iterations)$/;"	f	file:
check_fold_consts	cse.c	/^check_fold_consts (data)$/;"	f	file:
check_for_full_enumeration_handling	stmt.c	/^check_for_full_enumeration_handling (type)$/;"	f
check_format_info	c-common.c	/^check_format_info (info, params)$/;"	f	file:
check_function_format	c-common.c	/^check_function_format (name, assembler_name, params)$/;"	f
check_global_declarations	toplev.c	/^check_global_declarations (vec, len)$/;"	f
check_init_type_bitfields	c-typeck.c	/^check_init_type_bitfields (type)$/;"	f	file:
check_lang_option	toplev.c	/^check_lang_option (option, lang_option)$/;"	f	file:
check_live	haifa-sched.c	/^check_live (insn, src)$/;"	f	file:
check_live_1	haifa-sched.c	/^check_live_1 (src, x)$/;"	f	file:
check_live_switch	gcc.c	/^check_live_switch (switchnum, prefix_length)$/;"	f	file:
check_macro_name	cccp.c	/^check_macro_name (symname, assertion)$/;"	f	file:
check_macro_name	cpplib.c	/^check_macro_name (pfile, symname, assertion)$/;"	f
check_macro_names	fix-header.c	/^check_macro_names (pfile, names)$/;"	f
check_max_integer_computation_mode	expr.c	/^check_max_integer_computation_mode (exp)$/;"	f
check_newline	c-lex.c	/^check_newline ()$/;"	f
check_precompiled	cccp.c	/^check_precompiled (pcf, st, fname, limit)$/;"	f	file:
check_preconditions	cccp.c	/^check_preconditions (prec)$/;"	f	file:
check_protection	fix-header.c	/^check_protection (ifndef_line, endif_line)$/;"	f
check_seenlabel	stmt.c	/^check_seenlabel ()$/;"	f	file:
check_source	protoize.c	/^check_source (cond, clean_p)$/;"	f	file:
check_stack_regs_mentioned	reg-stack.c	/^check_stack_regs_mentioned (insn)$/;"	f	file:
checkit	doprint.c	/^checkit VPROTO ((const char* format, ...))$/;"	f	file:
checktype	enquire.c	1116;"	d	file:
children	alias.c	/^  splay_tree children;$/;"	m	struct:alias_set_entry
chkr_check_addr_libfunc	optabs.c	/^rtx chkr_check_addr_libfunc;$/;"	v
chkr_check_exec_libfunc	optabs.c	/^rtx chkr_check_exec_libfunc;$/;"	v
chkr_check_str_libfunc	optabs.c	/^rtx chkr_check_str_libfunc;$/;"	v
chkr_copy_bitmap_libfunc	optabs.c	/^rtx chkr_copy_bitmap_libfunc;$/;"	v
chkr_set_right_libfunc	optabs.c	/^rtx chkr_set_right_libfunc;$/;"	v
choose_hard_reg_mode	regclass.c	/^choose_hard_reg_mode (regno, nregs)$/;"	f
choose_multiplier	expmed.c	/^choose_multiplier (d, n, precision, multiplier_ptr, post_shift_ptr, lgup_ptr)$/;"	f	file:
choose_reload_regs	reload1.c	/^choose_reload_regs (chain)$/;"	f	file:
chosen	tlink.c	/^  int chosen;$/;"	m	struct:symbol_hash_entry
cie_cfi_head	dwarf2out.c	/^static dw_cfi_ref cie_cfi_head;$/;"	v	file:
cie_info	frame.c	/^struct cie_info {$/;"	s	file:
class_narrowest_mode	rtl.c	/^enum machine_mode class_narrowest_mode[(int) MAX_MODE_CLASS];$/;"	v
classic_gcse	gcse.c	/^classic_gcse ()$/;"	f	file:
classify_insn	emit-rtl.c	/^classify_insn (x)$/;"	f
clean_dump_file	toplev.c	/^clean_dump_file (suffix)$/;"	f	file:
clean_graph_dump_file	graph.c	/^clean_graph_dump_file (base, suffix)$/;"	f
clean_read_ptr	protoize.c	/^static const char * clean_read_ptr;$/;"	v	file:
clean_text_base	protoize.c	/^static const char *clean_text_base;$/;"	v	file:
clean_text_limit	protoize.c	/^static const char *clean_text_limit;$/;"	v	file:
cleanup_label	function.c	/^rtx cleanup_label;$/;"	v
cleanup_list_list	stmt.c	/^  tree cleanup_list_list;$/;"	m	struct:goto_fixup
cleanup_ptr	stmt.c	/^	  tree *cleanup_ptr;$/;"	m	struct:nesting::<anonymous>::<anonymous>
cleanup_subreg_operands	final.c	/^cleanup_subreg_operands (insn)$/;"	f
cleanups	stmt.c	/^	  tree cleanups;$/;"	m	struct:nesting::<anonymous>::<anonymous>
clear_args	gcc.c	/^clear_args ()$/;"	f	file:
clear_binding_level	c-decl.c	/^static struct binding_level clear_binding_level$/;"	v	file:
clear_by_pieces	expr.c	/^clear_by_pieces (to, len, align)$/;"	f	file:
clear_by_pieces	expr.c	/^struct clear_by_pieces$/;"	s	file:
clear_by_pieces_1	expr.c	/^clear_by_pieces_1 (genfun, mode, data)$/;"	f	file:
clear_codes	genrecog.c	/^clear_codes (p)$/;"	f	file:
clear_const_double_mem	varasm.c	/^clear_const_double_mem ()$/;"	f
clear_edges	flow.c	/^clear_edges ()$/;"	f	file:
clear_failure_queue	gcc.c	/^clear_failure_queue ()$/;"	f	file:
clear_function_eh_region	except.c	/^clear_function_eh_region ()$/;"	f	file:
clear_hashed_info_for_insn	resource.c	/^clear_hashed_info_for_insn (insn)$/;"	f
clear_last_expr	stmt.c	/^clear_last_expr ()$/;"	f
clear_limbo_values	c-decl.c	/^clear_limbo_values (block)$/;"	f	file:
clear_modes	genrecog.c	/^clear_modes (p)$/;"	f	file:
clear_momentary	tree.c	/^clear_momentary ()$/;"	f
clear_parm_order	c-decl.c	/^clear_parm_order ()$/;"	f
clear_pending_stack_adjust	expr.c	/^clear_pending_stack_adjust ()$/;"	f
clear_reload_reg_in_use	reload1.c	/^clear_reload_reg_in_use (regno, opnum, type, mode)$/;"	f	file:
clear_secondary_mem	reload.c	/^clear_secondary_mem ()$/;"	f
clear_storage	expr.c	/^clear_storage (object, size, align)$/;"	f
clear_struct_flag	genattrtab.c	/^clear_struct_flag (x)$/;"	f	file:
clear_units	haifa-sched.c	/^clear_units ()$/;"	f	file:
clear_units	sched.c	/^clear_units ()$/;"	f	file:
clobber_ent	genemit.c	/^struct clobber_ent$/;"	s	file:
clobber_list	genemit.c	/^} *clobber_list;$/;"	v
clobber_pat	genemit.c	/^struct clobber_pat$/;"	s	file:
clobbers_seen_this_insn	genconfig.c	/^static int clobbers_seen_this_insn;$/;"	v	file:
clock_var	haifa-sched.c	/^static int clock_var;$/;"	v	file:
close_dump_file	toplev.c	/^close_dump_file (func, insns)$/;"	f	file:
clrstr_optab	expr.c	/^enum insn_code clrstr_optab[NUM_MACHINE_MODES];$/;"	v
cluster_ptr	mips-tfile.c	/^static page_t	*cluster_ptr	= NULL;$/;"	v	file:
cmdline_lib_dirs	collect2.c	/^static struct path_prefix cmdline_lib_dirs; \/* directories specified with -L *\/$/;"	v	file:
cmp_combine_givs_stats	loop.c	/^cmp_combine_givs_stats (x, y)$/;"	f	file:
cmp_optab	optabs.c	/^optab cmp_optab;$/;"	v
cmp_recombine_givs_stats	loop.c	/^cmp_recombine_givs_stats (x, y)$/;"	f	file:
co	enquire.c	/^char co[4], oc[4]; \/* Comment starter and ender symbols *\/$/;"	v
code	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:
code	collect2.c	/^char * code;		\/* pointer to code segment *\/$/;"	v
code	fold-const.c	/^  enum tree_code code;$/;"	m	struct:cb_args
code	genrecog.c	/^  RTX_CODE code;		\/* Code to test for or UNKNOWN to suppress *\/$/;"	m	struct:decision
code	mips-tdump.c	/^struct {short code; char string[10];} stab_names[]  = {$/;"	m	struct:
code_align	frame.c	/^  int code_align;$/;"	m	struct:cie_info
code_label	stmt.c	/^  tree			code_label; \/* Label to jump to when node matches *\/$/;"	m	struct:case_node
code_number	genemit.c	/^  int code_number;		\/* Counts only insns.  *\/$/;"	m	struct:clobber_ent
code_number	genoutput.c	/^  int code_number;$/;"	m	struct:data
code_ptr	genextract.c	/^struct code_ptr$/;"	s	file:
code_to_optab	optabs.c	/^optab code_to_optab[NUM_RTX_CODE + 1];$/;"	v
codes	genrecog.c	/^  RTX_CODE codes[NUM_RTX_CODE];$/;"	m	struct:pred_table
coff_dt	mips-tfile.c	/^typedef enum coff_dt {$/;"	g	file:
coff_dt_t	mips-tfile.c	/^} coff_dt_t;$/;"	t	file:
coff_storage	mips-tfile.c	/^enum coff_storage {$/;"	g	file:
coff_storage_t	mips-tfile.c	/^} coff_storage_t;$/;"	v
coff_type	mips-tfile.c	/^typedef enum coff_type {$/;"	g	file:
coff_type_t	mips-tfile.c	/^} coff_type_t;$/;"	t	file:
collect_execute	collect2.c	/^collect_execute (prog, argv, redir)$/;"	f
collect_exit	collect2.c	/^collect_exit (status)$/;"	f
collect_expansion	cccp.c	/^collect_expansion (buf, end, nargs, arglist)$/;"	f	file:
collect_expansion	cpphash.c	/^collect_expansion (pfile, buf, limit, nargs, arglist)$/;"	f	file:
collect_iterators	c-iterate.c	/^collect_iterators (exp, list)$/;"	f	file:
collect_obstack	gcc.c	/^static struct obstack collect_obstack;$/;"	v	file:
collect_wait	collect2.c	/^collect_wait (prog)$/;"	f
combinable_i3pat	combine.c	/^combinable_i3pat (i3, loc, i2dest, i1dest, i1_not_in_src, pi3dest_killed)$/;"	f	file:
combine_attempts	combine.c	/^static int combine_attempts;$/;"	v	file:
combine_dump	toplev.c	/^int combine_dump = 0;$/;"	v
combine_extras	combine.c	/^static int combine_extras;$/;"	v	file:
combine_givs	loop.c	/^combine_givs (bl)$/;"	f	file:
combine_givs_p	loop.c	/^combine_givs_p (g1, g2)$/;"	f	file:
combine_givs_stats	loop.c	/^struct combine_givs_stats$/;"	s	file:
combine_instructions	combine.c	/^combine_instructions (f, nregs)$/;"	f
combine_max_regno	combine.c	/^static int combine_max_regno;$/;"	v	file:
combine_merges	combine.c	/^static int combine_merges;$/;"	v	file:
combine_movables	loop.c	/^combine_movables (movables, nregs)$/;"	f	file:
combine_parm_decls	c-decl.c	/^combine_parm_decls (specparms, parmlist, void_at_end)$/;"	f
combine_regs	local-alloc.c	/^combine_regs (usedreg, setreg, may_save_copy, insn_number, insn, already_dead)$/;"	f	file:
combine_reloads	reload.c	/^combine_reloads ()$/;"	f	file:
combine_strings	c-common.c	/^combine_strings (strings)$/;"	f
combine_successes	combine.c	/^static int combine_successes;$/;"	v	file:
combine_temp_slots	function.c	/^combine_temp_slots ()$/;"	f
combine_time	toplev.c	/^int combine_time;$/;"	v
commit_edge_insertions	flow.c	/^commit_edge_insertions ()$/;"	f
commit_one_edge_insertion	flow.c	/^commit_one_edge_insertion (e)$/;"	f	file:
common_type	c-typeck.c	/^common_type (t1, t2)$/;"	f
commutative	regmove.c	/^  int commutative[MAX_RECOG_OPERANDS];$/;"	m	struct:match
comp	gcse.c	/^static sbitmap *comp;$/;"	v	file:
comp_def_part	cccp.c	/^comp_def_part (first, beg1, len1, beg2, len2, last)$/;"	f	file:
comp_def_part	cpphash.c	/^comp_def_part (first, beg1, len1, beg2, len2, last)$/;"	f	file:
comp_dir_attribute	dwarfout.c	/^comp_dir_attribute (dirname)$/;"	f	file:
comp_target_types	c-typeck.c	/^comp_target_types (ttl, ttr)$/;"	f	file:
comp_unit_die	dwarf2out.c	/^static dw_die_ref comp_unit_die;$/;"	v	file:
compare	expr.c	/^compare (exp, signed_code, unsigned_code)$/;"	f	file:
compare_constant	varasm.c	/^compare_constant (exp, desc)$/;"	f	file:
compare_constant_1	varasm.c	/^compare_constant_1 (exp, p)$/;"	f	file:
compare_constant_rtx	varasm.c	/^compare_constant_rtx (mode, x, desc)$/;"	f	file:
compare_defs	cccp.c	/^compare_defs (d1, d2)$/;"	f	file:
compare_defs	cpphash.c	/^compare_defs (pfile, d1, d2)$/;"	f
compare_ent_dosname	doschk.c	/^compare_ent_dosname (e1, e2)$/;"	f
compare_ent_fullname	doschk.c	/^compare_ent_fullname (e1, e2)$/;"	f
compare_for_stack_reg	reg-stack.c	/^compare_for_stack_reg (insn, regstack, pat)$/;"	f	file:
compare_from_rtx	expr.c	/^compare_from_rtx (op0, op1, code, unsignedp, mode, size, align)$/;"	f
compare_token_lists	cccp.c	/^compare_token_lists (l1, l2)$/;"	f	file:
compares_alternatives_p	genattrtab.c	/^compares_alternatives_p (exp)$/;"	f	file:
comparison_dominates_p	jump.c	/^comparison_dominates_p (code1, code2)$/;"	f
comparison_operator	recog.c	/^comparison_operator (op, mode)$/;"	f
compile_file	toplev.c	/^compile_file (name)$/;"	f	file:
compile_params	protoize.c	/^static const char ** compile_params = 0;	\/* Option string for gcc.  *\/$/;"	v	file:
compiler	gcc.c	/^struct compiler$/;"	s	file:
compiler_file_name	protoize.c	/^static const char *compiler_file_name = "gcc";$/;"	v	file:
compiler_version	gcc.c	/^static char *compiler_version;$/;"	v	file:
compilers	gcc.c	/^static struct compiler *compilers;$/;"	v	file:
complete_array_type	c-decl.c	/^complete_array_type (type, initial_value, do_default)$/;"	f
complex_double_type_node	c-decl.c	/^tree complex_double_type_node;$/;"	v
complex_float_type_node	c-decl.c	/^tree complex_float_type_node;$/;"	v
complex_integer_type_node	c-decl.c	/^tree complex_integer_type_node;$/;"	v
complex_long_double_type_node	c-decl.c	/^tree complex_long_double_type_node;$/;"	v
component	cccp.c	/^  char *component;		\/* The component containing the directory *\/$/;"	m	struct:default_include
component	cppinit.c	/^  char *component;		\/* The component containing the directory$/;"	m	struct:default_include
component	protoize.c	/^			 const char *component;$/;"	m	struct:default_include
compstmt_count	c-common.c	/^  int compstmt_count;$/;"	m	struct:
compstmt_count	c-parse.c	/^static int compstmt_count;$/;"	v	file:
comptypes	c-typeck.c	/^comptypes (type1, type2)$/;"	f
compute_ae_gen	gcse.c	/^compute_ae_gen ()$/;"	f	file:
compute_ae_kill	gcse.c	/^compute_ae_kill ()$/;"	f	file:
compute_alternative_mask	genattrtab.c	/^compute_alternative_mask (exp, code)$/;"	f	file:
compute_antinout	lcm.c	/^compute_antinout (n_blocks, s_succs, antloc, transp, antin, antout)$/;"	f	file:
compute_argument_addresses	calls.c	/^compute_argument_addresses (args, argblock, num_actuals)$/;"	f	file:
compute_argument_block_size	calls.c	/^compute_argument_block_size (reg_parm_stack_space, args_size)$/;"	f	file:
compute_available	gcse.c	/^compute_available ()$/;"	f	file:
compute_avinout	lcm.c	/^compute_avinout (n_blocks, s_preds, avloc, transp, avin, avout)$/;"	f	file:
compute_bb_for_insn	flow.c	/^compute_bb_for_insn (bb_for_insn, max)$/;"	f	file:
compute_block_backward_dependences	haifa-sched.c	/^compute_block_backward_dependences (bb)$/;"	f	file:
compute_block_forward_dependences	haifa-sched.c	/^compute_block_forward_dependences (bb)$/;"	f	file:
compute_can_copy	gcse.c	/^compute_can_copy ()$/;"	f	file:
compute_cprop_avinout	gcse.c	/^compute_cprop_avinout ()$/;"	f	file:
compute_cprop_data	gcse.c	/^compute_cprop_data ()$/;"	f	file:
compute_delayinout	lcm.c	/^compute_delayinout (n_blocks, n_exprs, s_preds, antloc,$/;"	f	file:
compute_dom_prob_ps	haifa-sched.c	/^compute_dom_prob_ps (bb)$/;"	f	file:
compute_dominators	flow.c	/^compute_dominators (dominators, post_dominators, s_preds, s_succs)$/;"	f
compute_earlierinout	lcm.c	/^compute_earlierinout (n_blocks, n_exprs, s_succs, avloc,$/;"	f	file:
compute_earlyinout	lcm.c	/^compute_earlyinout (n_blocks, n_exprs, s_preds, transp, antin,$/;"	f	file:
compute_expr_hash_table	gcse.c	/^compute_expr_hash_table ()$/;"	f	file:
compute_fartherinout	lcm.c	/^compute_fartherinout (n_blocks, n_exprs, s_succs,$/;"	f	file:
compute_firstout	lcm.c	/^compute_firstout (n_blocks, n_exprs, s_preds, avloc, earlierout, firstout)$/;"	f	file:
compute_hash_table	gcse.c	/^compute_hash_table (set_p)$/;"	f	file:
compute_immediate_dominators	flow.c	/^compute_immediate_dominators (idom, dominators)$/;"	f
compute_insns_for_mem	function.c	/^compute_insns_for_mem (insns, last_insn, ht)$/;"	f	file:
compute_isoinout	lcm.c	/^compute_isoinout (n_blocks, s_succs, antloc, latein, isoin, isoout)$/;"	f	file:
compute_kill_rd	gcse.c	/^compute_kill_rd ()$/;"	f	file:
compute_latein	lcm.c	/^compute_latein (n_blocks, n_exprs, s_succs, antloc, delayin, latein)$/;"	f	file:
compute_local_properties	gcse.c	/^compute_local_properties (transp, comp, antloc, setp)$/;"	f	file:
compute_luids	loop.c	/^compute_luids (start, end, prev_luid)$/;"	f	file:
compute_optimal	lcm.c	/^compute_optimal (n_blocks, latein, isoout, optimal)$/;"	f	file:
compute_pre_data	gcse.c	/^compute_pre_data ()$/;"	f	file:
compute_preds_succs	flow.c	/^compute_preds_succs (s_preds, s_succs, num_preds, num_succs)$/;"	f
compute_rd	gcse.c	/^compute_rd ()$/;"	f	file:
compute_redundant	lcm.c	/^compute_redundant (n_blocks, n_exprs, antloc, latein, isoout, redundant)$/;"	f	file:
compute_rev_isoinout	lcm.c	/^compute_rev_isoinout (n_blocks, s_preds, avloc, firstout,$/;"	f	file:
compute_set_hash_table	gcse.c	/^compute_set_hash_table ()$/;"	f	file:
compute_sets	gcse.c	/^compute_sets (f)$/;"	f	file:
compute_transp	gcse.c	/^compute_transp (x, indx, bmap, set_p)$/;"	f	file:
compute_transpout	gcse.c	/^compute_transpout ()$/;"	f	file:
compute_trg_info	haifa-sched.c	/^compute_trg_info (trg)$/;"	f	file:
compute_use_by_pseudos	reload1.c	/^compute_use_by_pseudos (to, from)$/;"	f
computed_jump_p	rtlanal.c	/^computed_jump_p (insn)$/;"	f
computing_insn	gcse.c	/^computing_insn (expr, insn)$/;"	f	file:
concat	c-aux-info.c	/^concat VPROTO((const char *first, ...))$/;"	f
concat	prefix.c	/^concat VPROTO((const char *first, ...))$/;"	f
concat_loc_descriptor	dwarf2out.c	/^concat_loc_descriptor (x0, x1)$/;"	f	file:
cond	loop.c	/^  unsigned int cond : 1;	\/* 1 if only conditionally movable *\/$/;"	m	struct:movable
cond	stmt.c	/^	} cond;$/;"	m	union:nesting::<anonymous>
cond_stack	stmt.c	/^struct nesting *cond_stack;$/;"	v
condexp	genattrtab.c	/^  rtx condexp;			\/* Expression TRUE for applicable insn.  *\/$/;"	m	struct:function_unit_op
condexp	genattrtab.c	/^  rtx condexp;			\/* Expression TRUE for insn needing unit.  *\/$/;"	m	struct:function_unit
condition_dominates_p	reorg.c	/^condition_dominates_p (condition, insn)$/;"	f	file:
conditional_code	stmt.c	/^	  int conditional_code;$/;"	m	struct:nesting::<anonymous>::<anonymous>
conditional_context	stmt.c	/^conditional_context ()$/;"	f
conditional_skip	cccp.c	/^conditional_skip (ip, skip, type, control_macro, op)$/;"	f	file:
conditional_skip	cpplib.c	/^conditional_skip (pfile, skip, type, control_macro)$/;"	f	file:
condjump_in_parallel_p	jump.c	/^condjump_in_parallel_p (insn)$/;"	f
condjump_label	jump.c	/^condjump_label (insn)$/;"	f
condjump_p	jump.c	/^condjump_p (insn)$/;"	f
conflict_exp	genattrtab.c	/^  rtx conflict_exp;		\/* Expression TRUE for insns incurring issue delay.  *\/$/;"	m	struct:function_unit_op
conflicts	global.c	/^static INT_TYPE *conflicts;$/;"	v	file:
connect_defs_and_decs	protoize.c	/^connect_defs_and_decs (hp)$/;"	f	file:
consec	loop.c	/^  int consec;			\/* Number of consecutive following insns $/;"	m	struct:movable
consec_sets_giv	loop.c	/^consec_sets_giv (first_benefit, p, src_reg, dest_reg,$/;"	f	file:
consec_sets_invariant_p	loop.c	/^consec_sets_invariant_p (reg, n_sets, insn)$/;"	f	file:
consider_directive_while_skipping	cpplib.c	/^consider_directive_while_skipping (pfile, stack)$/;"	f	file:
const	c-parse.c	131;"	d	file:
const	cexp.c	159;"	d	file:
const	protoize.c	36;"	d	file:
const_binop	fold-const.c	/^const_binop (code, arg1, arg2, notrunc)$/;"	f	file:
const_binop_1	fold-const.c	/^const_binop_1 (data)$/;"	f	file:
const_double_chain	varasm.c	/^static rtx const_double_chain;$/;"	v	file:
const_double_operand	recog.c	/^const_double_operand (op, mode)$/;"	f
const_hash	varasm.c	/^const_hash (exp)$/;"	f	file:
const_hash_rtx	varasm.c	/^const_hash_rtx (mode, x)$/;"	f	file:
const_hash_table	varasm.c	/^static struct constant_descriptor *const_hash_table[MAX_HASH_TABLE];$/;"	v	file:
const_int_operand	recog.c	/^const_int_operand (op, mode)$/;"	f
const_int_rtx	emit-rtl.c	/^struct rtx_def const_int_rtx[MAX_SAVED_CONST_INT * 2 + 1];$/;"	v
const_labelno	varasm.c	/^int const_labelno;$/;"	v
const_pointer_type	protoize.c	/^typedef const PTR const_pointer_type;$/;"	t	file:
const_prop_count	gcse.c	/^static int const_prop_count;$/;"	v	file:
const_ptr_type_node	c-decl.c	/^tree ptr_type_node, const_ptr_type_node;$/;"	v
const_rtx_hash_table	varasm.c	/^static struct constant_descriptor **const_rtx_hash_table;$/;"	v	file:
const_rtx_sym_hash_table	varasm.c	/^static struct pool_sym **const_rtx_sym_hash_table;$/;"	v	file:
const_string_type_node	c-decl.c	/^tree string_type_node, const_string_type_node;$/;"	v
const_tiny_rtx	emit-rtl.c	/^rtx const_tiny_rtx[3][(int) MAX_MACHINE_MODE];$/;"	v
const_true_rtx	emit-rtl.c	/^rtx const_true_rtx;$/;"	v
const_value_attribute	dwarfout.c	/^const_value_attribute (rtl)$/;"	f	file:
constant	c-typeck.c	/^  char constant;$/;"	m	struct:constructor_stack
constant	cexp.c	/^  struct constant {HOST_WIDEST_INT value; int signedp;} integer;$/;"	s	file:	union:
constant	varasm.c	/^  rtx constant;$/;"	m	struct:pool_constant
constant_boolean_node	fold-const.c	/^constant_boolean_node (value, type)$/;"	f	file:
constant_descriptor	varasm.c	/^struct constant_descriptor$/;"	s	file:
constant_expression_warning	c-common.c	/^constant_expression_warning (value)$/;"	f
constant_pool_entries_cost	cse.c	/^static int constant_pool_entries_cost;$/;"	v	file:
constant_size	dwarf2out.c	/^constant_size (value)$/;"	f	file:
constrain_operands	recog.c	/^constrain_operands (strict)$/;"	f
constraint_accepts_reg_p	reload1.c	/^constraint_accepts_reg_p (string, reg)$/;"	f	file:
constraints	genoutput.c	/^  char *constraints[MAX_MAX_OPERANDS];$/;"	m	struct:data
constraints	genoutput.c	/^static char *constraints[MAX_MAX_OPERANDS];$/;"	v	file:
constructor_asmspec	c-typeck.c	/^static char *constructor_asmspec;$/;"	v	file:
constructor_bit_index	c-typeck.c	/^static tree constructor_bit_index;$/;"	v	file:
constructor_constant	c-typeck.c	/^static int constructor_constant;$/;"	v	file:
constructor_decl	c-typeck.c	/^static tree constructor_decl;$/;"	v	file:
constructor_depth	c-typeck.c	/^static int constructor_depth;$/;"	v	file:
constructor_elements	c-typeck.c	/^static tree constructor_elements;$/;"	v	file:
constructor_erroneous	c-typeck.c	/^static int constructor_erroneous;$/;"	v	file:
constructor_fields	c-typeck.c	/^static tree constructor_fields;$/;"	v	file:
constructor_incremental	c-typeck.c	/^static int constructor_incremental;$/;"	v	file:
constructor_index	c-typeck.c	/^static tree constructor_index;$/;"	v	file:
constructor_max_index	c-typeck.c	/^static tree constructor_max_index;$/;"	v	file:
constructor_no_implicit	c-typeck.c	/^int constructor_no_implicit = 0; \/* 0 for C; 1 for some other languages.  *\/$/;"	v
constructor_pending_elts	c-typeck.c	/^static struct init_node *constructor_pending_elts;$/;"	v	file:
constructor_range_end	c-typeck.c	/^static tree constructor_range_end;$/;"	v	file:
constructor_simple	c-typeck.c	/^static int constructor_simple;$/;"	v	file:
constructor_stack	c-typeck.c	/^  struct constructor_stack *constructor_stack;$/;"	m	struct:initializer_stack
constructor_stack	c-typeck.c	/^struct constructor_stack *constructor_stack;$/;"	v
constructor_stack	c-typeck.c	/^struct constructor_stack$/;"	s	file:
constructor_subconstants_deferred	c-typeck.c	/^static int constructor_subconstants_deferred;$/;"	v	file:
constructor_top_level	c-typeck.c	/^static int constructor_top_level;$/;"	v	file:
constructor_type	c-typeck.c	/^static tree constructor_type;$/;"	v	file:
constructor_unfilled_fields	c-typeck.c	/^static tree constructor_unfilled_fields;$/;"	v	file:
constructor_unfilled_index	c-typeck.c	/^static tree constructor_unfilled_index;$/;"	v	file:
constructors	collect2.c	/^static struct head constructors;	\/* list of constructors found *\/$/;"	v	file:
contained_in_p	genattrtab.c	/^contained_in_p (inner, exp)$/;"	f	file:
containing_rgn	haifa-sched.c	/^static int *containing_rgn;$/;"	v	file:
containing_type_attribute	dwarfout.c	/^containing_type_attribute (containing_type)$/;"	f	file:
contains	function.c	/^contains (insn, vec)$/;"	f	file:
contains_placeholder_p	tree.c	/^contains_placeholder_p (exp)$/;"	f
contains_pointers_p	varasm.c	/^contains_pointers_p (type)$/;"	f	file:
contains_replace_regs	local-alloc.c	/^contains_replace_regs (x, reg_equiv_replace)$/;"	f	file:
contents	varasm.c	/^  char contents[1];$/;"	m	struct:constant_descriptor
context	stmt.c	/^  tree context;$/;"	m	struct:goto_fixup
context_display	function.c	/^static tree context_display;$/;"	v	file:
continue_label	stmt.c	/^	  rtx continue_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
contracted	protoize.c	/^  const char *contracted;$/;"	m	struct:unexpansion_struct
control_macro	cccp.c	/^  U_CHAR *control_macro;	\/* For #ifndef at start of file,$/;"	m	struct:if_stack
control_macro	cccp.c	/^  U_CHAR *control_macro;$/;"	m	struct:include_file
conversion_errno	c-lex.c	/^  int conversion_errno;$/;"	m	struct:pf_args
convert	c-convert.c	/^convert (type, expr)$/;"	f
convert_and_check	c-common.c	/^convert_and_check (type, expr)$/;"	f
convert_arguments	c-typeck.c	/^convert_arguments (typelist, values, name, fundecl)$/;"	f	file:
convert_filename	gcc.c	/^convert_filename (name, do_exe)$/;"	f	file:
convert_filename	protoize.c	/^static const char *convert_filename;$/;"	v	file:
convert_for_assignment	c-typeck.c	/^convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)$/;"	f	file:
convert_memory_address	explow.c	/^convert_memory_address (to_mode, x)$/;"	f
convert_modes	expr.c	/^convert_modes (mode, oldmode, x, unsignedp)$/;"	f
convert_move	expr.c	/^convert_move (to, from, unsignedp)$/;"	f
convert_regs	reg-stack.c	/^convert_regs ()$/;"	f	file:
convert_set_attr	genattrtab.c	/^convert_set_attr (exp, num_alt, insn_index)$/;"	f	file:
convert_set_attr_alternative	genattrtab.c	/^convert_set_attr_alternative (exp, num_alt, insn_index)$/;"	f	file:
convert_to_complex	convert.c	/^convert_to_complex (type, expr)$/;"	f
convert_to_integer	convert.c	/^convert_to_integer (type, expr)$/;"	f
convert_to_mode	expr.c	/^convert_to_mode (mode, x, unsignedp)$/;"	f
convert_to_pointer	convert.c	/^convert_to_pointer (type, expr)$/;"	f
convert_to_real	convert.c	/^convert_to_real (type, expr)$/;"	f
copied_p	gcse.c	/^  char copied_p;$/;"	m	struct:occr
copy_addr_to_reg	explow.c	/^copy_addr_to_reg (x)$/;"	f
copy_all_regs	explow.c	/^copy_all_regs (x)$/;"	f
copy_and_set_decl_abstract_origin	integrate.c	/^copy_and_set_decl_abstract_origin (node)$/;"	f	file:
copy_asm_constraints_vector	integrate.c	/^static rtvec copy_asm_constraints_vector;$/;"	v	file:
copy_asm_operands_vector	integrate.c	/^static rtvec copy_asm_operands_vector;$/;"	v	file:
copy_blkmode_from_reg	expr.c	/^copy_blkmode_from_reg(tgtblk,srcreg,type)$/;"	f
copy_boolean	genattrtab.c	/^copy_boolean (exp)$/;"	f	file:
copy_comment	cpplib.c	/^copy_comment (pfile, m)$/;"	f	file:
copy_constant	varasm.c	/^copy_constant (exp)$/;"	f	file:
copy_cost	loop.c	/^static int copy_cost;$/;"	v	file:
copy_cost	regclass.c	/^copy_cost (x, mode, class, to_p)$/;"	f	file:
copy_decl_list	integrate.c	/^copy_decl_list (list)$/;"	f	file:
copy_decl_rtls	integrate.c	/^copy_decl_rtls (block)$/;"	f	file:
copy_decl_tree	integrate.c	/^copy_decl_tree (block)$/;"	f	file:
copy_for_inline	integrate.c	/^copy_for_inline (orig)$/;"	f	file:
copy_lang_decl	c-decl.c	/^copy_lang_decl (node)$/;"	f
copy_list	tree.c	/^copy_list (list)$/;"	f
copy_loop_body	unroll.c	/^copy_loop_body (copy_start, copy_end, map, exit_label, last_iteration,$/;"	f	file:
copy_most_rtx	rtl.c	/^copy_most_rtx (orig, may_share)$/;"	f
copy_node	tree.c	/^copy_node (node)$/;"	f
copy_object	mips-tfile.c	/^copy_object __proto((void))$/;"	f
copy_prop_count	gcse.c	/^static int copy_prop_count;$/;"	v	file:
copy_reg	libgcc2.c	/^copy_reg (unsigned reg, frame_state *udata, frame_state *target_udata)$/;"	f	file:
copy_replacements	reload.c	/^copy_replacements (x, y)$/;"	f
copy_rest_of_line	cpplib.c	/^copy_rest_of_line (pfile)$/;"	f	file:
copy_rtx	rtl.c	/^copy_rtx (orig)$/;"	f
copy_rtx_and_substitute	integrate.c	/^copy_rtx_and_substitute (orig, map)$/;"	f
copy_rtx_if_shared	emit-rtl.c	/^copy_rtx_if_shared (orig)$/;"	f
copy_rtx_unchanging	genattrtab.c	/^copy_rtx_unchanging (orig)$/;"	f	file:
copy_src_to_dest	regmove.c	/^copy_src_to_dest (insn, src, dest, loop_depth, old_max_uid)$/;"	f	file:
copy_to_mode_reg	explow.c	/^copy_to_mode_reg (mode, x)$/;"	f
copy_to_reg	explow.c	/^copy_to_reg (x)$/;"	f
copy_to_suggested_reg	explow.c	/^copy_to_suggested_reg (x, target, mode)$/;"	f
copying_arguments	alias.c	/^static int copying_arguments;$/;"	v	file:
cos_optab	optabs.c	/^optab cos_optab;$/;"	v
cost	cse.c	/^  int cost;$/;"	m	struct:table_elt
cost	expmed.c	/^  short cost;$/;"	m	struct:algorithm
cost	regclass.c	/^  int cost[N_REG_CLASSES];$/;"	m	struct:costs
cost_table	stmt.c	/^static short *cost_table;$/;"	v	file:
costs	regclass.c	/^static struct costs *costs;$/;"	v	file:
costs	regclass.c	/^struct costs$/;"	s	file:
count	frame.c	/^  size_t count;$/;"	m	struct:fde_vector
count	libgcc2.c	/^  unsigned long count;$/;"	m	struct:bb_edge
count	unroll.c	/^struct _factor { int factor, count; } factors[NUM_FACTORS]$/;"	m	struct:_factor
count_alternatives	genattrtab.c	/^count_alternatives (exp)$/;"	f	file:
count_basic_blocks	final.c	/^static int count_basic_blocks;$/;"	v	file:
count_basic_blocks	flow.c	/^count_basic_blocks (f)$/;"	f	file:
count_cond	fold-const.c	/^count_cond (expr, lim)$/;"	f	file:
count_error	toplev.c	/^count_error (warningp)$/;"	f
count_fdes	frame.c	/^count_fdes (fde *this_fde)$/;"	f	file:
count_instrumented_arcs	profile.c	/^int count_instrumented_arcs;$/;"	v
count_loop_regs_set	loop.c	/^count_loop_regs_set (from, to, may_not_move, single_usage, count_ptr, nregs)$/;"	f	file:
count_nonfixed_reads	loop.c	/^count_nonfixed_reads (x)$/;"	f	file:
count_occurrences	reload1.c	/^count_occurrences (x, find)$/;"	f
count_one_set	loop.c	/^count_one_set (insn, x, may_not_move, last_set)$/;"	f	file:
count_possible_groups	reload1.c	/^count_possible_groups (chain, class)$/;"	f	file:
count_pseudo	reload1.c	/^count_pseudo (n_uses, reg)$/;"	f	file:
count_reg_references	flow.c	/^count_reg_references (x)$/;"	f	file:
count_reg_sets	flow.c	/^count_reg_sets  (x)$/;"	f	file:
count_reg_sets_1	flow.c	/^count_reg_sets_1 (x)$/;"	f	file:
count_reg_usage	cse.c	/^count_reg_usage (x, counts, dest, incr)$/;"	f	file:
count_sub_rtxs	genattrtab.c	/^count_sub_rtxs (x, max)$/;"	f	file:
count_valid	gcov.c	/^  unsigned int count_valid : 1;$/;"	m	struct:adj_list
count_valid	gcov.c	/^  unsigned int count_valid : 1;$/;"	m	struct:bb_info
count_valid	profile.c	/^  unsigned int count_valid : 1;$/;"	m	struct:adj_list
count_valid	profile.c	/^  unsigned int count_valid : 1;$/;"	m	struct:bb_info
counts	libgcc2.c	/^  long *counts;$/;"	m	struct:bb
cpath	collect2.c	/^static struct path_prefix cpath, path;$/;"	v	file:
cplus_suffix	protoize.c	/^static const char * const cplus_suffix = CPLUS_FILE_SUFFIX;$/;"	v	file:
cplusplus	cccp.c	/^  int cplusplus;		\/* Only look here if we're compiling C++.  *\/$/;"	m	struct:default_include
cplusplus	cccp.c	/^static int cplusplus;$/;"	v	file:
cplusplus	cppinit.c	/^  int cplusplus;		\/* Only look here if we're compiling C++.  *\/$/;"	m	struct:default_include
cplusplus_comments	cccp.c	/^static int cplusplus_comments;$/;"	v	file:
cplusplus_flag	protoize.c	/^static int cplusplus_flag = 0;		\/* Rename converted files to *.C.  *\/$/;"	v	file:
cpp_assert	cpplib.c	/^cpp_assert (pfile, str)$/;"	f
cpp_buf_line_and_col	cpplib.c	/^cpp_buf_line_and_col (pbuf, linep, colp)$/;"	f
cpp_cleanup	cppinit.c	/^cpp_cleanup (pfile)$/;"	f
cpp_define	cpplib.c	/^cpp_define (pfile, str)$/;"	f
cpp_error	cpplib.c	/^cpp_error VPROTO ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_error_from_errno	cpplib.c	/^cpp_error_from_errno (pfile, name)$/;"	f
cpp_error_with_line	cpplib.c	/^cpp_error_with_line VPROTO ((cpp_reader * pfile, int line, int column,$/;"	f
cpp_expand_to_buffer	cpplib.c	/^cpp_expand_to_buffer (pfile, buf, length)$/;"	f
cpp_fatal	cpperror.c	/^cpp_fatal VPROTO ((cpp_reader *pfile, const char *msgid, ...))$/;"	f
cpp_file_buffer	cpplib.c	/^cpp_file_buffer (pfile)$/;"	f
cpp_file_line_for_message	cpperror.c	/^cpp_file_line_for_message (pfile, filename, line, column)$/;"	f
cpp_finish	cppinit.c	/^cpp_finish (pfile)$/;"	f
cpp_get_non_space_token	cpplib.c	/^cpp_get_non_space_token (pfile)$/;"	f
cpp_get_token	cpplib.c	/^cpp_get_token (pfile)$/;"	f
cpp_grow_buffer	cpplib.c	/^cpp_grow_buffer (pfile, n)$/;"	f
cpp_handle_option	cppinit.c	/^cpp_handle_option (pfile, argc, argv)$/;"	f
cpp_handle_options	cppinit.c	/^cpp_handle_options (pfile, argc, argv)$/;"	f
cpp_install	cpphash.c	/^cpp_install (pfile, name, len, type, value, hash)$/;"	f
cpp_lex	cppexp.c	/^cpp_lex (pfile, skip_evaluation)$/;"	f	file:
cpp_lookup	cpphash.c	/^cpp_lookup (pfile, name, len, hash)$/;"	f
cpp_message	cpperror.c	/^cpp_message VPROTO ((cpp_reader *pfile, int is_error, const char *msgid, ...))$/;"	f
cpp_message_from_errno	cpplib.c	/^cpp_message_from_errno (pfile, is_error, name)$/;"	f
cpp_notice	cpperror.c	/^cpp_notice VPROTO ((const char *msgid, ...))$/;"	f
cpp_options_init	cppinit.c	/^cpp_options_init (opts)$/;"	f
cpp_parse_escape	cppexp.c	/^cpp_parse_escape (pfile, string_ptr, result_mask)$/;"	f
cpp_parse_expr	cppexp.c	/^cpp_parse_expr (pfile)$/;"	f
cpp_pedwarn	cpplib.c	/^cpp_pedwarn VPROTO ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_pedwarn_with_file_and_line	cpplib.c	/^cpp_pedwarn_with_file_and_line VPROTO ((cpp_reader *pfile, char *file, int line,$/;"	f
cpp_pedwarn_with_line	cpplib.c	/^cpp_pedwarn_with_line VPROTO ((cpp_reader * pfile, int line, int column,$/;"	f
cpp_perror_with_name	cpplib.c	/^cpp_perror_with_name (pfile, name)$/;"	f
cpp_pfatal_with_name	cpperror.c	/^cpp_pfatal_with_name (pfile, name)$/;"	f
cpp_pop_buffer	cpplib.c	/^cpp_pop_buffer (pfile)$/;"	f
cpp_predefines	gcc.c	/^static char *cpp_predefines = CPP_PREDEFINES;$/;"	v	file:
cpp_print_containing_files	cpperror.c	/^cpp_print_containing_files (pfile)$/;"	f
cpp_print_file_and_line	cpplib.c	/^cpp_print_file_and_line (pfile)$/;"	f
cpp_push_buffer	cpplib.c	/^cpp_push_buffer (pfile, buffer, length)$/;"	f
cpp_read_check_assertion	cpplib.c	/^cpp_read_check_assertion (pfile)$/;"	f
cpp_reader_init	cppinit.c	/^cpp_reader_init (pfile)$/;"	f
cpp_scan_buffer	cpplib.c	/^cpp_scan_buffer (pfile)$/;"	f
cpp_skip_hspace	cpplib.c	/^cpp_skip_hspace (pfile)$/;"	f
cpp_spec	gcc.c	/^static char *cpp_spec = CPP_SPEC;$/;"	v	file:
cpp_start_read	cppinit.c	/^cpp_start_read (pfile, fname)$/;"	f
cpp_token	c-common.c	/^static enum cpp_token cpp_token;$/;"	v	file:
cpp_unassert	cpplib.c	/^cpp_unassert (pfile, str)$/;"	f
cpp_undef	cpplib.c	/^cpp_undef (pfile, macro)$/;"	f
cpp_warning	cpplib.c	/^cpp_warning VPROTO ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_warning_with_line	cpplib.c	/^cpp_warning_with_line VPROTO ((cpp_reader * pfile, int line, int column,$/;"	f
cprop	enquire.c	/^int cprop() {$/;"	f
cprop	gcse.c	/^cprop (alter_jumps)$/;"	f	file:
cprop_absaltered	gcse.c	/^static sbitmap *cprop_absaltered;$/;"	v	file:
cprop_avin	gcse.c	/^static sbitmap *cprop_avin;$/;"	v	file:
cprop_avout	gcse.c	/^static sbitmap *cprop_avout;$/;"	v	file:
cprop_insn	gcse.c	/^cprop_insn (insn, alter_jumps)$/;"	f	file:
cprop_pavloc	gcse.c	/^static sbitmap *cprop_pavloc;$/;"	v	file:
cpval	cccp.c	/^  char *cpval;$/;"	m	union:hashval
create_basic_block	flow.c	/^create_basic_block (index, head, end, bb_note)$/;"	f	file:
create_definition	cccp.c	/^create_definition (buf, limit, op)$/;"	f	file:
create_definition	cpphash.c	/^create_definition (buf, limit, pfile, predefinition)$/;"	f
create_program_flow_graph	gcov.c	/^create_program_flow_graph (bptr)$/;"	f	file:
create_reg_dead_note	haifa-sched.c	/^create_reg_dead_note (reg, insn)$/;"	f	file:
create_reg_dead_note	sched.c	/^create_reg_dead_note (reg, insn)$/;"	f	file:
create_rethrow_ref	except.c	/^create_rethrow_ref (region_num)$/;"	f	file:
croak	enquire.c	/^Procedure croak(place) int place; {$/;"	f
cross_compile	gcc.c	/^static char *cross_compile = "0";$/;"	v	file:
cross_compile	gcc.c	/^static char *cross_compile = "1";$/;"	v	file:
cross_jump_death_matters	jump.c	/^static int cross_jump_death_matters = 0;$/;"	v	file:
cse2_dump	toplev.c	/^int cse2_dump = 0;$/;"	v
cse2_time	toplev.c	/^int cse2_time;$/;"	v
cse_around_loop	cse.c	/^cse_around_loop (loop_start)$/;"	f	file:
cse_basic_block	cse.c	/^cse_basic_block (from, to, next_branch, around_loop)$/;"	f	file:
cse_basic_block_data	cse.c	/^struct cse_basic_block_data {$/;"	s	file:
cse_basic_block_end	cse.c	/^static int cse_basic_block_end;$/;"	v	file:
cse_basic_block_start	cse.c	/^static int cse_basic_block_start;$/;"	v	file:
cse_check_loop_start	cse.c	/^cse_check_loop_start (x, set)$/;"	f	file:
cse_check_loop_start_value	cse.c	/^static rtx cse_check_loop_start_value;$/;"	v	file:
cse_dump	toplev.c	/^int cse_dump = 0;$/;"	v
cse_end_of_basic_block	cse.c	/^cse_end_of_basic_block (insn, data, follow_jumps, after_loop, skip_blocks)$/;"	f
cse_gen_binary	cse.c	/^cse_gen_binary (code, mode, op0, op1)$/;"	f	file:
cse_insn	cse.c	/^cse_insn (insn, libcall_insn)$/;"	f	file:
cse_jumps_altered	cse.c	/^static int cse_jumps_altered;$/;"	v	file:
cse_main	cse.c	/^cse_main (f, nregs, after_loop, file)$/;"	f
cse_not_expected	expr.c	/^int cse_not_expected;$/;"	v
cse_process_notes	cse.c	/^cse_process_notes (x, object)$/;"	f	file:
cse_reg_info	cse.c	/^struct cse_reg_info {$/;"	s	file:
cse_reg_info_free_list	cse.c	/^static struct cse_reg_info *cse_reg_info_free_list;$/;"	v	file:
cse_reg_info_tree	cse.c	/^static splay_tree cse_reg_info_tree;$/;"	v	file:
cse_rtx_varies_p	cse.c	/^cse_rtx_varies_p (x)$/;"	f	file:
cse_set_around_loop	cse.c	/^cse_set_around_loop (x, insn, loop_start)$/;"	f	file:
cse_time	toplev.c	/^int cse_time;$/;"	v
cuid_insn	gcse.c	/^static rtx *cuid_insn;$/;"	v	file:
cur_file_ptr	mips-tfile.c	/^static efdr_t  *cur_file_ptr	= (efdr_t *) 0;	\/* current file desc. header *\/$/;"	v	file:
cur_insn_uid	emit-rtl.c	/^static int cur_insn_uid = 1;$/;"	v	file:
cur_line_alloc	mips-tfile.c	/^static unsigned	cur_line_alloc	= 0;		\/* # bytes total in buffer *\/$/;"	v	file:
cur_line_nbytes	mips-tfile.c	/^static unsigned	cur_line_nbytes	= 0;		\/* # bytes for current line *\/$/;"	v	file:
cur_line_ptr	mips-tfile.c	/^static char    *cur_line_ptr	= (char *) 0;	\/* ptr within current line *\/$/;"	v	file:
cur_line_start	mips-tfile.c	/^static char    *cur_line_start	= (char *) 0;	\/* current line read in *\/$/;"	v	file:
cur_line_start	mips-tfile.c	/^static int	 cur_line_start;$/;"	v	file:
cur_oproc_begin	mips-tfile.c	/^static SYMR    *cur_oproc_begin	= (SYMR *) 0;	\/* original proc. sym begin info *\/$/;"	v	file:
cur_oproc_end	mips-tfile.c	/^static SYMR    *cur_oproc_end	= (SYMR *) 0;	\/* original proc. sym end info *\/$/;"	v	file:
cur_oproc_ptr	mips-tfile.c	/^static PDR     *cur_oproc_ptr	= (PDR *) 0;	\/* current original procedure*\/$/;"	v	file:
cur_page	mips-tfile.c	/^  page_t	*cur_page;	\/* current page being allocated from *\/$/;"	m	struct:alloc_info
cur_proc_ptr	mips-tfile.c	/^static PDR     *cur_proc_ptr	= (PDR *) 0;	\/* current procedure header *\/$/;"	v	file:
cur_scope	mips-tdump.c	/^scope_t	*cur_scope	= 0;	\/* list of active scopes *\/$/;"	v
cur_scope	mips-tfile.c	/^  scope_t	*cur_scope;	\/* current nested scopes *\/$/;"	m	struct:efdr
cur_symbol_table_size	fix-header.c	/^int cur_symbol_table_size;$/;"	v
cur_tag_head	mips-tfile.c	/^static thead_t *cur_tag_head	= (thead_t *) 0;\/* current tag head *\/$/;"	v	file:
current	tree.c	/^  struct obstack *current;$/;"	m	struct:obstack_stack
current_alternative_string	genattrtab.c	/^static char *current_alternative_string;$/;"	v	file:
current_aux_info_lineno	protoize.c	/^static int current_aux_info_lineno;$/;"	v	file:
current_binding_level	c-decl.c	/^static struct binding_level *current_binding_level;$/;"	v	file:
current_block_num	haifa-sched.c	/^static int current_block_num;$/;"	v	file:
current_blocks	haifa-sched.c	/^static int current_blocks;$/;"	v	file:
current_chain	stupid.c	/^static struct insn_chain *current_chain;$/;"	v	file:
current_declspecs	c-parse.c	/^static tree current_declspecs = NULL_TREE;$/;"	v	file:
current_dienum	dwarfout.c	/^static unsigned current_dienum;$/;"	v	file:
current_extern_C	scan-decls.c	/^int current_extern_C = 0;$/;"	v
current_extern_inline	c-decl.c	/^static int current_extern_inline;$/;"	v	file:
current_file	dbxout.c	/^static struct dbx_file *current_file;$/;"	v	file:
current_file	sdbout.c	/^static struct sdb_file *current_file;$/;"	v	file:
current_func_eh_entry	except.c	/^static int current_func_eh_entry = 0;$/;"	v	file:
current_funcdef_fde	dwarf2out.c	/^static unsigned current_funcdef_fde;$/;"	v	file:
current_funcdef_number	dwarf2out.c	/^static unsigned current_funcdef_number = 0;$/;"	v	file:
current_funcdef_number	dwarfout.c	/^static unsigned current_funcdef_number = 1;$/;"	v	file:
current_function_arg_offset_rtx	function.c	/^rtx current_function_arg_offset_rtx;$/;"	v
current_function_args_info	function.c	/^CUMULATIVE_ARGS current_function_args_info;$/;"	v
current_function_args_size	function.c	/^int current_function_args_size;$/;"	v
current_function_calls_alloca	function.c	/^int current_function_calls_alloca;$/;"	v
current_function_calls_longjmp	function.c	/^int current_function_calls_longjmp;$/;"	v
current_function_calls_setjmp	function.c	/^int current_function_calls_setjmp;$/;"	v
current_function_cannot_inline	function.c	/^char *current_function_cannot_inline;$/;"	v
current_function_check_memory_usage	function.c	/^int current_function_check_memory_usage;$/;"	v
current_function_contains_functions	function.c	/^int current_function_contains_functions;$/;"	v
current_function_decl	c-decl.c	/^tree current_function_decl;$/;"	v
current_function_ehc	except.c	/^rtx current_function_ehc;$/;"	v
current_function_epilogue_delay_list	function.c	/^rtx current_function_epilogue_delay_list;$/;"	v
current_function_has_computed_jump	function.c	/^int current_function_has_computed_jump;$/;"	v
current_function_has_inlines	dwarf2out.c	/^static int current_function_has_inlines;$/;"	v	file:
current_function_has_nonlocal_goto	function.c	/^int current_function_has_nonlocal_goto;$/;"	v
current_function_has_nonlocal_label	function.c	/^int current_function_has_nonlocal_label;$/;"	v
current_function_instrument_entry_exit	function.c	/^int current_function_instrument_entry_exit;$/;"	v
current_function_internal_arg_pointer	function.c	/^rtx current_function_internal_arg_pointer;$/;"	v
current_function_is_leaf	function.c	/^int current_function_is_leaf;$/;"	v
current_function_is_thunk	function.c	/^int current_function_is_thunk;$/;"	v
current_function_name	function.c	/^char *current_function_name;$/;"	v
current_function_needs_context	function.c	/^int current_function_needs_context;$/;"	v
current_function_outgoing_args_size	function.c	/^int current_function_outgoing_args_size;$/;"	v
current_function_parm_tags	c-decl.c	/^static tree current_function_parm_tags;$/;"	v	file:
current_function_parms	c-decl.c	/^static tree current_function_parms;$/;"	v	file:
current_function_pops_args	function.c	/^int current_function_pops_args;$/;"	v
current_function_pretend_args_size	function.c	/^int current_function_pretend_args_size;$/;"	v
current_function_prototype_file	c-decl.c	/^static char *current_function_prototype_file;$/;"	v	file:
current_function_prototype_line	c-decl.c	/^static int current_function_prototype_line;$/;"	v	file:
current_function_return_rtx	function.c	/^rtx current_function_return_rtx;$/;"	v
current_function_returns_null	c-decl.c	/^int current_function_returns_null;$/;"	v
current_function_returns_pcc_struct	function.c	/^int current_function_returns_pcc_struct;$/;"	v
current_function_returns_pointer	function.c	/^int current_function_returns_pointer;$/;"	v
current_function_returns_struct	function.c	/^int current_function_returns_struct;$/;"	v
current_function_returns_value	c-decl.c	/^int current_function_returns_value;$/;"	v
current_function_sp_is_unchanging	function.c	/^int current_function_sp_is_unchanging;$/;"	v
current_function_stdarg	function.c	/^int current_function_stdarg;$/;"	v
current_function_uses_const_pool	function.c	/^int current_function_uses_const_pool;$/;"	v
current_function_uses_only_leaf_regs	function.c	/^int current_function_uses_only_leaf_regs;$/;"	v
current_function_uses_pic_offset_table	function.c	/^int current_function_uses_pic_offset_table;$/;"	v
current_function_varargs	function.c	/^int current_function_varargs;$/;"	v
current_live_regs	resource.c	/^static HARD_REG_SET current_live_regs;$/;"	v	file:
current_nr_blocks	haifa-sched.c	/^static int current_nr_blocks;$/;"	v	file:
current_obstack	tree.c	/^struct obstack *current_obstack;$/;"	v
current_sym_addr	dbxout.c	/^static rtx current_sym_addr;$/;"	v	file:
current_sym_code	dbxout.c	/^static STAB_CODE_TYPE current_sym_code;$/;"	v	file:
current_sym_nchars	dbxout.c	/^static int current_sym_nchars;$/;"	v	file:
current_sym_value	dbxout.c	/^static int current_sym_value;$/;"	v	file:
current_value	genattrtab.c	/^  rtx current_value;		\/* Position in the list for the TRUE value.  *\/$/;"	m	struct:dimension
cwd	dbxout.c	/^static char *cwd;$/;"	v	file:
cwd_buffer	protoize.c	/^static char *cwd_buffer;$/;"	v	file:
cxx_aware	cccp.c	/^  int cxx_aware;		\/* Includes in this directory don't need to$/;"	m	struct:default_include
cxx_aware	cppinit.c	/^  int cxx_aware;		\/* Includes in this directory don't need to$/;"	m	struct:default_include
d	floatlib.c	/^    double d;$/;"	m	union:double_long
d	tree.c	/^  REAL_VALUE_TYPE d;$/;"	m	struct:brfic_args
d1	fold-const.c	/^  REAL_VALUE_TYPE d1, d2;$/;"	m	struct:cb_args
d1	fp-test.c	/^volatile double d1 = 1.0, d2 = 1.0, d3 = 1.0;$/;"	v
d2	fold-const.c	/^  REAL_VALUE_TYPE d1, d2;$/;"	m	struct:cb_args
d2	fp-test.c	/^volatile double d1 = 1.0, d2 = 1.0, d3 = 1.0;$/;"	v
d3	fp-test.c	/^volatile double d1 = 1.0, d2 = 1.0, d3 = 1.0;$/;"	v
d_kind	tree.c	/^  d_kind,$/;"	e	file:
da	toplev.c	/^} *da,$/;"	v	file:
da_file	gcov.c	/^static FILE *da_file;$/;"	v	file:
da_file	profile.c	/^static FILE *da_file;$/;"	v	file:
da_file_name	gcov.c	/^static char *da_file_name;$/;"	v	file:
da_file_name	profile.c	/^static char *da_file_name;$/;"	v	file:
data	collect2.c	/^char * data;		\/* pointer to data segment *\/$/;"	v
data	genoutput.c	/^struct data$/;"	s	file:
data	regclass.c	/^  reg_info data[1];		\/* beginning of the reg_info data *\/$/;"	m	struct:reg_info_data
data	stmt.c	/^    } data;$/;"	m	struct:nesting
data_align	frame.c	/^  int data_align;$/;"	m	struct:cie_info
data_member_location_attribute	dwarfout.c	/^data_member_location_attribute (t)$/;"	f	file:
data_section	varasm.c	/^data_section ()$/;"	f
data_type	c-aux-info.c	/^static const char *data_type;$/;"	v	file:
datum	mips-tfile.c	/^  union  page   *datum;		\/* start of page *\/$/;"	m	struct:vlinks
dbr_sched_dump	toplev.c	/^int dbr_sched_dump = 0;$/;"	v
dbr_sched_time	toplev.c	/^int dbr_sched_time;$/;"	v
dbr_schedule	reorg.c	/^dbr_schedule (first, file)$/;"	f
dbr_sequence_length	final.c	/^dbr_sequence_length ()$/;"	f
dbx_file	dbxout.c	/^struct dbx_file$/;"	s	file:
dbxout_args	dbxout.c	/^dbxout_args (args)$/;"	f
dbxout_begin_function	dbxout.c	/^dbxout_begin_function (decl)$/;"	f
dbxout_block	dbxout.c	/^dbxout_block (block, depth, args)$/;"	f	file:
dbxout_continue	dbxout.c	/^dbxout_continue ()$/;"	f	file:
dbxout_finish	dbxout.c	/^dbxout_finish (file, filename)$/;"	f
dbxout_finish_symbol	dbxout.c	/^dbxout_finish_symbol (sym)$/;"	f	file:
dbxout_function	dbxout.c	/^dbxout_function (decl)$/;"	f
dbxout_function_end	dbxout.c	/^dbxout_function_end ()$/;"	f	file:
dbxout_init	dbxout.c	/^dbxout_init (asm_file, input_file_name, syms)$/;"	f
dbxout_parms	dbxout.c	/^dbxout_parms (parms)$/;"	f
dbxout_prepare_symbol	dbxout.c	/^dbxout_prepare_symbol (decl)$/;"	f	file:
dbxout_range_type	dbxout.c	/^dbxout_range_type (type)$/;"	f	file:
dbxout_really_begin_function	dbxout.c	/^dbxout_really_begin_function (decl)$/;"	f	file:
dbxout_reg_parms	dbxout.c	/^dbxout_reg_parms (parms)$/;"	f
dbxout_resume_previous_source_file	dbxout.c	/^dbxout_resume_previous_source_file ()$/;"	f
dbxout_source_file	dbxout.c	/^dbxout_source_file (file, filename)$/;"	f
dbxout_source_line	dbxout.c	/^dbxout_source_line (file, filename, lineno)$/;"	f
dbxout_start_new_source_file	dbxout.c	/^dbxout_start_new_source_file (filename)$/;"	f
dbxout_symbol	dbxout.c	/^dbxout_symbol (decl, local)$/;"	f
dbxout_symbol_location	dbxout.c	/^dbxout_symbol_location (decl, type, suffix, home)$/;"	f	file:
dbxout_symbol_name	dbxout.c	/^dbxout_symbol_name (decl, suffix, letter)$/;"	f	file:
dbxout_syms	dbxout.c	/^dbxout_syms (syms)$/;"	f
dbxout_type	dbxout.c	/^dbxout_type (type, full, show_arg_types)$/;"	f	file:
dbxout_type_fields	dbxout.c	/^dbxout_type_fields (type)$/;"	f	file:
dbxout_type_index	dbxout.c	/^dbxout_type_index (type)$/;"	f	file:
dbxout_type_method_1	dbxout.c	/^dbxout_type_method_1 (decl, debug_name)$/;"	f	file:
dbxout_type_methods	dbxout.c	/^dbxout_type_methods (type)$/;"	f	file:
dbxout_type_name	dbxout.c	/^dbxout_type_name (type)$/;"	f	file:
dbxout_typedefs	dbxout.c	/^dbxout_typedefs (syms)$/;"	f	file:
dbxout_types	dbxout.c	/^dbxout_types (types)$/;"	f
dconst0	emit-rtl.c	/^REAL_VALUE_TYPE dconst0;$/;"	v
dconst1	emit-rtl.c	/^REAL_VALUE_TYPE dconst1;$/;"	v
dconst2	emit-rtl.c	/^REAL_VALUE_TYPE dconst2;$/;"	v
dconstm1	emit-rtl.c	/^REAL_VALUE_TYPE dconstm1;$/;"	v
ddip	protoize.c	399;"	d	file:
ddiscard	libgcc1-test.c	/^ddiscard (x)$/;"	f
dead_notes	haifa-sched.c	/^static rtx dead_notes;$/;"	v	file:
dead_notes	sched.c	/^static rtx dead_notes;$/;"	v	file:
dead_or_set_p	rtlanal.c	/^dead_or_set_p (insn, x)$/;"	f
dead_or_set_regno_p	rtlanal.c	/^dead_or_set_regno_p (insn, test_regno)$/;"	f
deallocate_reload_reg	reload1.c	/^deallocate_reload_reg (r)$/;"	f
debug	collect2.c	/^int debug;				\/* true if -debug *\/$/;"	v
debug	mips-tfile.c	/^static int	 debug;$/;"	v	file:
debug	mips-tfile.c	/^static int	debug		= 0; 		\/* trace functions *\/$/;"	v	file:
debug_args	toplev.c	/^debug_args[] =$/;"	v	file:
debug_bitmap	bitmap.c	/^debug_bitmap (head)$/;"	f
debug_candidate	haifa-sched.c	/^debug_candidate (i)$/;"	f
debug_candidates	haifa-sched.c	/^debug_candidates (trg)$/;"	f
debug_define	toplev.c	/^debug_define (lineno, buffer)$/;"	f
debug_dependencies	haifa-sched.c	/^debug_dependencies ()$/;"	f
debug_dwarf	dwarf2out.c	/^debug_dwarf ()$/;"	f
debug_dwarf_die	dwarf2out.c	/^debug_dwarf_die (die)$/;"	f
debug_end_source_file	toplev.c	/^debug_end_source_file (lineno)$/;"	f
debug_info_level	toplev.c	/^enum debug_info_level debug_info_level = DINFO_LEVEL_NONE;$/;"	v
debug_info_section_label	dwarf2out.c	/^static char debug_info_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
debug_insn	final.c	/^static rtx debug_insn = 0;$/;"	v	file:
debug_line_section_label	dwarf2out.c	/^static char debug_line_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
debug_no_type_hash	tree.c	/^int debug_no_type_hash = 0;$/;"	v
debug_obstack	tree.c	/^debug_obstack (object)$/;"	f
debug_output	cccp.c	/^static int debug_output = 0;$/;"	v	file:
debug_ready_list	haifa-sched.c	/^debug_ready_list (ready, n_ready)$/;"	f	file:
debug_real	real.c	/^debug_real (r)$/;"	f
debug_reg_vector	haifa-sched.c	/^debug_reg_vector (s)$/;"	f
debug_regions	haifa-sched.c	/^debug_regions ()$/;"	f
debug_reload	reload.c	/^debug_reload ()$/;"	f
debug_reload_to_stream	reload.c	/^debug_reload_to_stream (f)$/;"	f
debug_rtx	print-rtl.c	/^debug_rtx (x)$/;"	f
debug_rtx_count	print-rtl.c	/^int debug_rtx_count = 0;	\/* 0 is treated as equivalent to 1 *\/$/;"	v
debug_rtx_find	print-rtl.c	/^debug_rtx_find (x, uid)$/;"	f
debug_rtx_list	print-rtl.c	/^debug_rtx_list (x, n)$/;"	f
debug_start_source_file	toplev.c	/^debug_start_source_file (filename)$/;"	f
debug_stderr	gcse.c	/^static FILE *debug_stderr;$/;"	v	file:
debug_temp_inits	c-decl.c	/^int debug_temp_inits = 1;$/;"	v
debug_tree	print-tree.c	/^debug_tree (node)$/;"	f
debug_type	toplev.c	/^  enum debug_info_type debug_type;$/;"	m	struct:
debug_undef	toplev.c	/^debug_undef (lineno, buffer)$/;"	f
decision	genrecog.c	/^struct decision$/;"	s	file:
decision_head	genrecog.c	/^struct decision_head { struct decision *first, *last; };$/;"	s	file:
decl	c-typeck.c	/^  tree decl;$/;"	m	struct:initializer_stack
decl_attributes	c-common.c	/^decl_attributes (node, attributes, prefix_attributes)$/;"	f
decl_class_context	dwarf2out.c	/^decl_class_context (decl)$/;"	f	file:
decl_class_context	dwarfout.c	/^decl_class_context (decl)$/;"	f	file:
decl_constant_value	c-typeck.c	/^decl_constant_value (decl)$/;"	f	file:
decl_context	c-decl.c	/^enum decl_context$/;"	g	file:
decl_die_table	dwarf2out.c	/^static dw_die_ref *decl_die_table;$/;"	v	file:
decl_die_table_allocated	dwarf2out.c	/^static unsigned decl_die_table_allocated;$/;"	v	file:
decl_die_table_in_use	dwarf2out.c	/^static unsigned decl_die_table_in_use;$/;"	v	file:
decl_function_context	tree.c	/^decl_function_context (decl)$/;"	f
decl_name	toplev.c	/^decl_name (decl, verbosity)$/;"	f	file:
decl_printable_name	toplev.c	/^char *(*decl_printable_name)		PROTO ((tree, int));$/;"	v
decl_req	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	m	struct:
decl_scope_depth	dwarf2out.c	/^static int decl_scope_depth;$/;"	v	file:
decl_scope_node	dwarf2out.c	/^decl_scope_node;$/;"	t	file:
decl_scope_struct	dwarf2out.c	/^typedef struct decl_scope_struct$/;"	s	file:
decl_scope_table	dwarf2out.c	/^static decl_scope_node *decl_scope_table;$/;"	v	file:
decl_scope_table_allocated	dwarf2out.c	/^static int decl_scope_table_allocated;$/;"	v	file:
decl_tree_cons	tree.c	/^decl_tree_cons (purpose, value, chain)$/;"	f
decl_type_context	tree.c	/^decl_type_context (decl)$/;"	f
decl_ultimate_origin	dwarf2out.c	/^decl_ultimate_origin (decl)$/;"	f	file:
decl_ultimate_origin	dwarfout.c	/^decl_ultimate_origin (decl)$/;"	f	file:
declare_function_name	c-common.c	/^declare_function_name ()$/;"	f
declare_hidden_char_array	c-common.c	/^declare_hidden_char_array (name, value)$/;"	f	file:
declare_nonlocal_label	stmt.c	/^declare_nonlocal_label (label)$/;"	f
declare_parm_level	c-decl.c	/^declare_parm_level (definition_flag)$/;"	f
declare_source_confusing	protoize.c	/^declare_source_confusing (clean_p)$/;"	f	file:
declare_weak	varasm.c	/^declare_weak (decl)$/;"	f
decls_for_scope	dwarf2out.c	/^decls_for_scope (stmt, context_die, depth)$/;"	f	file:
declspec_stack	c-parse.c	/^static tree declspec_stack;$/;"	v	file:
decode	fold-const.c	/^decode (words, low, hi)$/;"	f	file:
decode_addr_const	varasm.c	/^decode_addr_const (exp, value)$/;"	f	file:
decode_asm_operands	recog.c	/^decode_asm_operands (body, operands, operand_locs, constraints, modes)$/;"	f
decode_field_reference	fold-const.c	/^decode_field_reference (exp, pbitsize, pbitpos, pmode, punsignedp,$/;"	f	file:
decode_reg_name	varasm.c	/^decode_reg_name (asmspec)$/;"	f
decode_rtx_const	varasm.c	/^decode_rtx_const (mode, x, value)$/;"	f	file:
decode_sleb128	frame.c	/^decode_sleb128 (unsigned char *buf, int *r)$/;"	f	file:
decode_uleb128	frame.c	/^decode_uleb128 (unsigned char *buf, unsigned *r)$/;"	f	file:
decompose	reload.c	/^decompose (x)$/;"	f	file:
decomposition	reload.c	/^struct decomposition$/;"	s	file:
dectoe	real.c	/^dectoe (d, e)$/;"	f	file:
def	genattrtab.c	/^  rtx def;			\/* DEFINE_DELAY expression.  *\/$/;"	m	struct:delay_desc
def	genattrtab.c	/^  rtx def;			\/* The DEFINE_...  *\/$/;"	m	struct:insn_def
def_dec_info	protoize.c	/^typedef struct def_dec_info_struct def_dec_info;$/;"	t	file:
def_dec_info_struct	protoize.c	/^struct def_dec_info_struct {$/;"	s	file:
def_reaches_here_p	gcse.c	/^def_reaches_here_p (insn, def_insn)$/;"	f	file:
default_arg	gcc.c	/^default_arg (p, len)$/;"	f	file:
default_compilers	gcc.c	/^static struct compiler default_compilers[] =$/;"	v	file:
default_conversion	c-typeck.c	/^default_conversion (exp)$/;"	f
default_cost	genattrtab.c	/^  rtx default_cost;		\/* Conflict cost, if constant.  *\/$/;"	m	struct:function_unit
default_function_type	c-decl.c	/^tree default_function_type;$/;"	v
default_include	cccp.c	/^static struct default_include {$/;"	s	file:
default_include	cppinit.c	/^static struct default_include$/;"	s	file:
default_include	protoize.c	/^struct default_include { const char *fname; $/;"	s	file:
default_label	stmt.c	/^	  tree default_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
default_print_error_function	toplev.c	/^default_print_error_function (file)$/;"	f
default_syscalls_dir	protoize.c	/^static const char * const default_syscalls_dir = STD_PROTO_DIR;$/;"	v	file:
default_val	genattrtab.c	/^  struct attr_value *default_val; \/* Default value for this attribute.  *\/$/;"	m	struct:attr_desc
default_valid_lang_attribute	c-common.c	/^default_valid_lang_attribute (attr_name, attr_args, decl, type)$/;"	f	file:
defer_addressed_constants	varasm.c	/^defer_addressed_constants ()$/;"	f
defer_addressed_constants_flag	varasm.c	/^static int defer_addressed_constants_flag;$/;"	v	file:
deferred	c-typeck.c	/^  char deferred;$/;"	m	struct:initializer_stack
deferred_constant	varasm.c	/^struct deferred_constant$/;"	s	file:
deferred_constants	varasm.c	/^static struct deferred_constant *deferred_constants;$/;"	v	file:
define_label	c-decl.c	/^define_label (filename, line, name)$/;"	f
definition	cccp.c	/^struct definition {$/;"	s	file:
definition	protoize.c	/^  const def_dec_info *	definition;	\/* -> def\/dec containing related def *\/$/;"	m	struct:def_dec_info_struct
defn	cccp.c	/^  DEFINITION *defn;$/;"	m	union:hashval
defn	cccp.c	/^  struct definition *defn;$/;"	m	struct:macrodef
defs	genattrtab.c	/^static struct insn_def *defs;$/;"	v	file:
defs	gengenrtl.c	/^struct rtx_definition defs[] = $/;"	v
defs_decs	protoize.c	/^  const def_dec_info *		defs_decs;  \/* -> to chain of defs\/decs *\/$/;"	m	struct:file_info_struct
delay_desc	genattrtab.c	/^struct delay_desc$/;"	s	file:
delays	genattrtab.c	/^static struct delay_desc *delays;$/;"	v	file:
delete_address_reloads	reload1.c	/^delete_address_reloads (dead_insn, current_insn)$/;"	f	file:
delete_address_reloads_1	reload1.c	/^delete_address_reloads_1 (dead_insn, x, current_insn)$/;"	f	file:
delete_assertion	cccp.c	/^delete_assertion (hp)$/;"	f	file:
delete_barrier_successors	jump.c	/^delete_barrier_successors (f)$/;"	f	file:
delete_block	c-decl.c	/^delete_block (block)$/;"	f
delete_block	flow.c	/^delete_block (b)$/;"	f	file:
delete_caller_save_insns	reload1.c	/^delete_caller_save_insns ()$/;"	f	file:
delete_computation	jump.c	/^delete_computation (insn)$/;"	f	file:
delete_dead_insn	reload1.c	/^delete_dead_insn (insn)$/;"	f	file:
delete_eh_regions	flow.c	/^delete_eh_regions ()$/;"	f	file:
delete_failure_queue	gcc.c	/^delete_failure_queue ()$/;"	f	file:
delete_for_peephole	jump.c	/^delete_for_peephole (from, to)$/;"	f
delete_from_delay_slot	reorg.c	/^delete_from_delay_slot (insn)$/;"	f	file:
delete_from_jump_chain	jump.c	/^delete_from_jump_chain (jump)$/;"	f	file:
delete_handlers	function.c	/^delete_handlers ()$/;"	f	file:
delete_if_ordinary	gcc.c	/^delete_if_ordinary (name)$/;"	f	file:
delete_input	mips-tfile.c	/^static int	delete_input	= 0;		\/* != 0 if delete input after done *\/$/;"	v	file:
delete_insn	jump.c	/^delete_insn (insn)$/;"	f
delete_insn_chain	flow.c	/^delete_insn_chain (start, finish)$/;"	f	file:
delete_insn_for_stacker	reg-stack.c	/^delete_insn_for_stacker (insn)$/;"	f	file:
delete_insns_since	emit-rtl.c	/^delete_insns_since (from)$/;"	f
delete_ixpansion	c-iterate.c	/^delete_ixpansion (idecl)$/;"	f	file:
delete_jump	jump.c	/^delete_jump (insn)$/;"	f
delete_labelref_insn	jump.c	/^delete_labelref_insn (insn, label, delete_this)$/;"	f	file:
delete_macro	cccp.c	/^delete_macro (hp)$/;"	f	file:
delete_macro	cpphash.c	/^delete_macro (hp)$/;"	f
delete_noop_moves	jump.c	/^delete_noop_moves (f)$/;"	f	file:
delete_output_reload	reload1.c	/^delete_output_reload (insn, j, last_reload_reg)$/;"	f	file:
delete_reg_equiv	cse.c	/^delete_reg_equiv (reg)$/;"	f	file:
delete_scheduled_jump	reorg.c	/^delete_scheduled_jump (insn)$/;"	f	file:
delete_temp_files	gcc.c	/^delete_temp_files ()$/;"	f	file:
delete_this_arg	gcc.c	/^static int delete_this_arg;$/;"	v	file:
delete_trivially_dead_insns	cse.c	/^delete_trivially_dead_insns (insns, nreg)$/;"	f
delete_unreachable_blocks	flow.c	/^delete_unreachable_blocks ()$/;"	f	file:
delete_unreferenced_labels	jump.c	/^delete_unreferenced_labels (f)$/;"	f	file:
deleted_p	gcse.c	/^  char deleted_p;$/;"	m	struct:occr
demangle_new_symbols	tlink.c	/^demangle_new_symbols ()$/;"	f	file:
demangled	tlink.c	/^} demangled;$/;"	t	file:
demangled_hash_entry	tlink.c	/^typedef struct demangled_hash_entry$/;"	s	file:
demangled_hash_lookup	tlink.c	/^demangled_hash_lookup (string, create)$/;"	f	file:
demangled_hash_newfunc	tlink.c	/^demangled_hash_newfunc (entry, table, string)$/;"	f	file:
demangled_table	tlink.c	/^static struct hash_table demangled_table;$/;"	v	file:
dense	mips-tfile.c	/^  DNR		dense	[ PAGE_SIZE \/ sizeof (DNR)	 ];$/;"	m	union:page
dense_num	mips-tfile.c	/^static varray_t dense_num	= INIT_VARRAY (DNR);$/;"	v	file:
dense_nums	mips-tdump.c	/^DNR	*dense_nums;		\/* dense numbers *\/$/;"	v
dependencies	loop.c	/^  rtx dependencies;		\/* When INSN is libcall, this is an EXPR_LIST$/;"	m	struct:movable
deps_allocated_size	cccp.c	/^static int deps_allocated_size;$/;"	v	file:
deps_buffer	cccp.c	/^static char *deps_buffer;$/;"	v	file:
deps_column	cccp.c	/^static int deps_column;$/;"	v	file:
deps_output	cccp.c	/^  int deps_output;$/;"	m	struct:include_file
deps_output	cccp.c	/^deps_output (string, spacer)$/;"	f	file:
deps_output	cppfiles.c	/^deps_output (pfile, string, spacer)$/;"	f
deps_size	cccp.c	/^static int deps_size;$/;"	v	file:
depth	c-typeck.c	/^  int depth;$/;"	m	struct:constructor_stack
depth	stmt.c	/^  int depth;$/;"	m	struct:nesting
dequeue_eh_entry	except.c	/^dequeue_eh_entry (queue)$/;"	f	file:
derived_regs	unroll.c	/^static char *derived_regs;$/;"	v	file:
desc	varasm.c	/^  struct constant_descriptor *desc;$/;"	m	struct:pool_constant
describe	enquire.c	/^Procedure describe(description, extra) char *description, *extra; {$/;"	f
description	toplev.c	/^  const char *  description;$/;"	m	struct:
description	toplev.c	/^  const char * description;$/;"	m	struct:
description	toplev.c	/^  const char * description;$/;"	m	struct:lang_opt
deserves_ellipsis	c-aux-info.c	/^deserves_ellipsis (fntype)$/;"	f	file:
dest_hash	cse.c	/^  unsigned dest_hash;$/;"	m	struct:set
destructors	collect2.c	/^static struct head destructors;		\/* list of destructors found *\/$/;"	v	file:
dfoo	libgcc1-test.c	/^dfoo ()$/;"	f
di	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	union:rtx_const::<anonymous>
dialect_number	final.c	/^static int dialect_number;$/;"	v	file:
die	dwarf2out.c	/^  dw_die_ref die;$/;"	m	struct:limbo_die_struct
die	dwarf2out.c	/^  dw_die_ref die;$/;"	m	struct:pubname_struct
die_abbrev	dwarf2out.c	/^  unsigned long die_abbrev;$/;"	m	struct:die_struct
die_attr	dwarf2out.c	/^  dw_attr_ref die_attr;$/;"	m	struct:die_struct
die_attr_last	dwarf2out.c	/^  dw_attr_ref die_attr_last;$/;"	m	struct:die_struct
die_child	dwarf2out.c	/^  dw_die_ref die_child;$/;"	m	struct:die_struct
die_child_last	dwarf2out.c	/^  dw_die_ref die_child_last;$/;"	m	struct:die_struct
die_node	dwarf2out.c	/^die_node;$/;"	t	file:
die_offset	dwarf2out.c	/^  dw_offset die_offset;$/;"	m	struct:die_struct
die_parent	dwarf2out.c	/^  dw_die_ref die_parent;$/;"	m	struct:die_struct
die_sib	dwarf2out.c	/^  dw_die_ref die_sib;$/;"	m	struct:die_struct
die_struct	dwarf2out.c	/^typedef struct die_struct$/;"	s	file:
die_tag	dwarf2out.c	/^  enum dwarf_tag die_tag;$/;"	m	struct:die_struct
dienum_pop	dwarfout.c	/^dienum_pop ()$/;"	f	file:
dienum_push	dwarfout.c	/^dienum_push ()$/;"	f	file:
digest_init	c-typeck.c	/^digest_init (type, init, require_constant, constructor_constant)$/;"	f	file:
dimension	genattrtab.c	/^struct dimension $/;"	s	file:
dimensions	mips-tfile.c	/^  symint_t    dimensions     [N_TQ];	\/* dimensions for each array *\/$/;"	m	struct:type_info
dir	cccp.c	/^  struct file_name_list *dir;$/;"	m	struct:file_buf
dir	tlink.c	/^  const char *dir;$/;"	m	struct:file_hash_entry
dir_separator_str	gcc.c	/^static char dir_separator_str[] = {DIR_SEPARATOR, 0};$/;"	v	file:
direct_load	expr.c	/^static char direct_load[NUM_MACHINE_MODES];$/;"	v	file:
direct_store	expr.c	/^static char direct_store[NUM_MACHINE_MODES];$/;"	v	file:
directive	cccp.c	/^struct directive {$/;"	s	file:
directive	cpplib.c	/^struct directive {$/;"	s	file:
directive_start	cccp.c	/^U_CHAR *directive_start;$/;"	v
directive_table	cccp.c	/^static struct directive directive_table[] = {$/;"	v	file:
directive_table	cpplib.c	/^static struct directive directive_table[] = {$/;"	v	file:
directory_list	protoize.c	/^struct string_list *directory_list;$/;"	v
directory_specified_p	protoize.c	/^directory_specified_p (name)$/;"	f	file:
discard	libgcc1-test.c	/^discard (x)$/;"	f
discard_comments	cccp.c	/^discard_comments (start, length, newlines)$/;"	f	file:
discover_flags_reg	regmove.c	/^discover_flags_reg ()$/;"	f	file:
display_help	gcc.c	/^display_help ()$/;"	f	file:
display_help	toplev.c	/^display_help ()$/;"	f	file:
display_problems	doschk.c	/^display_problems ()$/;"	f
distribute_bit_expr	fold-const.c	/^distribute_bit_expr (code, type, arg0, arg1)$/;"	f	file:
distribute_links	combine.c	/^distribute_links (links)$/;"	f	file:
distribute_notes	combine.c	/^distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)$/;"	f	file:
div_and_round_double	fold-const.c	/^div_and_round_double (code, uns,$/;"	f
div_cost	expmed.c	/^static int div_cost[NUM_MACHINE_MODES];$/;"	v	file:
do_abort	toplev.c	/^do_abort ()$/;"	f
do_assert	cccp.c	/^do_assert (buf, limit, op, keyword)$/;"	f	file:
do_assert	cpplib.c	/^do_assert (pfile, keyword)$/;"	f	file:
do_block	sdbout.c	/^static int do_block = 0;$/;"	v	file:
do_block	xcoffout.c	/^static int do_block = 0;$/;"	v	file:
do_cleaning	protoize.c	/^do_cleaning (new_clean_text_base, new_clean_text_limit)$/;"	f	file:
do_cmp_and_jump	expmed.c	/^do_cmp_and_jump (arg1, arg2, op, mode, label)$/;"	f	file:
do_collecting	collect2.c	/^int do_collecting = 0;$/;"	v
do_collecting	collect2.c	/^int do_collecting = 1;$/;"	v
do_cross_jump	jump.c	/^do_cross_jump (insn, newjpos, newlpos)$/;"	f	file:
do_define	cccp.c	/^do_define (buf, limit, op, keyword)$/;"	f	file:
do_define	cpplib.c	/^do_define (pfile, keyword)$/;"	f	file:
do_elif	cccp.c	/^do_elif (buf, limit, op, keyword)$/;"	f	file:
do_elif	cpplib.c	/^do_elif (pfile, keyword)$/;"	f	file:
do_else	cccp.c	/^do_else (buf, limit, op, keyword)$/;"	f	file:
do_else	cpplib.c	/^do_else (pfile, keyword)$/;"	f	file:
do_endif	cccp.c	/^do_endif (buf, limit, op, keyword)$/;"	f	file:
do_endif	cpplib.c	/^do_endif (pfile, keyword)$/;"	f	file:
do_error	cccp.c	/^do_error (buf, limit, op, keyword)$/;"	f	file:
do_error	cpplib.c	/^do_error (pfile, keyword)$/;"	f	file:
do_float_handler	toplev.c	/^do_float_handler (fn, data)$/;"	f
do_ident	cccp.c	/^do_ident (buf, limit, op, keyword)$/;"	f	file:
do_ident	cpplib.c	/^do_ident (pfile, keyword)$/;"	f	file:
do_identifier_warnings	tree.c	/^static int do_identifier_warnings;$/;"	v	file:
do_if	cccp.c	/^do_if (buf, limit, op, keyword)$/;"	f	file:
do_if	cpplib.c	/^do_if (pfile, keyword)$/;"	f	file:
do_include	cccp.c	/^do_include (buf, limit, op, keyword)$/;"	f	file:
do_include	cpplib.c	/^do_include (pfile, keyword)$/;"	f	file:
do_jump	expr.c	/^do_jump (exp, if_false_label, if_true_label)$/;"	f
do_jump_by_parts_equality	expr.c	/^do_jump_by_parts_equality (exp, if_false_label, if_true_label)$/;"	f	file:
do_jump_by_parts_equality_rtx	expr.c	/^do_jump_by_parts_equality_rtx (op0, if_false_label, if_true_label)$/;"	f
do_jump_by_parts_greater	expr.c	/^do_jump_by_parts_greater (exp, swap, if_false_label, if_true_label)$/;"	f	file:
do_jump_by_parts_greater_rtx	expr.c	/^do_jump_by_parts_greater_rtx (mode, unsignedp, op0, op1, if_false_label, if_true_label)$/;"	f
do_jump_for_compare	expr.c	/^do_jump_for_compare (comparison, if_false_label, if_true_label)$/;"	f	file:
do_jump_if_equal	stmt.c	/^do_jump_if_equal (op1, op2, label, unsignedp)$/;"	f	file:
do_line	cccp.c	/^do_line (buf, limit, op, keyword)$/;"	f	file:
do_line	cpplib.c	/^do_line (pfile, keyword)$/;"	f	file:
do_not_record	cse.c	/^static int do_not_record;$/;"	v	file:
do_once	cccp.c	/^do_once ()$/;"	f	file:
do_pending_stack_adjust	expr.c	/^do_pending_stack_adjust ()$/;"	f
do_pragma	cccp.c	/^do_pragma (buf, limit, op, keyword)$/;"	f	file:
do_pragma	cpplib.c	/^do_pragma (pfile, keyword)$/;"	f	file:
do_preexpand_calls	expr.c	/^int do_preexpand_calls = 1;$/;"	v
do_processing	protoize.c	/^do_processing ()$/;"	f	file:
do_sccs	cccp.c	/^do_sccs (buf, limit, op, keyword)$/;"	f	file:
do_sccs	cpplib.c	/^do_sccs (pfile, keyword)$/;"	f	file:
do_spec	gcc.c	/^do_spec (spec)$/;"	f
do_spec_1	gcc.c	/^do_spec_1 (spec, inswitch, soft_matched_part)$/;"	f	file:
do_store_flag	expr.c	/^do_store_flag (exp, target, mode, only_cheap)$/;"	f	file:
do_tablejump	expr.c	/^do_tablejump (index, mode, range, table_label, default_label)$/;"	f
do_tlink	tlink.c	/^do_tlink (ld_argv, object_lst)$/;"	f
do_unassert	cccp.c	/^do_unassert (buf, limit, op, keyword)$/;"	f	file:
do_unassert	cpplib.c	/^do_unassert (pfile, keyword)$/;"	f	file:
do_undef	cccp.c	/^do_undef (buf, limit, op, keyword)$/;"	f	file:
do_undef	cpplib.c	/^do_undef (pfile, keyword)$/;"	f	file:
do_wait	collect2.c	/^do_wait (prog)$/;"	f	file:
do_warning	cccp.c	/^do_warning (buf, limit, op, keyword)$/;"	f	file:
do_warning	cpplib.c	/^do_warning (pfile, keyword)$/;"	f	file:
do_xifdef	cccp.c	/^do_xifdef (buf, limit, op, keyword)$/;"	f	file:
do_xifdef	cpplib.c	/^do_xifdef (pfile, keyword)$/;"	f	file:
documented_lang_options	toplev.c	/^documented_lang_options[] =$/;"	v	file:
doing_eh	except.c	/^doing_eh (do_warn)$/;"	f
doing_objc_thang	c-lex.c	/^int doing_objc_thang;$/;"	v
dollars_in_ident	c-decl.c	/^int dollars_in_ident = DOLLARS_IN_IDENTIFIERS;$/;"	v
dom	haifa-sched.c	/^static bbset *dom;$/;"	v	file:
done	loop.c	/^  unsigned int done : 1;	\/* 1 inhibits further processing of this *\/$/;"	m	struct:movable
done_initializing	cccp.c	/^static int done_initializing = 0;$/;"	v	file:
dos_name	doschk.c	/^  char *dos_name;$/;"	m	struct:ENT
double	libgcc2.c	1080;"	d	file:
double	libgcc2.c	1102;"	d	file:
double	libgcc2.c	1124;"	d	file:
double	libgcc2.c	1153;"	d	file:
double	libgcc2.c	118;"	d	file:
double_ftype_double	c-decl.c	/^tree double_ftype_double, double_ftype_double_double;$/;"	v
double_ftype_double_double	c-decl.c	/^tree double_ftype_double, double_ftype_double_double;$/;"	v
double_long	floatlib.c	/^union double_long {$/;"	u	file:
double_mode	emit-rtl.c	/^enum machine_mode double_mode;	\/* Mode whose width is DOUBLE_TYPE_SIZE.  *\/$/;"	v
double_reg_address_ok	reload1.c	/^char double_reg_address_ok;$/;"	v
double_type_node	c-decl.c	/^tree double_type_node;$/;"	v
draw_edge	graph.c	/^draw_edge (fp, from, to, bb_edge, class)$/;"	f	file:
drop_through_at_end_p	stmt.c	/^drop_through_at_end_p ()$/;"	f
dst_addr	libgcc2.c	/^  unsigned long dst_addr;$/;"	m	struct:bb_edge
du	varasm.c	/^    union real_extract du;$/;"	m	union:rtx_const::<anonymous>
dump	haifa-sched.c	/^static FILE *dump = 0;$/;"	v	file:
dump_all_macros	cccp.c	/^dump_all_macros ()$/;"	f	file:
dump_and_abort	rtl.c	/^dump_and_abort (expected_c, actual_c, infile)$/;"	f	file:
dump_arg_n	cccp.c	/^dump_arg_n (defn, argnum, of)$/;"	f	file:
dump_base_name	toplev.c	/^const char *dump_base_name;$/;"	v
dump_bb_data	flow.c	/^dump_bb_data (file, preds, succs, live_info)$/;"	f
dump_class	cse.c	/^dump_class (classp)$/;"	f
dump_combine_stats	combine.c	/^dump_combine_stats (file)$/;"	f
dump_combine_total_stats	combine.c	/^dump_combine_total_stats (file)$/;"	f
dump_conflicts	global.c	/^dump_conflicts (file)$/;"	f	file:
dump_definition	cpphash.c	/^dump_definition (pfile, macro)$/;"	f
dump_definitions	cccp.c	/^static enum {dump_none, dump_only, dump_names, dump_definitions}$/;"	e	file:
dump_defn_1	cccp.c	/^dump_defn_1 (base, start, length, of)$/;"	f	file:
dump_edge_info	flow.c	/^dump_edge_info (file, e, do_succ)$/;"	f	file:
dump_file	collect2.c	/^dump_file (name)$/;"	f
dump_flow_info	flow.c	/^dump_flow_info (file)$/;"	f
dump_for_graph	print-rtl.c	/^int dump_for_graph;$/;"	v
dump_global_regs	global.c	/^dump_global_regs (file)$/;"	f
dump_hash_table	gcse.c	/^dump_hash_table (file, name, table, table_size, total_size)$/;"	f	file:
dump_includes	cccp.c	/^static int dump_includes;$/;"	v	file:
dump_list	collect2.c	/^dump_list (stream, prefix, list)$/;"	f	file:
dump_local_alloc	local-alloc.c	/^dump_local_alloc (file)$/;"	f
dump_macros	cccp.c	/^     dump_macros = dump_none;$/;"	v	file:
dump_names	cccp.c	/^static enum {dump_none, dump_only, dump_names, dump_definitions}$/;"	e	file:
dump_needs	reload1.c	/^dump_needs (chain, dumpfile)$/;"	f
dump_none	cccp.c	/^static enum {dump_none, dump_only, dump_names, dump_definitions}$/;"	e	file:
dump_only	cccp.c	/^static enum {dump_none, dump_only, dump_names, dump_definitions}$/;"	e	file:
dump_rtl	toplev.c	/^dump_rtl (suffix, decl, func, insns)$/;"	f	file:
dump_sbitmap	sbitmap.c	/^dump_sbitmap (file, bmap)$/;"	f
dump_sbitmap_vector	sbitmap.c	/^dump_sbitmap_vector (file, title, subtitle, bmaps, n_maps)$/;"	f
dump_single_macro	cccp.c	/^dump_single_macro (hp, of)$/;"	f	file:
dump_special_to_buffer	cppinit.c	/^dump_special_to_buffer (pfile, macro_name)$/;"	f	file:
dump_stack_info	reg-stack.c	/^dump_stack_info (file)$/;"	f	file:
dump_time	toplev.c	/^int dump_time;$/;"	v
dump_tree_statistics	tree.c	/^dump_tree_statistics ()$/;"	f
dup2	collect2.c	/^dup2 (oldfd, newfd)$/;"	f
dup_count	genextract.c	/^  int dup_count;$/;"	m	struct:extraction
dup_count	genextract.c	/^static int dup_count;$/;"	v	file:
dup_operands_seen_this_insn	genconfig.c	/^static int dup_operands_seen_this_insn;$/;"	v	file:
duplicate_decls	c-decl.c	/^duplicate_decls (newdecl, olddecl, different_binding_level)$/;"	f	file:
duplicate_eh_handlers	except.c	/^duplicate_eh_handlers (old_note_eh_region, new_note_eh_region, map)$/;"	f
duplicate_loop_exit_test	jump.c	/^duplicate_loop_exit_test (loop_start)$/;"	f	file:
duplocs	genextract.c	/^  char *duplocs[MAX_DUP_OPERANDS];$/;"	m	struct:extraction
duplocs	genextract.c	/^static char *duplocs[MAX_DUP_OPERANDS];$/;"	v	file:
dupno	genrecog.c	/^  int dupno;			\/* Number of operand to compare against *\/$/;"	m	struct:decision
dupnstr	protoize.c	/^dupnstr (s, n)$/;"	f	file:
dupnums	genextract.c	/^  int dupnums[MAX_DUP_OPERANDS];$/;"	m	struct:extraction
dupnums	genextract.c	/^static int dupnums[MAX_DUP_OPERANDS];$/;"	v	file:
dw_attr	dwarf2out.c	/^  enum dwarf_attribute dw_attr;$/;"	m	struct:dw_attr_struct
dw_attr_next	dwarf2out.c	/^  dw_attr_ref dw_attr_next;$/;"	m	struct:dw_attr_struct
dw_attr_node	dwarf2out.c	/^dw_attr_node;$/;"	t	file:
dw_attr_ref	dwarf2out.c	/^typedef struct dw_attr_struct *dw_attr_ref;$/;"	t	file:
dw_attr_struct	dwarf2out.c	/^typedef struct dw_attr_struct$/;"	s	file:
dw_attr_val	dwarf2out.c	/^  dw_val_node dw_attr_val;$/;"	m	struct:dw_attr_struct
dw_cfi_addr	dwarf2out.c	/^  char *dw_cfi_addr;$/;"	m	union:dw_cfi_oprnd_struct
dw_cfi_next	dwarf2out.c	/^  dw_cfi_ref dw_cfi_next;$/;"	m	struct:dw_cfi_struct
dw_cfi_node	dwarf2out.c	/^dw_cfi_node;$/;"	t	file:
dw_cfi_offset	dwarf2out.c	/^  long int dw_cfi_offset;$/;"	m	union:dw_cfi_oprnd_struct
dw_cfi_opc	dwarf2out.c	/^  enum dwarf_call_frame_info dw_cfi_opc;$/;"	m	struct:dw_cfi_struct
dw_cfi_oprnd	dwarf2out.c	/^dw_cfi_oprnd;$/;"	t	file:
dw_cfi_oprnd1	dwarf2out.c	/^  dw_cfi_oprnd dw_cfi_oprnd1;$/;"	m	struct:dw_cfi_struct
dw_cfi_oprnd2	dwarf2out.c	/^  dw_cfi_oprnd dw_cfi_oprnd2;$/;"	m	struct:dw_cfi_struct
dw_cfi_oprnd_ref	dwarf2out.c	/^typedef union  dw_cfi_oprnd_struct *dw_cfi_oprnd_ref;$/;"	t	file:
dw_cfi_oprnd_struct	dwarf2out.c	/^typedef union dw_cfi_oprnd_struct$/;"	u	file:
dw_cfi_ref	dwarf2out.c	/^typedef struct dw_cfi_struct *dw_cfi_ref;$/;"	t	file:
dw_cfi_reg_num	dwarf2out.c	/^  unsigned long dw_cfi_reg_num;$/;"	m	union:dw_cfi_oprnd_struct
dw_cfi_struct	dwarf2out.c	/^typedef struct dw_cfi_struct$/;"	s	file:
dw_die_ref	dwarf2out.c	/^typedef struct die_struct *dw_die_ref;$/;"	t	file:
dw_fde_begin	dwarf2out.c	/^  char *dw_fde_begin;$/;"	m	struct:dw_fde_struct
dw_fde_cfi	dwarf2out.c	/^  dw_cfi_ref dw_fde_cfi;$/;"	m	struct:dw_fde_struct
dw_fde_current_label	dwarf2out.c	/^  char *dw_fde_current_label;$/;"	m	struct:dw_fde_struct
dw_fde_end	dwarf2out.c	/^  char *dw_fde_end;$/;"	m	struct:dw_fde_struct
dw_fde_node	dwarf2out.c	/^dw_fde_node;$/;"	t	file:
dw_fde_ref	dwarf2out.c	/^typedef struct dw_fde_struct *dw_fde_ref;$/;"	t	file:
dw_fde_struct	dwarf2out.c	/^typedef struct dw_fde_struct$/;"	s	file:
dw_file_num	dwarf2out.c	/^  unsigned long dw_file_num;$/;"	m	struct:dw_line_info_struct
dw_file_num	dwarf2out.c	/^  unsigned long dw_file_num;$/;"	m	struct:dw_separate_line_info_struct
dw_float_const	dwarf2out.c	/^dw_float_const;$/;"	t	file:
dw_fp_struct	dwarf2out.c	/^typedef struct dw_fp_struct$/;"	s	file:
dw_line_info_entry	dwarf2out.c	/^dw_line_info_entry;$/;"	t	file:
dw_line_info_ref	dwarf2out.c	/^typedef struct dw_line_info_struct *dw_line_info_ref;$/;"	t	file:
dw_line_info_struct	dwarf2out.c	/^typedef struct dw_line_info_struct$/;"	s	file:
dw_line_num	dwarf2out.c	/^  unsigned long dw_line_num;$/;"	m	struct:dw_line_info_struct
dw_line_num	dwarf2out.c	/^  unsigned long dw_line_num;$/;"	m	struct:dw_separate_line_info_struct
dw_loc_descr_node	dwarf2out.c	/^dw_loc_descr_node;$/;"	t	file:
dw_loc_descr_ref	dwarf2out.c	/^typedef struct dw_loc_descr_struct *dw_loc_descr_ref;$/;"	t	file:
dw_loc_descr_struct	dwarf2out.c	/^typedef struct dw_loc_descr_struct$/;"	s	file:
dw_loc_next	dwarf2out.c	/^  dw_loc_descr_ref dw_loc_next;$/;"	m	struct:dw_loc_descr_struct
dw_loc_opc	dwarf2out.c	/^  enum dwarf_location_atom dw_loc_opc;$/;"	m	struct:dw_loc_descr_struct
dw_loc_oprnd1	dwarf2out.c	/^  dw_val_node dw_loc_oprnd1;$/;"	m	struct:dw_loc_descr_struct
dw_loc_oprnd2	dwarf2out.c	/^  dw_val_node dw_loc_oprnd2;$/;"	m	struct:dw_loc_descr_struct
dw_long_long_const	dwarf2out.c	/^dw_long_long_const;$/;"	t	file:
dw_long_long_struct	dwarf2out.c	/^typedef struct dw_long_long_struct$/;"	s	file:
dw_offset	dwarf2out.c	/^typedef long int dw_offset;$/;"	t	file:
dw_separate_line_info_entry	dwarf2out.c	/^dw_separate_line_info_entry;$/;"	t	file:
dw_separate_line_info_ref	dwarf2out.c	/^typedef struct dw_separate_line_info_struct *dw_separate_line_info_ref;$/;"	t	file:
dw_separate_line_info_struct	dwarf2out.c	/^typedef struct dw_separate_line_info_struct$/;"	s	file:
dw_val_class	dwarf2out.c	/^dw_val_class;$/;"	t	file:
dw_val_class_addr	dwarf2out.c	/^  dw_val_class_addr,$/;"	e	file:
dw_val_class_const	dwarf2out.c	/^  dw_val_class_const,$/;"	e	file:
dw_val_class_die_ref	dwarf2out.c	/^  dw_val_class_die_ref,$/;"	e	file:
dw_val_class_fde_ref	dwarf2out.c	/^  dw_val_class_fde_ref,$/;"	e	file:
dw_val_class_flag	dwarf2out.c	/^  dw_val_class_flag,$/;"	e	file:
dw_val_class_float	dwarf2out.c	/^  dw_val_class_float,$/;"	e	file:
dw_val_class_lbl_id	dwarf2out.c	/^  dw_val_class_lbl_id,$/;"	e	file:
dw_val_class_lbl_offset	dwarf2out.c	/^  dw_val_class_lbl_offset,$/;"	e	file:
dw_val_class_loc	dwarf2out.c	/^  dw_val_class_loc,$/;"	e	file:
dw_val_class_long_long	dwarf2out.c	/^  dw_val_class_long_long,$/;"	e	file:
dw_val_class_str	dwarf2out.c	/^  dw_val_class_str$/;"	e	file:
dw_val_class_unsigned_const	dwarf2out.c	/^  dw_val_class_unsigned_const,$/;"	e	file:
dw_val_node	dwarf2out.c	/^dw_val_node;$/;"	t	file:
dw_val_ref	dwarf2out.c	/^typedef struct dw_val_struct *dw_val_ref;$/;"	t	file:
dw_val_struct	dwarf2out.c	/^typedef struct dw_val_struct$/;"	s	file:
dwarf2_name	dwarf2out.c	/^dwarf2_name (decl, scope)$/;"	f	file:
dwarf2out_args_size	dwarf2out.c	/^dwarf2out_args_size (label, size)$/;"	f
dwarf2out_begin_block	dwarf2out.c	/^dwarf2out_begin_block (blocknum)$/;"	f
dwarf2out_begin_prologue	dwarf2out.c	/^dwarf2out_begin_prologue ()$/;"	f
dwarf2out_cfi_label	dwarf2out.c	/^dwarf2out_cfi_label ()$/;"	f
dwarf2out_decl	dwarf2out.c	/^dwarf2out_decl (decl)$/;"	f
dwarf2out_def_cfa	dwarf2out.c	/^dwarf2out_def_cfa (label, reg, offset)$/;"	f
dwarf2out_define	dwarf2out.c	/^dwarf2out_define (lineno, buffer)$/;"	f
dwarf2out_do_frame	dwarf2out.c	/^dwarf2out_do_frame ()$/;"	f
dwarf2out_end_block	dwarf2out.c	/^dwarf2out_end_block (blocknum)$/;"	f
dwarf2out_end_epilogue	dwarf2out.c	/^dwarf2out_end_epilogue ()$/;"	f
dwarf2out_end_source_file	dwarf2out.c	/^dwarf2out_end_source_file ()$/;"	f
dwarf2out_finish	dwarf2out.c	/^dwarf2out_finish ()$/;"	f
dwarf2out_frame_debug	dwarf2out.c	/^dwarf2out_frame_debug (insn)$/;"	f
dwarf2out_frame_debug_expr	dwarf2out.c	/^dwarf2out_frame_debug_expr (expr, label)$/;"	f	file:
dwarf2out_frame_finish	dwarf2out.c	/^dwarf2out_frame_finish ()$/;"	f
dwarf2out_frame_init	dwarf2out.c	/^dwarf2out_frame_init ()$/;"	f
dwarf2out_init	dwarf2out.c	/^dwarf2out_init (asm_out_file, main_input_filename)$/;"	f
dwarf2out_label	dwarf2out.c	/^dwarf2out_label (insn)$/;"	f
dwarf2out_line	dwarf2out.c	/^dwarf2out_line (filename, line)$/;"	f
dwarf2out_reg_save	dwarf2out.c	/^dwarf2out_reg_save (label, reg, offset)$/;"	f
dwarf2out_return_reg	dwarf2out.c	/^dwarf2out_return_reg (label, sreg)$/;"	f
dwarf2out_return_save	dwarf2out.c	/^dwarf2out_return_save (label, offset)$/;"	f
dwarf2out_stack_adjust	dwarf2out.c	/^dwarf2out_stack_adjust (insn)$/;"	f	file:
dwarf2out_start_source_file	dwarf2out.c	/^dwarf2out_start_source_file (filename)$/;"	f
dwarf2out_undef	dwarf2out.c	/^dwarf2out_undef (lineno, buffer)$/;"	f
dwarf2out_window_save	dwarf2out.c	/^dwarf2out_window_save (label)$/;"	f
dwarf_attr_name	dwarf2out.c	/^dwarf_attr_name (attr)$/;"	f	file:
dwarf_attr_name	dwarfout.c	/^dwarf_attr_name (attr)$/;"	f	file:
dwarf_cfi_name	dwarf2out.c	/^dwarf_cfi_name (cfi_opc)$/;"	f	file:
dwarf_cie	frame.c	/^struct dwarf_cie {$/;"	s	file:
dwarf_fde	frame.c	/^struct dwarf_fde {$/;"	s	file:
dwarf_fmt_byte_name	dwarfout.c	/^dwarf_fmt_byte_name (fmt)$/;"	f	file:
dwarf_form_name	dwarf2out.c	/^dwarf_form_name (form)$/;"	f	file:
dwarf_fund_type_name	dwarfout.c	/^dwarf_fund_type_name (ft)$/;"	f	file:
dwarf_last_decl	dwarf2out.c	/^static tree dwarf_last_decl;$/;"	v	file:
dwarf_last_decl	dwarfout.c	/^static tree dwarf_last_decl;$/;"	v	file:
dwarf_stack_op_name	dwarf2out.c	/^dwarf_stack_op_name (op)$/;"	f	file:
dwarf_stack_op_name	dwarfout.c	/^dwarf_stack_op_name (op)$/;"	f	file:
dwarf_tag_name	dwarf2out.c	/^dwarf_tag_name (tag)$/;"	f	file:
dwarf_tag_name	dwarfout.c	/^dwarf_tag_name (tag)$/;"	f	file:
dwarf_typemod_name	dwarfout.c	/^dwarf_typemod_name (mod)$/;"	f	file:
dwarfout_begin_block	dwarfout.c	/^dwarfout_begin_block (blocknum)$/;"	f
dwarfout_begin_function	dwarfout.c	/^dwarfout_begin_function ()$/;"	f
dwarfout_define	dwarfout.c	/^dwarfout_define (lineno, buffer)$/;"	f
dwarfout_end_block	dwarfout.c	/^dwarfout_end_block (blocknum)$/;"	f
dwarfout_end_epilogue	dwarfout.c	/^dwarfout_end_epilogue ()$/;"	f
dwarfout_end_function	dwarfout.c	/^dwarfout_end_function ()$/;"	f
dwarfout_file_scope_decl	dwarfout.c	/^dwarfout_file_scope_decl (decl, set_finalizing)$/;"	f
dwarfout_finish	dwarfout.c	/^dwarfout_finish ()$/;"	f
dwarfout_init	dwarfout.c	/^dwarfout_init (asm_out_file, main_input_filename)$/;"	f
dwarfout_label	dwarfout.c	/^dwarfout_label (insn)$/;"	f
dwarfout_line	dwarfout.c	/^dwarfout_line (filename, line)$/;"	f
dwarfout_resume_previous_source_file	dwarfout.c	/^dwarfout_resume_previous_source_file (lineno)$/;"	f
dwarfout_start_new_source_file	dwarfout.c	/^dwarfout_start_new_source_file (filename)$/;"	f
dwarfout_undef	dwarfout.c	/^dwarfout_undef (lineno, buffer)$/;"	f
dyn_string_append	dyn-string.c	/^dyn_string_append (ds, s)$/;"	f
dyn_string_delete	dyn-string.c	/^dyn_string_delete (ds)$/;"	f
dyn_string_new	dyn-string.c	/^dyn_string_new (space)$/;"	f
dyn_string_resize	dyn-string.c	/^dyn_string_resize (ds, space)$/;"	f
dynamic_offset	function.c	/^static int dynamic_offset;$/;"	v	file:
e113toe	real.c	/^e113toe (pe, y)$/;"	f	file:
e24toe	real.c	/^e24toe (pe, y)$/;"	f	file:
e32	real.c	/^unsigned EMUSHORT e32[NE] =$/;"	v
e53toe	real.c	/^e53toe (pe, y)$/;"	f	file:
e64toe	real.c	/^e64toe (pe, y)$/;"	f	file:
e_kind	tree.c	/^  e_kind,$/;"	e	file:
e_strings	mips-tdump.c	/^char	*e_strings;		\/* external strings *\/$/;"	v
e_symbols	mips-tdump.c	/^EXTR	*e_symbols;		\/* external symbols *\/$/;"	v
eadd	real.c	/^eadd (a, b, c)$/;"	f	file:
eadd1	real.c	/^eadd1 (a, b, c)$/;"	f	file:
eaddm	real.c	/^eaddm (x, y)$/;"	f	file:
earith	real.c	/^earith (value, icode, r1, r2)$/;"	f
early_clobber	regmove.c	/^  int early_clobber[MAX_RECOG_OPERANDS];$/;"	m	struct:match
earlyclobber_operand_p	reload.c	/^earlyclobber_operand_p (x)$/;"	f	file:
eclear	real.c	/^eclear (x)$/;"	f	file:
ecleaz	real.c	/^ecleaz (xi)$/;"	f	file:
ecleazs	real.c	/^ecleazs (xi)$/;"	f	file:
ecmp	real.c	/^ecmp (a, b)$/;"	f	file:
ecmpm	real.c	/^ecmpm (a, b)$/;"	f	file:
edge_table	haifa-sched.c	/^static haifa_edge *edge_table;$/;"	v	file:
edge_to_bit	haifa-sched.c	/^static int *edge_to_bit;$/;"	v	file:
edgelst	haifa-sched.c	/^typedef bitlst edgelst;$/;"	t	file:
edgeset	haifa-sched.c	/^typedef bitset edgeset;$/;"	t	file:
edgeset_size	haifa-sched.c	/^static int edgeset_size;$/;"	v	file:
edit_file	protoize.c	/^edit_file (hp)$/;"	f	file:
edit_fn_declaration	protoize.c	/^edit_fn_declaration (def_dec_p, clean_text_p)$/;"	f	file:
edit_fn_definition	protoize.c	/^edit_fn_definition (def_dec_p, clean_text_p)$/;"	f	file:
edit_formals_lists	protoize.c	/^edit_formals_lists (end_formals, f_list_count, def_dec_p)$/;"	f	file:
ediv	real.c	/^ediv (a, b, c)$/;"	f	file:
edivm	real.c	/^edivm (den, num)$/;"	f	file:
eek_a_bug	enquire.c	/^Procedure eek_a_bug(problem) char *problem; {$/;"	f
efdr	mips-tfile.c	/^typedef struct efdr {$/;"	s	file:
efdr_t	mips-tfile.c	/^} efdr_t;$/;"	t	file:
efixi	real.c	/^efixi (x)$/;"	f
efixui	real.c	/^efixui (x)$/;"	f
efloor	real.c	/^efloor (x, y)$/;"	f	file:
eh_context_free	libgcc2.c	/^eh_context_free (void *ptr)$/;"	f	file:
eh_context_initialize	libgcc2.c	/^eh_context_initialize ()$/;"	f	file:
eh_context_key	libgcc2.c	/^static __gthread_key_t eh_context_key;$/;"	v	file:
eh_context_specific	libgcc2.c	/^eh_context_specific ()$/;"	f	file:
eh_context_static	libgcc2.c	/^eh_context_static ()$/;"	f	file:
eh_frame_section	varasm.c	/^eh_frame_section ()$/;"	f
eh_outer_context	except.c	/^eh_outer_context (addr)$/;"	f
eh_ptr	frame.c	/^  void *eh_ptr;$/;"	m	struct:cie_info
eh_region_from_symbol	except.c	/^eh_region_from_symbol (sym)$/;"	f
eh_regs	except.c	/^eh_regs (pcontext, psp, pra, outgoing)$/;"	f	file:
eh_return_context	except.c	/^static rtx eh_return_context;$/;"	v	file:
eh_return_handler	except.c	/^static rtx eh_return_handler;$/;"	v	file:
eh_return_stack_adjust	except.c	/^static rtx eh_return_stack_adjust;$/;"	v	file:
eh_return_stub_label	except.c	/^rtx eh_return_stub_label;$/;"	v
eh_rtime_match_libfunc	optabs.c	/^rtx eh_rtime_match_libfunc;$/;"	v
eh_table	except.c	/^static int *eh_table = NULL;$/;"	v	file:
eh_table_max_size	except.c	/^static int eh_table_max_size = 0;$/;"	v	file:
eh_table_size	except.c	/^static int eh_table_size = 0;$/;"	v	file:
eh_threads_initialize	libgcc2.c	/^eh_threads_initialize ()$/;"	f	file:
ehalf	real.c	/^unsigned EMUSHORT ehalf[NE] =$/;"	v
ehqueue	except.c	/^static struct eh_queue ehqueue;$/;"	v	file:
ehstack	except.c	/^static struct eh_stack ehstack;$/;"	v	file:
eif_eh_map	integrate.c	/^static struct inline_remap *eif_eh_map;$/;"	v	file:
eifrac	real.c	/^eifrac (x, i, frac)$/;"	f	file:
eiisinf	real.c	/^eiisinf (x)$/;"	f	file:
eiisnan	real.c	/^eiisnan (x)$/;"	f	file:
eiisneg	real.c	/^eiisneg (x)$/;"	f	file:
einan	real.c	/^einan (x)$/;"	f	file:
einfin	real.c	/^einfin (x)$/;"	f	file:
eiremain	real.c	/^eiremain (den, num)$/;"	f	file:
eisinf	real.c	/^eisinf (x)$/;"	f	file:
eisnan	real.c	/^eisnan (x)$/;"	f	file:
eisneg	real.c	/^eisneg (x)$/;"	f	file:
eldexp	real.c	/^eldexp (x, pwr2, y)$/;"	f	file:
element_list_attribute	dwarfout.c	/^element_list_attribute (element)$/;"	f	file:
elements	c-typeck.c	/^  tree elements;$/;"	m	struct:constructor_stack
elements	c-typeck.c	/^  tree elements;$/;"	m	struct:initializer_stack
eligible_for_annul_false	reorg.c	150;"	d	file:
eligible_for_annul_true	reorg.c	147;"	d	file:
elim_reg_set	flow.c	/^static HARD_REG_SET elim_reg_set;$/;"	v	file:
elim_table	reload1.c	/^struct elim_table$/;"	s	file:
elim_table_1	reload1.c	/^static struct elim_table_1$/;"	s	file:
eliminable_regset	global.c	/^static HARD_REG_SET eliminable_regset;$/;"	v	file:
eliminate_constant_term	explow.c	/^eliminate_constant_term (x, constptr)$/;"	f
eliminate_known_true	genattrtab.c	/^eliminate_known_true (known_true, exp, insn_code, insn_index)$/;"	f	file:
eliminate_regs	reload1.c	/^eliminate_regs (x, mem_mode, insn)$/;"	f
eliminate_regs_in_insn	reload1.c	/^eliminate_regs_in_insn (insn, replace)$/;"	f	file:
elog2	real.c	/^unsigned EMUSHORT elog2[NE] =$/;"	v
elt_one_int	genrecog.c	/^  int elt_one_int;		\/* Required value for XINT (rtl, 1) *\/$/;"	m	struct:decision
elt_zero_int	genrecog.c	/^  int elt_zero_int;		\/* Required value for XINT (rtl, 0) *\/$/;"	m	struct:decision
elt_zero_wide	genrecog.c	/^  HOST_WIDE_INT elt_zero_wide;	\/* Required value for XWINT (rtl, 0) *\/$/;"	m	struct:decision
emdnorm	real.c	/^emdnorm (s, lost, subflg, exp, rcntrl)$/;"	f	file:
emit	emit-rtl.c	/^emit (x)$/;"	f
emit_0_to_1_insn	optabs.c	/^emit_0_to_1_insn (x)$/;"	f
emit_aggregate	mips-tdump.c	/^emit_aggregate (string, u, u2, which, fdp)$/;"	f
emit_barrier	emit-rtl.c	/^emit_barrier ()$/;"	f
emit_barrier_after	emit-rtl.c	/^emit_barrier_after (after)$/;"	f
emit_barrier_before	emit-rtl.c	/^emit_barrier_before (before)$/;"	f
emit_block_move	expr.c	/^emit_block_move (x, y, size, align)$/;"	f
emit_call_1	calls.c	/^emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,$/;"	f	file:
emit_call_insn	emit-rtl.c	/^emit_call_insn (pattern)$/;"	f
emit_call_insn_before	emit-rtl.c	/^emit_call_insn_before (pattern, before)$/;"	f
emit_case_nodes	stmt.c	/^emit_case_nodes (index, node, default_label, index_type)$/;"	f	file:
emit_clr_insn	optabs.c	/^emit_clr_insn (x)$/;"	f
emit_cmp_and_jump_insns	optabs.c	/^emit_cmp_and_jump_insns (x, y, comparison, size, mode, unsignedp, align, label)$/;"	f
emit_cmp_insn	optabs.c	/^emit_cmp_insn (x, y, comparison, size, mode, unsignedp, align)$/;"	f
emit_conditional_move	optabs.c	/^emit_conditional_move (target, code, op0, op1, cmode, op2, op3, mode,$/;"	f
emit_delay_sequence	reorg.c	/^emit_delay_sequence (insn, list, length)$/;"	f	file:
emit_eh_context	except.c	/^emit_eh_context ()$/;"	f
emit_filename	stmt.c	/^char *emit_filename;$/;"	v
emit_float_lib_cmp	optabs.c	/^emit_float_lib_cmp (x, y, comparison)$/;"	f
emit_group_load	expr.c	/^emit_group_load (dst, orig_src, ssize, align)$/;"	f
emit_group_store	expr.c	/^emit_group_store (orig_dst, src, ssize, align)$/;"	f
emit_indirect_jump	optabs.c	/^emit_indirect_jump (loc)$/;"	f
emit_insn	emit-rtl.c	/^emit_insn (pattern)$/;"	f
emit_insn_after	emit-rtl.c	/^emit_insn_after (pattern, after)$/;"	f
emit_insn_after_with_line_notes	emit-rtl.c	/^emit_insn_after_with_line_notes (pattern, after, from)$/;"	f
emit_insn_before	emit-rtl.c	/^emit_insn_before (pattern, before)$/;"	f
emit_insns	emit-rtl.c	/^emit_insns (insn)$/;"	f
emit_insns_after	emit-rtl.c	/^emit_insns_after (first, after)$/;"	f
emit_insns_before	emit-rtl.c	/^emit_insns_before (insn, before)$/;"	f
emit_iv_add_mult	loop.c	/^emit_iv_add_mult (b, m, a, reg, insert_before)$/;"	f
emit_jump	stmt.c	/^emit_jump (label)$/;"	f
emit_jump_if_reachable	stmt.c	/^emit_jump_if_reachable (label)$/;"	f	file:
emit_jump_insn	emit-rtl.c	/^emit_jump_insn (pattern)$/;"	f
emit_jump_insn_after	emit-rtl.c	/^emit_jump_insn_after (pattern, after)$/;"	f
emit_jump_insn_before	emit-rtl.c	/^emit_jump_insn_before (pattern, before)$/;"	f
emit_label	emit-rtl.c	/^emit_label (label)$/;"	f
emit_label_after	emit-rtl.c	/^emit_label_after (label, after)$/;"	f
emit_label_before	emit-rtl.c	/^emit_label_before (label, before)$/;"	f
emit_libcall_block	optabs.c	/^emit_libcall_block (insns, target, result, equiv)$/;"	f
emit_library_call	calls.c	/^emit_library_call VPROTO((rtx orgfun, int no_queue, enum machine_mode outmode,$/;"	f
emit_library_call_value	calls.c	/^emit_library_call_value VPROTO((rtx orgfun, rtx value, int no_queue,$/;"	f
emit_line_note	emit-rtl.c	/^emit_line_note (file, line)$/;"	f
emit_line_note_after	emit-rtl.c	/^emit_line_note_after (file, line, after)$/;"	f
emit_line_note_force	emit-rtl.c	/^emit_line_note_force (file, line)$/;"	f
emit_lineno	stmt.c	/^int emit_lineno;$/;"	v
emit_move_insn	expr.c	/^emit_move_insn (x, y)$/;"	f
emit_move_insn_1	expr.c	/^emit_move_insn_1 (x, y)$/;"	f
emit_no_conflict_block	optabs.c	/^emit_no_conflict_block (insns, target, op0, op1, equiv)$/;"	f
emit_nop	stmt.c	/^emit_nop ()$/;"	f
emit_note	emit-rtl.c	/^emit_note (file, line)$/;"	f
emit_note_after	emit-rtl.c	/^emit_note_after (subtype, after)$/;"	f
emit_note_before	emit-rtl.c	/^emit_note_before (subtype, before)$/;"	f
emit_pop_insn	reg-stack.c	/^emit_pop_insn (insn, regstack, reg, when)$/;"	f	file:
emit_push_insn	expr.c	/^emit_push_insn (x, mode, type, size, align, partial, reg, extra,$/;"	f
emit_queue	expr.c	/^emit_queue ()$/;"	f
emit_reload_insns	reload1.c	/^emit_reload_insns (chain)$/;"	f	file:
emit_stack_probe	explow.c	/^emit_stack_probe (address)$/;"	f	file:
emit_stack_restore	explow.c	/^emit_stack_restore (save_level, sa, after)$/;"	f
emit_stack_save	explow.c	/^emit_stack_save (save_level, psave, after)$/;"	f
emit_store_flag	expmed.c	/^emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)$/;"	f
emit_store_flag_force	expmed.c	/^emit_store_flag_force (target, code, op0, op1, mode, unsignedp, normalizep)$/;"	f
emit_swap_insn	reg-stack.c	/^emit_swap_insn (insn, regstack, reg)$/;"	f	file:
emit_throw	except.c	/^emit_throw ()$/;"	f
emit_unop_insn	optabs.c	/^emit_unop_insn (icode, target, op0, code)$/;"	f
emit_unrolled_add	unroll.c	/^emit_unrolled_add (dest_reg, src_reg, increment)$/;"	f
emov	real.c	/^emov (a, b)$/;"	f	file:
emovi	real.c	/^emovi (a, b)$/;"	f	file:
emovo	real.c	/^emovo (a, b)$/;"	f	file:
emovz	real.c	/^emovz (a, b)$/;"	f	file:
emtens	real.c	/^static unsigned EMUSHORT emtens[NTEN + 1][NE] =$/;"	v	file:
emul	real.c	/^emul (a, b, c)$/;"	f	file:
emulm	real.c	/^emulm (a, b)$/;"	f	file:
enan	real.c	/^enan (x, sign)$/;"	f	file:
encode	fold-const.c	/^encode (words, low, hi)$/;"	f	file:
encode_units_mask	genattrtab.c	/^encode_units_mask (x)$/;"	f	file:
end	dwarf2out.c	/^  int end;$/;"	m	struct:reg_size_range
end	reload.c	/^  HOST_WIDE_INT end;	\/* Ending offset or register number.  *\/$/;"	m	struct:decomposition
end_alias_analysis	alias.c	/^end_alias_analysis ()$/;"	f
end_bb	graph.c	/^end_bb (fp, bb)$/;"	f	file:
end_branch_prob	profile.c	/^end_branch_prob (dump_file)$/;"	f
end_catch_handler	except.c	/^end_catch_handler ()$/;"	f
end_cleanup_deferral	stmt.c	/^end_cleanup_deferral ()$/;"	f
end_fct	graph.c	/^end_fct (fp)$/;"	f	file:
end_fde_sort	frame.c	/^end_fde_sort (fde_accumulator *accu, size_t count)$/;"	f	file:
end_file	collect2.c	/^end_file (ptr)$/;"	f	file:
end_final	final.c	/^end_final (filename)$/;"	f
end_label	stmt.c	/^	  rtx end_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
end_luid	loop.c	/^  int start_luid, end_luid;$/;"	m	struct:recombine_givs_stats
end_of_file	c-lex.c	/^static int end_of_file;$/;"	v	file:
end_of_function_label	reorg.c	/^static rtx end_of_function_label;$/;"	v	file:
end_of_function_needs	resource.c	/^static struct resources end_of_function_needs;$/;"	v	file:
end_of_insn_data	genoutput.c	/^struct data *end_of_insn_data;$/;"	v
end_protect_partials	except.c	/^end_protect_partials ()$/;"	f
end_ptr	mips-tfile.c	/^  SYMR		*end_ptr;	\/* symbol pointer to end block *\/$/;"	m	struct:shash
end_sequence	emit-rtl.c	/^end_sequence ()$/;"	f
end_sibling_chain	dwarfout.c	/^end_sibling_chain ()$/;"	f	file:
end_temporary_allocation	tree.c	/^end_temporary_allocation ()$/;"	f
endfile_spec	gcc.c	/^static char *endfile_spec = ENDFILE_SPEC;$/;"	v	file:
endian	enquire.c	/^Procedure endian(bits_per_byte) int bits_per_byte; {$/;"	f
endian	real.c	/^endian (e, x, mode)$/;"	f	file:
endif_label	stmt.c	/^	  rtx endif_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
ends_in_label	c-parse.c	/^	char *filename; int lineno; int ends_in_label; } YYSTYPE;$/;"	m	union:
eneg	real.c	/^eneg (x)$/;"	f	file:
enforce_mode	genrecog.c	/^  char enforce_mode;		\/* If non-zero, test `mode' *\/$/;"	m	struct:decision
enormlz	real.c	/^enormlz (x)$/;"	f	file:
enqueue_eh_entry	except.c	/^enqueue_eh_entry (queue, entry)$/;"	f	file:
enqueue_insn	expr.c	/^enqueue_insn (var, body)$/;"	f	file:
ent	collect2.c	/^  entry_command_t		ent;	\/* program start section *\/$/;"	m	union:load_union
enter_file	cccp.c	/^enum file_change_code {same_file, enter_file, leave_file};$/;"	e	file:	enum:file_change_code
entry_exit_blocks	flow.c	/^struct basic_block_def entry_exit_blocks[2] = $/;"	v
enum_next_value	c-decl.c	/^static tree enum_next_value;$/;"	v	file:
enum_overflow	c-decl.c	/^static int enum_overflow;$/;"	v	file:
enumname	gengenrtl.c	/^  const char *enumname, *name, *format;$/;"	m	struct:rtx_definition
eone	real.c	/^unsigned EMUSHORT eone[NE] =$/;"	v
epi	real.c	/^unsigned EMUSHORT epi[NE] =$/;"	v
epilogue	function.c	/^static int *epilogue;$/;"	v	file:
eprint_string	cccp.c	/^eprint_string (string, length)$/;"	f	file:
eqdf2_libfunc	optabs.c	/^rtx eqdf2_libfunc;$/;"	v
eqhf2_libfunc	optabs.c	/^rtx eqhf2_libfunc;$/;"	v
eqsf2_libfunc	optabs.c	/^rtx eqsf2_libfunc;$/;"	v
eqtf2_libfunc	optabs.c	/^rtx eqtf2_libfunc;$/;"	v
equal	cse.c	/^  int equal, op0lt, op1lt;$/;"	m	struct:cfc_args
equate_decl_number_to_die	dwarf2out.c	/^equate_decl_number_to_die (decl, decl_die)$/;"	f	file:
equate_decl_number_to_die_number	dwarfout.c	/^equate_decl_number_to_die_number (decl)$/;"	f	file:
equate_type_number_to_die	dwarf2out.c	/^equate_type_number_to_die (type, type_die)$/;"	f	file:
equate_type_number_to_die_number	dwarfout.c	/^equate_type_number_to_die_number (type)$/;"	f	file:
equiv_constant	cse.c	/^equiv_constant (x)$/;"	f	file:
equiv_mem	local-alloc.c	/^static rtx equiv_mem;$/;"	v	file:
equiv_mem_modified	local-alloc.c	/^static int equiv_mem_modified;$/;"	v	file:
equivalent	gcc.c	/^  const char *equivalent;$/;"	m	struct:option_map
equot	real.c	/^static unsigned EMUSHORT equot[NI];$/;"	v	file:
eqxf2_libfunc	optabs.c	/^rtx eqxf2_libfunc;$/;"	v
ereal_atof	real.c	/^ereal_atof (s, t)$/;"	f
ereal_cmp	real.c	/^ereal_cmp (x, y)$/;"	f
ereal_from_double	real.c	/^ereal_from_double (d)$/;"	f
ereal_from_float	real.c	/^ereal_from_float (f)$/;"	f
ereal_from_int	real.c	/^ereal_from_int (d, i, j, mode)$/;"	f
ereal_from_uint	real.c	/^ereal_from_uint (d, i, j, mode)$/;"	f
ereal_isneg	real.c	/^ereal_isneg (x)$/;"	f
ereal_ldexp	real.c	/^ereal_ldexp (x, n)$/;"	f
ereal_negate	real.c	/^ereal_negate (x)$/;"	f
ereal_to_decimal	real.c	/^ereal_to_decimal (x, s)$/;"	f
ereal_to_int	real.c	/^ereal_to_int (low, high, rr)$/;"	f
ereal_unto_double	real.c	/^ereal_unto_double (d)$/;"	f
ereal_unto_float	real.c	/^ereal_unto_float (f)$/;"	f
eroot	doschk.c	/^ENT *eroot = 0;$/;"	v
erratic	frame.c	/^  fde_vector erratic;$/;"	m	struct:fde_accumulator
errno_h	fix-header.c	/^  errno_h,$/;"	e	file:	enum:special_file
errno_h	fix-header.c	124;"	d	file:
erroneous	c-typeck.c	/^  char erroneous;$/;"	m	struct:constructor_stack
error	cccp.c	/^error VPROTO ((const char * msgid, ...))$/;"	f
error	cexp.c	/^error VPROTO ((char * msgid, ...))$/;"	f
error	collect2.c	/^error VPROTO((const char * msgid, ...))$/;"	f
error	gcc.c	/^error VPROTO((const char *msgid, ...))$/;"	f	file:
error	genoutput.c	/^error VPROTO ((const char *format, ...))$/;"	f	file:
error	mips-tfile.c	/^error VPROTO((const char *format, ...))$/;"	f
error	toplev.c	/^error VPROTO((const char *msgid, ...))$/;"	f
error_count	gcc.c	/^static int error_count = 0;$/;"	v	file:
error_for_asm	toplev.c	/^error_for_asm VPROTO((rtx insn, const char *msgid, ...))$/;"	f
error_from_errno	cccp.c	/^error_from_errno (name)$/;"	f	file:
error_init	c-typeck.c	/^error_init (msgid)$/;"	f
error_mark_node	c-decl.c	/^tree error_mark_node;$/;"	v
error_with_decl	toplev.c	/^error_with_decl VPROTO((tree decl, const char *msgid, ...))$/;"	f
error_with_file_and_line	toplev.c	/^error_with_file_and_line VPROTO((const char *file, int line,$/;"	f
error_with_line	cccp.c	/^error_with_line VPROTO ((int line, const char * msgid, ...))$/;"	f	file:
errorcount	toplev.c	/^int errorcount = 0;$/;"	v
errors	cccp.c	/^static int errors = 0;			\/* Error counter for exit code *\/$/;"	v	file:
errors	mips-tdump.c	/^int	 errors		= 0;	\/* # of errors *\/$/;"	v
errors	protoize.c	/^static int errors = 0;$/;"	v	file:
eshdn1	real.c	/^eshdn1 (x)$/;"	f	file:
eshdn6	real.c	/^eshdn6 (x)$/;"	f	file:
eshdn8	real.c	/^eshdn8 (x)$/;"	f	file:
eshift	real.c	/^eshift (x, sc)$/;"	f	file:
eshup1	real.c	/^eshup1 (x)$/;"	f	file:
eshup6	real.c	/^eshup6 (x)$/;"	f	file:
eshup8	real.c	/^eshup8 (x)$/;"	f	file:
esqrt2	real.c	/^unsigned EMUSHORT esqrt2[NE] =$/;"	v
estimate_case_costs	stmt.c	/^estimate_case_costs (node)$/;"	f	file:
esub	real.c	/^esub (a, b, c)$/;"	f	file:
esubm	real.c	/^esubm (x, y)$/;"	f	file:
esym	mips-tfile.c	/^  EXTR		esym	[ PAGE_SIZE \/ sizeof (EXTR)	 ];$/;"	m	union:page
esym_ptr	mips-tfile.c	/^  EXTR		*esym_ptr;	\/* global symbol pointer *\/$/;"	m	struct:shash
etardouble	real.c	/^etardouble (r, l)$/;"	f
etarldouble	real.c	/^etarldouble (r, l)$/;"	f
etarsingle	real.c	/^etarsingle (r)$/;"	f
etartdouble	real.c	/^etartdouble (r, l)$/;"	f
etens	real.c	/^static unsigned EMUSHORT etens[NTEN + 1][NE] =$/;"	v	file:
etoasc	real.c	/^etoasc (x, string, ndigs)$/;"	f	file:
etoc4x	real.c	/^etoc4x (x, d, mode)$/;"	f	file:
etodec	real.c	/^etodec (x, d)$/;"	f	file:
etoe113	real.c	/^etoe113 (x, e)$/;"	f	file:
etoe24	real.c	/^etoe24 (x, e)$/;"	f	file:
etoe53	real.c	/^etoe53 (x, e)$/;"	f	file:
etoe64	real.c	/^etoe64 (x, e)$/;"	f	file:
etoibm	real.c	/^etoibm (x, d, mode)$/;"	f	file:
etrunci	real.c	/^etrunci (x)$/;"	f
etruncui	real.c	/^etruncui (x)$/;"	f
etwo	real.c	/^unsigned EMUSHORT etwo[NE] =$/;"	v
euifrac	real.c	/^euifrac (x, i, frac)$/;"	f	file:
eval_if_expression	cccp.c	/^eval_if_expression (buf, length)$/;"	f	file:
eval_if_expression	cpplib.c	/^eval_if_expression (pfile)$/;"	f	file:
eval_subst	fold-const.c	/^eval_subst (arg, old0, new0, old1, new1)$/;"	f	file:
evaluate_eq_attr	genattrtab.c	/^evaluate_eq_attr (exp, value, insn_code, insn_index)$/;"	f	file:
exact_log2_wide	toplev.c	/^exact_log2_wide (x)$/;"	f
exact_real_inverse	fold-const.c	/^exact_real_inverse (mode, r)$/;"	f
exact_real_inverse	real.c	/^exact_real_inverse (mode, r)$/;"	f
exception_handler_labels	except.c	/^rtx exception_handler_labels;$/;"	v
exception_optimize	except.c	/^exception_optimize ()$/;"	f
exception_region	stmt.c	/^	  int exception_region;$/;"	m	struct:nesting::<anonymous>::<anonymous>
exception_section	varasm.c	/^exception_section ()$/;"	f
exception_table_p	except.c	/^exception_table_p ()$/;"	f
exceptions_via_longjmp	except.c	/^int exceptions_via_longjmp = 2;$/;"	v
exclude_list	protoize.c	/^struct string_list *exclude_list;$/;"	v
exec_count	gcov.c	/^  int exec_count;$/;"	m	struct:bb_info
exec_count	profile.c	/^  int exec_count;$/;"	m	struct:bb_info
exec_prefixes	gcc.c	/^static struct path_prefix exec_prefixes = { 0, 0, "exec" };$/;"	v	file:
execute	gcc.c	/^execute ()$/;"	f	file:
execute_cfa_insn	frame.c	/^execute_cfa_insn (void *p, struct frame_state_internal *state,$/;"	f	file:
execution_count	gcc.c	/^static int execution_count;$/;"	v	file:
exit	gcc.c	43;"	d	file:
exit	libgcc2.c	/^exit (int status)$/;"	f
exit_label	stmt.c	/^  rtx exit_label;$/;"	m	struct:nesting
exp	cse.c	/^  rtx exp;$/;"	m	struct:table_elt
exp	varasm.c	/^  tree exp;$/;"	m	struct:deferred_constant
exp_equiv_p	cse.c	/^exp_equiv_p (x, y, validate, equal_values)$/;"	f	file:
expand_abs	optabs.c	/^expand_abs (mode, op0, target, safe)$/;"	f
expand_and	expmed.c	/^expand_and (op0, op1, target)$/;"	f
expand_anon_union_decl	stmt.c	/^expand_anon_union_decl (decl, cleanup, decl_elts)$/;"	f
expand_asm	stmt.c	/^expand_asm (body)$/;"	f
expand_asm_operands	stmt.c	/^expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)$/;"	f
expand_assignment	expr.c	/^expand_assignment (to, from, want_value, suggest_reg)$/;"	f
expand_binop	optabs.c	/^expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)$/;"	f
expand_builtin	expr.c	/^expand_builtin (exp, target, subtarget, mode, ignore)$/;"	f	file:
expand_builtin_apply	expr.c	/^expand_builtin_apply (function, arguments, argsize)$/;"	f	file:
expand_builtin_apply_args	expr.c	/^expand_builtin_apply_args ()$/;"	f	file:
expand_builtin_dwarf_fp_regnum	dwarf2out.c	/^expand_builtin_dwarf_fp_regnum ()$/;"	f
expand_builtin_dwarf_reg_size	dwarf2out.c	/^expand_builtin_dwarf_reg_size (reg_tree, target)$/;"	f
expand_builtin_eh_return	except.c	/^expand_builtin_eh_return (context, stack, handler)$/;"	f
expand_builtin_extract_return_addr	except.c	/^expand_builtin_extract_return_addr (addr_tree)$/;"	f
expand_builtin_frob_return_addr	except.c	/^expand_builtin_frob_return_addr (addr_tree)$/;"	f
expand_builtin_longjmp	expr.c	/^expand_builtin_longjmp (buf_addr, value)$/;"	f
expand_builtin_return	expr.c	/^expand_builtin_return (result)$/;"	f	file:
expand_builtin_return_addr	expr.c	/^expand_builtin_return_addr (fndecl_code, count, tem)$/;"	f
expand_builtin_setjmp	expr.c	/^expand_builtin_setjmp (buf_addr, target, first_label, next_label)$/;"	f
expand_builtin_unwind_init	except.c	/^expand_builtin_unwind_init ()$/;"	f
expand_call	calls.c	/^expand_call (exp, target, ignore)$/;"	f
expand_cleanups	stmt.c	/^expand_cleanups (list, dont_do, in_fixup, reachable)$/;"	f	file:
expand_cmplxdiv_straight	optabs.c	/^expand_cmplxdiv_straight (real0, real1, imag0, imag1, realr, imagr, submode,$/;"	f	file:
expand_cmplxdiv_wide	optabs.c	/^expand_cmplxdiv_wide (real0, real1, imag0, imag1, realr, imagr, submode,$/;"	f	file:
expand_complex_abs	optabs.c	/^expand_complex_abs (mode, op0, target, unsignedp)$/;"	f
expand_compound_operation	combine.c	/^expand_compound_operation (x)$/;"	f	file:
expand_computed_goto	stmt.c	/^expand_computed_goto (exp)$/;"	f
expand_continue_loop	stmt.c	/^expand_continue_loop (whichloop)$/;"	f
expand_dcc_cleanup	stmt.c	/^expand_dcc_cleanup (decl)$/;"	f
expand_dec	expmed.c	/^expand_dec (target, dec)$/;"	f
expand_decl	stmt.c	/^expand_decl (decl)$/;"	f
expand_decl_cleanup	stmt.c	/^expand_decl_cleanup (decl, cleanup)$/;"	f
expand_decl_cleanup_no_eh	stmt.c	/^expand_decl_cleanup_no_eh (decl, cleanup)$/;"	f
expand_decl_init	stmt.c	/^expand_decl_init (decl)$/;"	f
expand_delays	genattrtab.c	/^expand_delays ()$/;"	f	file:
expand_dhc_cleanup	stmt.c	/^expand_dhc_cleanup (decl)$/;"	f
expand_divmod	expmed.c	/^expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)$/;"	f
expand_eh_region_end	except.c	/^expand_eh_region_end (handler)$/;"	f
expand_eh_region_start	except.c	/^expand_eh_region_start ()$/;"	f
expand_eh_region_start_for_decl	except.c	/^expand_eh_region_start_for_decl (decl)$/;"	f
expand_eh_region_start_tree	except.c	/^expand_eh_region_start_tree (decl, cleanup)$/;"	f
expand_eh_return	except.c	/^expand_eh_return ()$/;"	f
expand_elseif	stmt.c	/^expand_elseif (cond)$/;"	f
expand_end_all_catch	except.c	/^expand_end_all_catch ()$/;"	f
expand_end_bindings	stmt.c	/^expand_end_bindings (vars, mark_ends, dont_jump_in)$/;"	f
expand_end_case	stmt.c	/^expand_end_case (orig_index)$/;"	f
expand_end_case_dummy	stmt.c	/^expand_end_case_dummy ()$/;"	f
expand_end_cond	stmt.c	/^expand_end_cond ()$/;"	f
expand_end_loop	stmt.c	/^expand_end_loop ()$/;"	f
expand_end_stmt_expr	stmt.c	/^expand_end_stmt_expr (t)$/;"	f
expand_end_target_temps	stmt.c	/^expand_end_target_temps ()$/;"	f
expand_exit_loop	stmt.c	/^expand_exit_loop (whichloop)$/;"	f
expand_exit_loop_if_false	stmt.c	/^expand_exit_loop_if_false (whichloop, cond)$/;"	f
expand_exit_something	stmt.c	/^expand_exit_something ()$/;"	f
expand_expr	expr.c	/^expand_expr (exp, target, tmode, modifier)$/;"	f
expand_expr_stmt	stmt.c	/^expand_expr_stmt (exp)$/;"	f
expand_field_assignment	combine.c	/^expand_field_assignment (x)$/;"	f	file:
expand_fix	optabs.c	/^expand_fix (to, from, unsignedp)$/;"	f
expand_fixup	stmt.c	/^expand_fixup (tree_label, rtl_label, last_insn)$/;"	f	file:
expand_fixup_region_end	except.c	/^expand_fixup_region_end (cleanup)$/;"	f
expand_fixup_region_start	except.c	/^expand_fixup_region_start ()$/;"	f
expand_fixups	stmt.c	/^expand_fixups (first_insn)$/;"	f
expand_float	optabs.c	/^expand_float (to, from, unsignedp)$/;"	f
expand_function_end	function.c	/^expand_function_end (filename, line, end_bindings)$/;"	f
expand_function_start	function.c	/^expand_function_start (subr, parms_have_cleanups)$/;"	f
expand_goto	stmt.c	/^expand_goto (label)$/;"	f
expand_goto_internal	stmt.c	/^expand_goto_internal (body, label, last_insn)$/;"	f	file:
expand_inc	expmed.c	/^expand_inc (target, inc)$/;"	f
expand_increment	expr.c	/^expand_increment (exp, post, ignore)$/;"	f	file:
expand_inline_function	integrate.c	/^expand_inline_function (fndecl, parms, target, ignore, type,$/;"	f
expand_inline_function_eh_labelmap	integrate.c	/^expand_inline_function_eh_labelmap (label)$/;"	f	file:
expand_internal_throw	except.c	/^expand_internal_throw ()$/;"	f
expand_label	stmt.c	/^expand_label (label)$/;"	f
expand_leftover_cleanups	except.c	/^expand_leftover_cleanups ()$/;"	f
expand_length	cccp.c	/^  int raw_length, expand_length;$/;"	m	struct:argdata
expand_length	cpphash.c	/^  int raw_length, expand_length;$/;"	m	struct:argdata
expand_loop_continue_here	stmt.c	/^expand_loop_continue_here ()$/;"	f
expand_main_function	function.c	/^expand_main_function ()$/;"	f
expand_mult	expmed.c	/^expand_mult (mode, op0, op1, target, unsignedp)$/;"	f
expand_mult_add	expmed.c	/^expand_mult_add (x, target, mult, add, mode, unsignedp)$/;"	f
expand_mult_highpart	expmed.c	/^expand_mult_highpart (mode, op0, cnst1, target, unsignedp, max_cost)$/;"	f
expand_mult_highpart_adjust	expmed.c	/^expand_mult_highpart_adjust (mode, adj_operand, op0, op1, target, unsignedp)$/;"	f
expand_nl_goto_receiver	stmt.c	/^expand_nl_goto_receiver ()$/;"	f	file:
expand_nl_goto_receivers	stmt.c	/^expand_nl_goto_receivers (thisblock)$/;"	f	file:
expand_nl_handler_label	stmt.c	/^expand_nl_handler_label (slot, before_insn)$/;"	f	file:
expand_null_return	stmt.c	/^expand_null_return ()$/;"	f
expand_null_return_1	stmt.c	/^expand_null_return_1 (last_insn, use_goto)$/;"	f	file:
expand_preferences	global.c	/^expand_preferences ()$/;"	f	file:
expand_rethrow	except.c	/^expand_rethrow (label)$/;"	f	file:
expand_return	stmt.c	/^expand_return (retval)$/;"	f
expand_shift	expmed.c	/^expand_shift (code, mode, shifted, amount, target, unsignedp)$/;"	f
expand_spanning_tree	profile.c	/^expand_spanning_tree (block)$/;"	f	file:
expand_start_all_catch	except.c	/^expand_start_all_catch ()$/;"	f
expand_start_bindings	stmt.c	/^expand_start_bindings (exit_flag)$/;"	f
expand_start_case	stmt.c	/^expand_start_case (exit_flag, expr, type, printname)$/;"	f
expand_start_case_dummy	stmt.c	/^expand_start_case_dummy ()$/;"	f
expand_start_cond	stmt.c	/^expand_start_cond (cond, exitflag)$/;"	f
expand_start_else	stmt.c	/^expand_start_else ()$/;"	f
expand_start_elseif	stmt.c	/^expand_start_elseif (cond)$/;"	f
expand_start_loop	stmt.c	/^expand_start_loop (exit_flag)$/;"	f
expand_start_loop_continue_elsewhere	stmt.c	/^expand_start_loop_continue_elsewhere (exit_flag)$/;"	f
expand_start_stmt_expr	stmt.c	/^expand_start_stmt_expr ()$/;"	f
expand_start_target_temps	stmt.c	/^expand_start_target_temps ()$/;"	f
expand_start_try_stmts	except.c	/^expand_start_try_stmts ()$/;"	f
expand_stmt_with_iterators_1	c-iterate.c	/^expand_stmt_with_iterators_1 (stmt, iter_list)$/;"	f	file:
expand_to_temp_buffer	cccp.c	/^expand_to_temp_buffer (buf, limit, output_marks, assertions)$/;"	f	file:
expand_twoval_binop	optabs.c	/^expand_twoval_binop (binoptab, op0, op1, targ0, targ1, unsignedp)$/;"	f
expand_units	genattrtab.c	/^expand_units ()$/;"	f	file:
expand_unop	optabs.c	/^expand_unop (mode, unoptab, op0, target, unsignedp)$/;"	f
expand_value_return	stmt.c	/^expand_value_return (val)$/;"	f	file:
expanded	cccp.c	/^  U_CHAR *raw, *expanded;$/;"	m	struct:argdata
expanded	cpphash.c	/^  long raw, expanded, stringified;$/;"	m	struct:argdata
expanded	protoize.c	/^  const char *expanded;$/;"	m	struct:unexpansion_struct
expansion	cccp.c	/^  U_CHAR *expansion;$/;"	m	struct:definition
explicit_flag_signed_bitfields	c-decl.c	/^int explicit_flag_signed_bitfields = 0;$/;"	v
explicit_inc_from	expr.c	/^  int explicit_inc_from;$/;"	m	struct:move_by_pieces
explicit_inc_to	expr.c	/^  int explicit_inc_to;$/;"	m	struct:clear_by_pieces
explicit_inc_to	expr.c	/^  int explicit_inc_to;$/;"	m	struct:move_by_pieces
exponent	enquire.c	/^int exponent(x, fract, exp) Long_double x; double *fract; int *exp; {$/;"	f
export_file	collect2.c	/^static char *export_file;	        \/* <xxx>.x for AIX export list.  *\/$/;"	v	file:
export_flag	collect2.c	/^static int export_flag;                 \/* true if -bE *\/$/;"	v	file:
exports	collect2.c	/^static struct head exports;		\/* list of exported symbols *\/$/;"	v	file:
expr	gcse.c	/^  rtx expr;$/;"	m	struct:expr
expr	gcse.c	/^struct expr$/;"	s	file:
expr_check	tree.c	/^expr_check (node, ignored, file, line, nofatal)$/;"	f
expr_equiv_p	gcse.c	/^expr_equiv_p (x, y)$/;"	f	file:
expr_hash_table	gcse.c	/^static struct expr **expr_hash_table;$/;"	v	file:
expr_hash_table_size	gcse.c	/^static int expr_hash_table_size;$/;"	v	file:
expr_killed_p	gcse.c	/^expr_killed_p (x, bb)$/;"	f	file:
expr_reaches_here_p	gcse.c	/^expr_reaches_here_p (occr, expr, bb, check_self_loop, visited)$/;"	f	file:
expr_size	explow.c	/^expr_size (exp)$/;"	f
expr_stmts_for_value	stmt.c	/^int expr_stmts_for_value;$/;"	v
expr_tree_cons	tree.c	/^expr_tree_cons (purpose, value, chain)$/;"	f
expralloc	tree.c	/^expralloc (size)$/;"	f
express_from	loop.c	/^express_from (g1, g2)$/;"	f
express_from_1	loop.c	/^express_from_1 (a, b, mult)$/;"	f	file:
expression	tree.c	/^  struct obstack *expression;$/;"	m	struct:obstack_stack
expression_obstack	tree.c	/^struct obstack *expression_obstack;$/;"	v
expression_signedp	cexp.c	/^static int expression_signedp;$/;"	v	file:
expression_value	cexp.c	/^static HOST_WIDEST_INT expression_value;$/;"	v	file:
expunge_block	flow.c	/^expunge_block (b)$/;"	f	file:
ext_str_hash	mips-tfile.c	/^static shash_t	*ext_str_hash [SHASH_SIZE];$/;"	v	file:
ext_strings	mips-tfile.c	/^static varray_t ext_strings	= INIT_VARRAY (char);$/;"	v	file:
ext_symbols	mips-tfile.c	/^static varray_t ext_symbols	= INIT_VARRAY (EXTR);$/;"	v	file:
extend_range	genattr.c	/^extend_range (range, min, max)$/;"	f	file:
extend_range	genattrtab.c	/^extend_range (range, min, max)$/;"	f	file:
extend_token_buffer	c-lex.c	/^extend_token_buffer (p)$/;"	f	file:
extenddftf2_libfunc	optabs.c	/^rtx extenddftf2_libfunc;$/;"	v
extenddfxf2_libfunc	optabs.c	/^rtx extenddfxf2_libfunc;$/;"	v
extended_count	combine.c	/^extended_count (x, mode, unsignedp)$/;"	f
extendsfdf2_libfunc	optabs.c	/^rtx extendsfdf2_libfunc;$/;"	v
extendsftf2_libfunc	optabs.c	/^rtx extendsftf2_libfunc;$/;"	v
extendsfxf2_libfunc	optabs.c	/^rtx extendsfxf2_libfunc;$/;"	v
extendtab	optabs.c	/^enum insn_code extendtab[MAX_MACHINE_MODE][MAX_MACHINE_MODE][2];$/;"	v
extern_C_braces	scan-decls.c	/^char extern_C_braces[20];$/;"	v
extern_C_braces_length	scan-decls.c	/^int extern_C_braces_length = 0;$/;"	v
extern_inline	c-decl.c	/^  int extern_inline;$/;"	m	struct:c_function
external_p	halfpic.c	/^  int		   external_p;	\/* name is an external reference *\/$/;"	m	struct:all_refs
extra_inline_obstacks	tree.c	/^struct simple_obstack_stack *extra_inline_obstacks;$/;"	v
extra_sizes	mips-tfile.c	/^  int	      extra_sizes;		\/* # extra sizes not tied with dims *\/$/;"	m	struct:type_info
extra_specs	gcc.c	/^static struct spec_list * extra_specs = (struct spec_list *)0;$/;"	v	file:
extra_specs_1	gcc.c	/^static struct spec_list_1 extra_specs_1[] = { EXTRA_SPECS };$/;"	v	file:
extra_warnings	toplev.c	/^int extra_warnings = 0;$/;"	v
extract_bit_field	expmed.c	/^extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,$/;"	f
extract_bitlst	haifa-sched.c	/^extract_bitlst (set, len, bl)$/;"	f	file:
extract_cie_info	frame.c	/^extract_cie_info (fde *f, struct cie_info *c)$/;"	f	file:
extract_fixed_bit_field	expmed.c	/^extract_fixed_bit_field (tmode, op0, offset, bitsize, bitpos,$/;"	f	file:
extract_init_priority	collect2.c	/^extract_init_priority (name)$/;"	f	file:
extract_insn	recog.c	/^extract_insn (insn)$/;"	f
extract_left_shift	combine.c	/^extract_left_shift (x, count)$/;"	f	file:
extract_split_bit_field	expmed.c	/^extract_split_bit_field (op0, bitsize, bitpos, unsignedp, align)$/;"	f	file:
extract_string	collect2.c	/^extract_string (pp)$/;"	f	file:
extraction	genextract.c	/^struct extraction$/;"	s	file:
extractions	genextract.c	/^static struct extraction *extractions;$/;"	v	file:
ezero	real.c	/^unsigned EMUSHORT ezero[NE] =$/;"	v
f	floatlib.c	/^    float f;$/;"	m	union:float_long
f	libgcc1.c	/^union flt_or_int { int i; float f; };$/;"	m	union:flt_or_int
f	libgcc1.c	/^union flt_or_value { FLOAT_VALUE_TYPE i; float f; };$/;"	m	union:flt_or_value
f1	fp-test.c	/^volatile float f1 = 1.0, f2 = 1.0, f3 = 1.0;$/;"	v
f2	fp-test.c	/^volatile float f1 = 1.0, f2 = 1.0, f3 = 1.0;$/;"	v
f3	fp-test.c	/^volatile float f1 = 1.0, f2 = 1.0, f3 = 1.0;$/;"	v
f_define	enquire.c	/^Procedure f_define(desc, extra, sort, name, precision, val, req, mark)$/;"	f
f_forward	mips-tfile.c	/^  forward_t	*f_forward;	\/* forward tag reference *\/$/;"	m	union:small_free
f_list_chain	protoize.c	/^  const f_list_chain_item * f_list_chain;	\/* -> chain of formals lists *\/$/;"	m	struct:def_dec_info_struct
f_list_chain_item	protoize.c	/^typedef struct f_list_chain_item_struct f_list_chain_item;$/;"	t	file:
f_list_chain_item_struct	protoize.c	/^struct f_list_chain_item_struct {$/;"	s	file:
f_list_count	protoize.c	/^  unsigned int		f_list_count;	\/* count of formals lists we expect *\/$/;"	m	struct:def_dec_info_struct
f_options	toplev.c	/^lang_independent_options f_options[] =$/;"	v
f_rep	enquire.c	/^char *f_rep(precision, val) int precision; Long_double val; {$/;"	f
f_scope	mips-tfile.c	/^  scope_t	*f_scope;	\/* scope structure *\/$/;"	m	union:small_free
f_tag	mips-tfile.c	/^  tag_t		*f_tag;		\/* tag element structure *\/$/;"	m	union:small_free
f_thead	mips-tfile.c	/^  thead_t	*f_thead;	\/* tag head structure *\/$/;"	m	union:small_free
fabs	enquire.c	439;"	d	file:
factor	unroll.c	/^struct _factor { int factor, count; } factors[NUM_FACTORS]$/;"	m	struct:_factor
factors	unroll.c	/^struct _factor { int factor, count; } factors[NUM_FACTORS]$/;"	v
failure	reload1.c	/^static int failure;$/;"	v	file:
failure_delete_queue	gcc.c	/^static struct temp_file *failure_delete_queue;$/;"	v	file:
fake	gcov.c	/^  unsigned int fake : 1;$/;"	m	struct:adj_list
fake	profile.c	/^  unsigned int fake : 1;$/;"	m	struct:adj_list
fake_containing_scope	dwarfout.c	/^static tree fake_containing_scope;$/;"	v	file:
fake_f_rep	enquire.c	/^char *fake_f_rep(type, val) char *type; Long_double val; {$/;"	f
fall_through	gcov.c	/^  unsigned int fall_through : 1;$/;"	m	struct:adj_list
fall_through	profile.c	/^  unsigned int fall_through : 1;$/;"	m	struct:adj_list
false	enquire.c	/^int false() { return 0; }$/;"	f
false_label_stack	except.c	/^struct label_node *false_label_stack = NULL;$/;"	v
false_rtx	genattrtab.c	/^static rtx true_rtx, false_rtx;$/;"	v	file:
fancy_abort	cccp.c	/^fancy_abort ()$/;"	f
fancy_abort	collect2.c	/^fancy_abort ()$/;"	f
fancy_abort	gcc.c	/^fancy_abort ()$/;"	f
fancy_abort	gcov.c	/^fancy_abort ()$/;"	f
fancy_abort	genattr.c	/^fancy_abort ()$/;"	f
fancy_abort	genattrtab.c	/^fancy_abort ()$/;"	f
fancy_abort	gencodes.c	/^fancy_abort ()$/;"	f
fancy_abort	genconfig.c	/^fancy_abort ()$/;"	f
fancy_abort	genemit.c	/^fancy_abort ()$/;"	f
fancy_abort	genextract.c	/^fancy_abort ()$/;"	f
fancy_abort	genflags.c	/^fancy_abort ()$/;"	f
fancy_abort	genopinit.c	/^fancy_abort ()$/;"	f
fancy_abort	genoutput.c	/^fancy_abort ()$/;"	f
fancy_abort	genpeep.c	/^fancy_abort ()$/;"	f
fancy_abort	genrecog.c	/^fancy_abort ()$/;"	f
fancy_abort	mips-tdump.c	/^fancy_abort ()$/;"	f
fancy_abort	mips-tfile.c	/^fancy_abort ()$/;"	f
fancy_abort	protoize.c	/^fancy_abort ()$/;"	f
fancy_abort	toplev.c	/^fancy_abort ()$/;"	f
farewell	enquire.c	/^Procedure farewell(bugs) int bugs; {$/;"	f
fatal	cccp.c	/^fatal VPROTO ((const char * msgid, ...))$/;"	f
fatal	collect2.c	/^fatal VPROTO((const char * msgid, ...))$/;"	f
fatal	fix-header.c	/^fatal VPROTO ((const char *str, ...))$/;"	f
fatal	gcc.c	/^fatal VPROTO((const char *msgid, ...))$/;"	f
fatal	genattr.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genattrtab.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	gencodes.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genconfig.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genemit.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genextract.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genflags.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genopinit.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genoutput.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genpeep.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	genrecog.c	/^fatal VPROTO ((const char *format, ...))$/;"	f
fatal	mips-tdump.c	/^fatal(s)$/;"	f	file:
fatal	mips-tfile.c	/^fatal VPROTO((const char *format, ...))$/;"	f
fatal	toplev.c	/^fatal VPROTO((const char *msgid, ...))$/;"	f
fatal_error	gcc.c	/^fatal_error (signum)$/;"	f	file:
fatal_insn	toplev.c	/^fatal_insn VPROTO((const char *msgid, rtx insn, ...))$/;"	f
fatal_insn_not_found	toplev.c	/^fatal_insn_not_found (insn)$/;"	f
fatal_io_error	toplev.c	/^fatal_io_error (name)$/;"	f
fatal_perror	collect2.c	/^fatal_perror VPROTO((const char * msgid, ...))$/;"	f
fc_args	fold-const.c	/^struct fc_args$/;"	s	file:
fchecktype	enquire.c	1118;"	d	file:
fd	collect2.c	/^  int	fd;				\/* file descriptor *\/$/;"	m	struct:file_info
fde	frame.c	/^typedef struct dwarf_fde fde;$/;"	t	file:
fde_accumulator	frame.c	/^typedef struct fde_accumulator$/;"	s	file:
fde_accumulator	frame.c	/^} fde_accumulator;$/;"	t	file:
fde_compare	frame.c	/^fde_compare (fde *x, fde *y)$/;"	f	file:
fde_insert	frame.c	/^fde_insert (fde_accumulator *accu, fde *this_fde)$/;"	f	file:
fde_merge	frame.c	/^fde_merge (fde_vector *v1, const fde_vector *v2)$/;"	f	file:
fde_split	frame.c	/^fde_split (fde_vector *linear, fde_vector *erratic)$/;"	f	file:
fde_table	dwarf2out.c	/^static dw_fde_ref fde_table;$/;"	v	file:
fde_table_allocated	dwarf2out.c	/^static unsigned fde_table_allocated;$/;"	v	file:
fde_table_in_use	dwarf2out.c	/^static unsigned fde_table_in_use;$/;"	v	file:
fde_vector	frame.c	/^typedef struct fde_vector$/;"	s	file:
fde_vector	frame.c	/^} fde_vector;$/;"	t	file:
fdr	mips-tfile.c	/^  FDR		 fdr;		\/* File header to be written out *\/$/;"	m	struct:efdr
fed_by_spec_load	haifa-sched.c	/^char *fed_by_spec_load;$/;"	v
ffs_optab	optabs.c	/^optab ffs_optab;$/;"	v
field_byte_offset	dwarf2out.c	/^field_byte_offset (decl)$/;"	f	file:
field_byte_offset	dwarfout.c	/^field_byte_offset (decl)$/;"	f	file:
field_decl_cmp	c-decl.c	/^field_decl_cmp (xp, yp)$/;"	f	file:
field_type	dwarf2out.c	/^field_type (decl)$/;"	f	file:
field_type	dwarfout.c	/^field_type (decl)$/;"	f	file:
fields	c-typeck.c	/^  tree fields;$/;"	m	struct:constructor_stack
file	c-common.c	/^  const char *file;$/;"	m	struct:
file	cccp.c	/^  char *file;			\/* File of definition *\/$/;"	m	struct:definition
file	mips-tfile.c	/^  efdr_t	file	[ PAGE_SIZE \/ sizeof (efdr_t)	 ];$/;"	m	union:page
file	protoize.c	/^  file_info *        	file;		\/* -> file_info for containing file *\/$/;"	m	struct:def_dec_info_struct
file	tlink.c	/^  struct file_hash_entry *file;$/;"	m	struct:symbol_hash_entry
file	tlink.c	/^} file;$/;"	t	file:
file_and_line_for_asm	toplev.c	/^file_and_line_for_asm (insn, pfile, pline)$/;"	f	file:
file_buf	cccp.c	/^static struct file_buf {$/;"	s	file:
file_change_code	cccp.c	/^enum file_change_code {same_file, enter_file, leave_file};$/;"	g	file:
file_cleanup	cppfiles.c	/^file_cleanup (pbuf, pfile)$/;"	f	file:
file_desc	mips-tdump.c	/^FDR	*file_desc;		\/* file tables *\/$/;"	v
file_desc	mips-tfile.c	/^static varray_t file_desc	= INIT_VARRAY (efdr_t);$/;"	v	file:
file_excluded_p	protoize.c	/^file_excluded_p (name)$/;"	f	file:
file_exists	collect2.c	/^file_exists (name)$/;"	f
file_hash_entry	tlink.c	/^typedef struct file_hash_entry$/;"	s	file:
file_hash_lookup	tlink.c	/^file_hash_lookup (string)$/;"	f	file:
file_hash_newfunc	tlink.c	/^file_hash_newfunc (entry, table, string)$/;"	f	file:
file_index	mips-tfile.c	/^  symint_t	 file_index;	\/* current file number *\/$/;"	m	struct:efdr
file_info	collect2.c	/^struct file_info$/;"	s	file:
file_info	protoize.c	/^typedef struct file_info_struct file_info;$/;"	t	file:
file_info_struct	protoize.c	/^struct file_info_struct {$/;"	s	file:
file_label_num	final.c	/^  int file_label_num;		\/* LPBC<n> label # for stored filename *\/$/;"	m	struct:bb_list
file_len	cccp.c	/^  size_t file_len;		\/* Length of file (which can contain NULs) *\/$/;"	m	struct:definition
file_name_list	cccp.c	/^struct file_name_list$/;"	s	file:
file_name_map	cccp.c	/^struct file_name_map$/;"	s	file:
file_name_map	cppfiles.c	/^struct file_name_map$/;"	s	file:
file_name_map_list	cppfiles.c	/^struct file_name_map_list$/;"	s	file:
file_number	dbxout.c	/^  int file_number;$/;"	m	struct:dbx_file
file_number	dbxout.c	/^  int file_number;$/;"	m	struct:typeinfo
file_offset	mips-tfile.c	/^static long	file_offset	= 0;		\/* current file offset *\/$/;"	v	file:
file_pop	tlink.c	/^file_pop ()$/;"	f	file:
file_push	tlink.c	/^file_push (p)$/;"	f	file:
file_stack	tlink.c	/^struct file_stack_entry *file_stack;$/;"	v
file_stack_entry	tlink.c	/^struct file_stack_entry$/;"	s	file:
file_stack_obstack	tlink.c	/^struct obstack file_stack_obstack;$/;"	v
file_table	dwarf2out.c	/^static char **file_table;$/;"	v	file:
file_table	tlink.c	/^static struct hash_table file_table;$/;"	v	file:
file_table_allocated	dwarf2out.c	/^static unsigned file_table_allocated;$/;"	v	file:
file_table_in_use	dwarf2out.c	/^static unsigned file_table_in_use;$/;"	v	file:
filename	c-parse.c	/^	char *filename; int lineno; int ends_in_label; } YYSTYPE;$/;"	m	union:
filename	gcc.c	/^  const char *filename;	\/* associated filename.  *\/$/;"	m	struct:temp_name
filename	gcc.c	/^  const char *filename;$/;"	m	struct:user_specs
filename	libgcc2.c	/^  char *filename;$/;"	m	struct:bb_func
filename	libgcc2.c	/^  const char *filename;$/;"	m	struct:bb
filename_entry	dwarfout.c	/^struct filename_entry {$/;"	s	file:
filename_entry	dwarfout.c	/^typedef struct filename_entry filename_entry;$/;"	t	file:
filename_length	gcc.c	/^  int filename_length;	\/* strlen (filename).  *\/$/;"	m	struct:temp_name
filename_primary	protoize.c	/^static hash_table filename_primary;$/;"	v	file:
filename_table	dwarfout.c	/^static filename_entry *filename_table;$/;"	v	file:
filenames	libgcc2.c	/^  const char **filenames;$/;"	m	struct:bb
files_to_ignore	fix-header.c	/^static char *files_to_ignore[] = {$/;"	v	file:
fill_attr	genattrtab.c	/^fill_attr (attr)$/;"	f	file:
fill_eager_delay_slots	reorg.c	/^fill_eager_delay_slots ()$/;"	f	file:
fill_ent	doschk.c	/^fill_ent (ent, path)$/;"	f
fill_simple_delay_slots	reorg.c	/^fill_simple_delay_slots (non_jumps_p)$/;"	f	file:
fill_slots_from_thread	reorg.c	/^fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,$/;"	f	file:
fill_spanning_tree	profile.c	/^fill_spanning_tree (block)$/;"	f	file:
final	final.c	/^final (first, file, optimize, prescan)$/;"	f
final_addr_vec_align	final.c	/^final_addr_vec_align (addr_vec)$/;"	f
final_biv_value	unroll.c	/^final_biv_value (bl, loop_start, loop_end, n_iterations)$/;"	f
final_end_function	final.c	/^final_end_function (first, file, optimize)$/;"	f
final_giv_value	unroll.c	/^final_giv_value (v, loop_start, loop_end, n_iterations)$/;"	f
final_reg_note_copy	unroll.c	/^final_reg_note_copy (notes, map)$/;"	f	file:
final_rethrow	except.c	/^static rtx final_rethrow = NULL_RTX;$/;"	v	file:
final_scan_insn	final.c	/^final_scan_insn (insn, file, optimize, prescan, nopeepholes)$/;"	f
final_sequence	final.c	/^rtx final_sequence;$/;"	v
final_start_function	final.c	/^final_start_function (first, file, optimize)$/;"	f
final_time	toplev.c	/^int final_time;$/;"	v
finalize_must_preallocate	calls.c	/^finalize_must_preallocate (must_preallocate, num_actuals, args, args_size)$/;"	f	file:
finalizing	dwarfout.c	/^static int finalizing = 0;$/;"	v	file:
finclude	cccp.c	/^finclude (f, inc, op, system_header_p, dirptr)$/;"	f	file:
finclude	cppfiles.c	/^finclude (pfile, fd, ihash)$/;"	f
find_a_file	collect2.c	/^find_a_file (pprefix, name)$/;"	f	file:
find_a_file	gcc.c	/^find_a_file (pprefix, name, mode)$/;"	f	file:
find_all_handler_type_matches	except.c	/^find_all_handler_type_matches (array)$/;"	f
find_and_mark_used_attributes	genattrtab.c	/^find_and_mark_used_attributes (exp, terms, nterms)$/;"	f	file:
find_and_verify_loops	loop.c	/^find_and_verify_loops (f)$/;"	f	file:
find_attr	genattrtab.c	/^find_attr (name, create)$/;"	f	file:
find_auto_inc	flow.c	/^find_auto_inc (needed, x, insn)$/;"	f	file:
find_avail_set	gcse.c	/^find_avail_set (regno, insn)$/;"	f	file:
find_base_term	alias.c	/^find_base_term (x)$/;"	f	file:
find_base_value	alias.c	/^find_base_value (src)$/;"	f	file:
find_basic_block	resource.c	/^find_basic_block (insn)$/;"	f	file:
find_basic_blocks	flow.c	/^find_basic_blocks (f, nregs, file, do_cleanup)$/;"	f
find_basic_blocks_1	flow.c	/^find_basic_blocks_1 (f, bb_eh_end)$/;"	f	file:
find_best_addr	cse.c	/^find_best_addr (insn, loc)$/;"	f	file:
find_blocks	reg-stack.c	/^find_blocks (first)$/;"	f	file:
find_clobbered_regs	stupid.c	/^find_clobbered_regs (reg, setter)$/;"	f	file:
find_common_reg_term	unroll.c	/^find_common_reg_term (op0, op1)$/;"	f	file:
find_comparison_args	cse.c	/^find_comparison_args (code, parg1, parg2, pmode1, pmode2)$/;"	f	file:
find_conditional_protection	haifa-sched.c	/^find_conditional_protection (insn, load_insn_bb)$/;"	f	file:
find_constant_term_loc	recog.c	/^find_constant_term_loc (p)$/;"	f	file:
find_corresponding_lparen	protoize.c	/^find_corresponding_lparen (p)$/;"	f	file:
find_cross_jump	jump.c	/^find_cross_jump (e1, e2, minimum, f1, f2)$/;"	f	file:
find_dead_or_set_registers	resource.c	/^find_dead_or_set_registers (target, res, jump_target, jump_count, set, needed)$/;"	f	file:
find_dummy_reload	reload.c	/^find_dummy_reload (real_in, real_out, inloc, outloc,$/;"	f	file:
find_end_label	reorg.c	/^find_end_label ()$/;"	f	file:
find_equiv_reg	reload.c	/^find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)$/;"	f
find_exception_handler	libgcc2.c	/^find_exception_handler (void *pc, exception_descriptor *table, $/;"	f	file:
find_exception_handler_labels	except.c	/^find_exception_handler_labels ()$/;"	f
find_extern_def	protoize.c	/^find_extern_def (head, user)$/;"	f	file:
find_fde	frame.c	/^find_fde (void *pc)$/;"	f	file:
find_file	gcc.c	/^find_file (name)$/;"	f	file:
find_file	protoize.c	/^find_file (filename, do_not_stat)$/;"	f	file:
find_fixup_replacement	function.c	/^find_fixup_replacement (replacements, x)$/;"	f	file:
find_formats	gengenrtl.c	/^find_formats ()$/;"	f	file:
find_free_reg	local-alloc.c	/^find_free_reg (class, mode, qty, accept_call_clobbered, just_try_suggested,$/;"	f	file:
find_free_register	resource.c	/^find_free_register (current_insn, class_str, mode, reg_set)$/;"	f
find_func_region	except.c	/^find_func_region (insn_region)$/;"	f
find_function_data	function.c	/^find_function_data (decl)$/;"	f
find_group	reload1.c	/^find_group (chain, class, dumpfile)$/;"	f	file:
find_inc_amount	reload.c	/^find_inc_amount (x, inced)$/;"	f	file:
find_include_file	cppfiles.c	/^find_include_file (pfile, fname, search_start, ihash, before)$/;"	f
find_insert_position	jump.c	/^find_insert_position (insn, new)$/;"	f	file:
find_insn_list	haifa-sched.c	/^find_insn_list (insn, list)$/;"	f	file:
find_insn_list	sched.c	/^find_insn_list (insn, list)$/;"	f	file:
find_insn_mem_list	haifa-sched.c	/^find_insn_mem_list (insn, x, list, list1)$/;"	f	file:
find_last_value	rtlanal.c	/^find_last_value (x, pinsn, valid_to, allow_hwreg)$/;"	f
find_life_end	loop.c	/^find_life_end (x, stats, insn, biv)$/;"	f	file:
find_line_note	emit-rtl.c	/^find_line_note (insn)$/;"	f	file:
find_loop_tree_blocks	stmt.c	/^find_loop_tree_blocks ()$/;"	f
find_matches	regmove.c	/^find_matches (insn, matchp)$/;"	f	file:
find_mem_givs	loop.c	/^find_mem_givs (x, insn, not_every_iteration, loop_start, loop_end)$/;"	f	file:
find_most_used	genattrtab.c	/^find_most_used (attr)$/;"	f	file:
find_next_ref	explow.c	/^find_next_ref (reg, insn)$/;"	f
find_pool_constant	varasm.c	/^find_pool_constant (addr)$/;"	f	file:
find_position	cppfiles.c	/^find_position (start, limit, linep, colp)$/;"	f	file:
find_post_sched_live	haifa-sched.c	/^find_post_sched_live (bb)$/;"	f	file:
find_pre_sched_live	haifa-sched.c	/^find_pre_sched_live (bb)$/;"	f	file:
find_reg	global.c	/^find_reg (allocno, losers, alt_regs_p, accept_call_clobbered, retrying)$/;"	f	file:
find_reg_fusage	rtlanal.c	/^find_reg_fusage (insn, code, datum)$/;"	f
find_reg_note	rtlanal.c	/^find_reg_note (insn, kind, datum)$/;"	f
find_regno_fusage	rtlanal.c	/^find_regno_fusage (insn, code, regno)$/;"	f
find_regno_note	rtlanal.c	/^find_regno_note (insn, kind, regno)$/;"	f
find_reload_regs	reload1.c	/^find_reload_regs (chain, dumpfile)$/;"	f	file:
find_reloads	reload.c	/^find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)$/;"	f
find_reloads_address	reload.c	/^find_reloads_address (mode, memrefloc, ad, loc, opnum, type, ind_levels, insn)$/;"	f	file:
find_reloads_address_1	reload.c	/^find_reloads_address_1 (mode, x, context, loc, opnum, type, ind_levels, insn)$/;"	f	file:
find_reloads_address_part	reload.c	/^find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)$/;"	f	file:
find_reloads_subreg_address	reload.c	/^find_reloads_subreg_address (x, force_replace, opnum, type,$/;"	f	file:
find_reloads_toplev	reload.c	/^find_reloads_toplev (x, opnum, type, ind_levels, is_set_dest, insn)$/;"	f	file:
find_replacement	reload.c	/^find_replacement (loc)$/;"	f
find_reusable_reload	reload.c	/^find_reusable_reload (p_in, out, class, type, opnum, dont_share)$/;"	f	file:
find_rgns	haifa-sched.c	/^find_rgns (s_preds, s_succs, num_preds, num_succs, dom)$/;"	f	file:
find_rightmost_formals_list	protoize.c	/^find_rightmost_formals_list (clean_text_p)$/;"	f	file:
find_single_block_region	haifa-sched.c	/^find_single_block_region ()$/;"	f	file:
find_single_use	recog.c	/^find_single_use (dest, insn, ploc)$/;"	f
find_single_use_1	recog.c	/^find_single_use_1 (dest, loc)$/;"	f	file:
find_single_use_in_loop	loop.c	/^find_single_use_in_loop (insn, x, usage)$/;"	f	file:
find_single_value	genattrtab.c	/^find_single_value (attr)$/;"	f	file:
find_spanning_tree	profile.c	/^find_spanning_tree (num_blocks)$/;"	f	file:
find_split_point	combine.c	/^find_split_point (loc, insn)$/;"	f	file:
find_splittable_givs	unroll.c	/^find_splittable_givs (bl, unroll_type, loop_start, loop_end, increment,$/;"	f	file:
find_splittable_regs	unroll.c	/^find_splittable_regs (unroll_type, loop_start, loop_end, end_insert_before,$/;"	f	file:
find_static_definition	protoize.c	/^find_static_definition (user)$/;"	f	file:
find_symbolic_term	alias.c	/^find_symbolic_term (x)$/;"	f	file:
find_temp_slot_from_address	function.c	/^find_temp_slot_from_address (x)$/;"	f	file:
find_tworeg_group	reload1.c	/^find_tworeg_group (chain, class, dumpfile)$/;"	f	file:
find_use_as_address	flow.c	/^find_use_as_address (x, reg, plusconst)$/;"	f
find_used_regs	gcse.c	/^find_used_regs (x)$/;"	f	file:
find_valid_class	reload.c	/^find_valid_class (m1, n)$/;"	f	file:
fini_dummy	crtstuff.c	/^fini_dummy (void)$/;"	f	file:
fininame	collect2.c	/^static char *initname, *fininame;	\/* names of init and fini funcs *\/$/;"	v	file:
finish_decl	c-decl.c	/^finish_decl (decl, init, asmspec_tree)$/;"	f
finish_enum	c-decl.c	/^finish_enum (enumtype, values, attributes)$/;"	f
finish_file	c-lang.c	/^finish_file ()$/;"	f
finish_function	c-decl.c	/^finish_function (nested)$/;"	f
finish_graph_dump_file	graph.c	/^finish_graph_dump_file (base, suffix)$/;"	f
finish_incomplete_decl	c-decl.c	/^finish_incomplete_decl (decl)$/;"	f
finish_init	c-typeck.c	/^finish_init ()$/;"	f
finish_inline	integrate.c	/^finish_inline (fndecl, head)$/;"	f	file:
finish_parse	c-lex.c	/^finish_parse ()$/;"	f
finish_sometimes_live	haifa-sched.c	/^finish_sometimes_live (regs_sometimes_live, sometimes_max)$/;"	f	file:
finish_sometimes_live	sched.c	/^finish_sometimes_live (regs_sometimes_live, sometimes_max)$/;"	f	file:
finish_spills	reload1.c	/^finish_spills (global, dumpfile)$/;"	f	file:
finish_struct	c-decl.c	/^finish_struct (t, fieldlist, attributes)$/;"	f
finput	c-lex.c	/^FILE *finput;$/;"	v
fip	protoize.c	400;"	d	file:
first	c-iterate.c	/^  struct ixpansion *first;	\/* Head of list of ixpansions *\/$/;"	m	struct:iter_stack_node
first	collect2.c	/^  struct id *first;$/;"	m	struct:head
first	genrecog.c	/^struct decision_head { struct decision *first, *last; };$/;"	m	struct:decision_head
first	mips-tfile.c	/^  vlinks_t	*first;			\/* first page link *\/$/;"	m	struct:varray
first_arg_num	c-common.c	/^  int first_arg_num;		\/* number of first arg (zero for varargs) *\/$/;"	m	struct:function_format_info
first_bracket_include	cccp.c	/^static struct file_name_list *first_bracket_include = 0;$/;"	v	file:
first_clobber	genemit.c	/^  int first_clobber;$/;"	m	struct:clobber_pat
first_file	mips-tfile.c	/^static efdr_t *first_file;			\/* first file descriptor *\/$/;"	v	file:
first_global_object_name	varasm.c	/^char *first_global_object_name;$/;"	v
first_increment_giv	loop.c	/^int first_increment_giv, last_increment_giv;$/;"	v
first_insn	emit-rtl.c	/^static rtx first_insn = NULL;$/;"	v	file:
first_insn	genattrtab.c	/^  struct insn_ent *first_insn;	\/* First insn with this value.  *\/$/;"	m	struct:attr_value
first_insn	profile.c	/^  rtx first_insn;$/;"	m	struct:bb_info
first_insn	stmt.c	/^	  rtx first_insn;$/;"	m	struct:nesting::<anonymous>::<anonymous>
first_inv	doschk.c	/^int first_inv = 1;$/;"	v
first_label_num	emit-rtl.c	/^static int first_label_num;$/;"	v	file:
first_loop_store_insn	loop.c	/^static rtx first_loop_store_insn;$/;"	v	file:
first_member	haifa-sched.c	/^    int *first_member;		\/* pointer to the list start in bitlst_table.  *\/$/;"	m	struct:
first_msg	doschk.c	/^int first_msg = 1;$/;"	v
first_pool	varasm.c	/^static struct pool_constant *first_pool, *last_pool;$/;"	v	file:
first_rethrow_symbol	except.c	/^static rtx first_rethrow_symbol = NULL_RTX;$/;"	v	file:
first_rtl_op	tree.c	/^first_rtl_op (code)$/;"	f
first_same_value	cse.c	/^  struct table_elt *first_same_value;$/;"	m	struct:table_elt
first_system_include	cccp.c	/^static struct file_name_list *first_system_include = 0;$/;"	v	file:
first_tag	mips-tfile.c	/^  struct tag	*first_tag;	\/* first tag in block defined *\/$/;"	m	struct:thead
first_value	genattrtab.c	/^  struct attr_value *first_value; \/* First value of this attribute.  *\/$/;"	m	struct:attr_desc
fix_lexical_addr	function.c	/^fix_lexical_addr (addr, var)$/;"	f
fix_reg_dead_note	reorg.c	/^fix_reg_dead_note (start_insn, stop_insn)$/;"	f	file:
fix_register	regclass.c	/^fix_register (name, fixed, call_used)$/;"	f
fix_sched_param	haifa-sched.c	/^fix_sched_param (param, val)$/;"	f
fixdfdi_libfunc	optabs.c	/^rtx fixdfdi_libfunc;$/;"	v
fixdfsi_libfunc	optabs.c	/^rtx fixdfsi_libfunc;$/;"	v
fixdfti_libfunc	optabs.c	/^rtx fixdfti_libfunc;$/;"	v
fixed_reg_set	regclass.c	/^HARD_REG_SET fixed_reg_set;$/;"	v
fixed_regs	regclass.c	/^char fixed_regs[FIRST_PSEUDO_REGISTER];$/;"	v
fixed_scalar_and_varying_struct_p	alias.c	/^fixed_scalar_and_varying_struct_p (mem1, mem2, varies_p)$/;"	f	file:
fixed_type_p	expr.c	/^fixed_type_p (exp)$/;"	f	file:
fixsfdi_libfunc	optabs.c	/^rtx fixsfdi_libfunc;$/;"	v
fixsfsi_libfunc	optabs.c	/^rtx fixsfsi_libfunc;$/;"	v
fixsfti_libfunc	optabs.c	/^rtx fixsfti_libfunc;$/;"	v
fixtab	optabs.c	/^enum insn_code fixtab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v
fixtfdi_libfunc	optabs.c	/^rtx fixtfdi_libfunc;$/;"	v
fixtfsi_libfunc	optabs.c	/^rtx fixtfsi_libfunc;$/;"	v
fixtfti_libfunc	optabs.c	/^rtx fixtfti_libfunc;$/;"	v
fixtrunctab	optabs.c	/^enum insn_code fixtrunctab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v
fixunsdfdi_libfunc	optabs.c	/^rtx fixunsdfdi_libfunc;$/;"	v
fixunsdfsi_libfunc	optabs.c	/^rtx fixunsdfsi_libfunc;$/;"	v
fixunsdfti_libfunc	optabs.c	/^rtx fixunsdfti_libfunc;$/;"	v
fixunssfdi_libfunc	optabs.c	/^rtx fixunssfdi_libfunc;$/;"	v
fixunssfsi_libfunc	optabs.c	/^rtx fixunssfsi_libfunc;$/;"	v
fixunssfti_libfunc	optabs.c	/^rtx fixunssfti_libfunc;$/;"	v
fixunstfdi_libfunc	optabs.c	/^rtx fixunstfdi_libfunc;$/;"	v
fixunstfsi_libfunc	optabs.c	/^rtx fixunstfsi_libfunc;$/;"	v
fixunstfti_libfunc	optabs.c	/^rtx fixunstfti_libfunc;$/;"	v
fixunsxfdi_libfunc	optabs.c	/^rtx fixunsxfdi_libfunc;$/;"	v
fixunsxfsi_libfunc	optabs.c	/^rtx fixunsxfsi_libfunc;$/;"	v
fixunsxfti_libfunc	optabs.c	/^rtx fixunsxfti_libfunc;$/;"	v
fixup_gotos	stmt.c	/^fixup_gotos (thisblock, stack_level, cleanup_list, first_insn, dont_jump_in)$/;"	f	file:
fixup_match_1	regmove.c	/^fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,$/;"	f	file:
fixup_match_2	regmove.c	/^fixup_match_2 (insn, dst, src, offset, regmove_dump_file)$/;"	f
fixup_memory_subreg	function.c	/^fixup_memory_subreg (x, insn, uncritical)$/;"	f	file:
fixup_replacement	function.c	/^struct fixup_replacement$/;"	s	file:
fixup_signed_type	stor-layout.c	/^fixup_signed_type (type)$/;"	f
fixup_stack_1	function.c	/^fixup_stack_1 (x, insn)$/;"	f	file:
fixup_unsigned_type	stor-layout.c	/^fixup_unsigned_type (type)$/;"	f
fixup_var_refs	function.c	/^fixup_var_refs (var, promoted_mode, unsignedp, ht)$/;"	f	file:
fixup_var_refs_1	function.c	/^fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)$/;"	f	file:
fixup_var_refs_insns	function.c	/^fixup_var_refs_insns (var, promoted_mode, unsignedp, insn, toplevel, ht)$/;"	f	file:
fixxfdi_libfunc	optabs.c	/^rtx fixxfdi_libfunc;$/;"	v
fixxfsi_libfunc	optabs.c	/^rtx fixxfsi_libfunc;$/;"	v
fixxfti_libfunc	optabs.c	/^rtx fixxfti_libfunc;$/;"	v
flag	cse.c	/^  char flag;$/;"	m	struct:table_elt
flag_allow_single_precision	c-decl.c	/^int flag_allow_single_precision = 0;$/;"	v
flag_argument_noalias	toplev.c	/^int flag_argument_noalias = 0;$/;"	v
flag_branch_on_count_reg	toplev.c	/^int flag_branch_on_count_reg;$/;"	v
flag_branch_probabilities	toplev.c	/^int flag_branch_probabilities = 0;$/;"	v
flag_caller_saves	toplev.c	/^int flag_caller_saves = 0;$/;"	v
flag_caller_saves	toplev.c	/^int flag_caller_saves = 1;$/;"	v
flag_chars	c-common.c	/^  const char *flag_chars;$/;"	m	struct:
flag_check_memory_usage	toplev.c	/^int flag_check_memory_usage = 0;$/;"	v
flag_complex_divide_method	toplev.c	/^int flag_complex_divide_method = 0;$/;"	v
flag_cond_mismatch	c-decl.c	/^int flag_cond_mismatch;$/;"	v
flag_const_strings	c-decl.c	/^int flag_const_strings;$/;"	v
flag_cse_follow_jumps	toplev.c	/^int flag_cse_follow_jumps;$/;"	v
flag_cse_skip_blocks	toplev.c	/^int flag_cse_skip_blocks;$/;"	v
flag_data_sections	toplev.c	/^int flag_data_sections = 0;$/;"	v
flag_debug_asm	toplev.c	/^int flag_debug_asm = 0;$/;"	v
flag_defer_pop	toplev.c	/^int flag_defer_pop = 0;$/;"	v
flag_delayed_branch	toplev.c	/^int flag_delayed_branch;$/;"	v
flag_dump_unnumbered	print-rtl.c	/^int flag_dump_unnumbered = 0;$/;"	v
flag_errno_math	toplev.c	/^int flag_errno_math = 1;$/;"	v
flag_exceptions	toplev.c	/^int flag_exceptions;$/;"	v
flag_expensive_optimizations	toplev.c	/^int flag_expensive_optimizations;$/;"	v
flag_fast_math	toplev.c	/^int flag_fast_math = 0;$/;"	v
flag_float_store	toplev.c	/^int flag_float_store = 0;$/;"	v
flag_force_addr	toplev.c	/^int flag_force_addr = 0;$/;"	v
flag_force_mem	toplev.c	/^int flag_force_mem = 0;$/;"	v
flag_function_sections	toplev.c	/^int flag_function_sections = 0;$/;"	v
flag_gcse	toplev.c	/^static int flag_gcse;$/;"	v	file:
flag_gen_aux_info	toplev.c	/^int flag_gen_aux_info = 0;$/;"	v
flag_gnu_linker	toplev.c	/^int flag_gnu_linker = 0;$/;"	v
flag_gnu_linker	toplev.c	/^int flag_gnu_linker = 1;$/;"	v
flag_half_pic	halfpic.c	/^int flag_half_pic		= 0;	\/* Global half-pic flag.  *\/$/;"	v
flag_hosted	c-decl.c	/^int flag_hosted = 1;$/;"	v
flag_inhibit_size_directive	toplev.c	/^int flag_inhibit_size_directive = 0;$/;"	v
flag_inline_functions	toplev.c	/^int flag_inline_functions;$/;"	v
flag_instrument_function_entry_exit	toplev.c	/^int flag_instrument_function_entry_exit = 0;$/;"	v
flag_isoc9x	c-decl.c	/^int flag_isoc9x = 0;$/;"	v
flag_keep_inline_functions	toplev.c	/^int flag_keep_inline_functions;$/;"	v
flag_keep_static_consts	toplev.c	/^int flag_keep_static_consts = 1;$/;"	v
flag_leading_underscore	toplev.c	/^int flag_leading_underscore = -1;$/;"	v
flag_minimal_debug	dbxout.c	/^static int flag_minimal_debug = MINIMAL_DEBUG;$/;"	v	file:
flag_move_all_movables	toplev.c	/^int flag_move_all_movables = 0;$/;"	v
flag_native_struct	toplev.c	/^int flag_native_struct = DEFAULT_NATIVE_STRUCT;$/;"	v
flag_new_exceptions	toplev.c	/^int flag_new_exceptions = 0;$/;"	v
flag_no_asm	c-decl.c	/^int flag_no_asm;$/;"	v
flag_no_builtin	c-decl.c	/^int flag_no_builtin;$/;"	v
flag_no_common	toplev.c	/^int flag_no_common;$/;"	v
flag_no_function_cse	toplev.c	/^int flag_no_function_cse = 0;$/;"	v
flag_no_ident	toplev.c	/^int flag_no_ident = 0;$/;"	v
flag_no_inline	toplev.c	/^int flag_no_inline;$/;"	v
flag_no_nonansi_builtin	c-decl.c	/^int flag_no_nonansi_builtin;$/;"	v
flag_no_peephole	toplev.c	/^int flag_no_peephole = 0;$/;"	v
flag_omit_frame_pointer	toplev.c	/^int flag_omit_frame_pointer = 0;$/;"	v
flag_pack_struct	toplev.c	/^int flag_pack_struct = 0;$/;"	v
flag_pcc_struct_return	toplev.c	/^int flag_pcc_struct_return = DEFAULT_PCC_STRUCT_RETURN;$/;"	v
flag_pedantic_errors	toplev.c	/^int flag_pedantic_errors = 0;$/;"	v
flag_pic	toplev.c	/^int flag_pic;$/;"	v
flag_prefix_function_name	toplev.c	/^int flag_prefix_function_name = 0;$/;"	v
flag_pretend_float	toplev.c	/^int flag_pretend_float;$/;"	v
flag_print_asm_name	toplev.c	/^int flag_print_asm_name = 0;$/;"	v
flag_reduce_all_givs	toplev.c	/^int flag_reduce_all_givs = 0;$/;"	v
flag_regmove	toplev.c	/^int flag_regmove = 0;$/;"	v
flag_rerun_cse_after_loop	toplev.c	/^static int flag_rerun_cse_after_loop;$/;"	v	file:
flag_rerun_loop_opt	toplev.c	/^int flag_rerun_loop_opt;$/;"	v
flag_schedule_insns	toplev.c	/^int flag_schedule_insns = 0;$/;"	v
flag_schedule_insns_after_reload	toplev.c	/^int flag_schedule_insns_after_reload = 0;$/;"	v
flag_schedule_interblock	toplev.c	/^int flag_schedule_interblock = 1;$/;"	v
flag_schedule_speculative	toplev.c	/^int flag_schedule_speculative = 1;$/;"	v
flag_schedule_speculative_load	toplev.c	/^int flag_schedule_speculative_load = 0;$/;"	v
flag_schedule_speculative_load_dangerous	toplev.c	/^int flag_schedule_speculative_load_dangerous = 0;$/;"	v
flag_shared_data	toplev.c	/^int flag_shared_data;$/;"	v
flag_short_double	c-decl.c	/^int flag_short_double;$/;"	v
flag_short_enums	toplev.c	/^int flag_short_enums;$/;"	v
flag_signed_bitfields	c-decl.c	/^int flag_signed_bitfields = 1;$/;"	v
flag_signed_char	toplev.c	/^int flag_signed_char;$/;"	v
flag_stack_check	toplev.c	/^int flag_stack_check;$/;"	v
flag_strength_reduce	toplev.c	/^int flag_strength_reduce = 0;$/;"	v
flag_strict_aliasing	toplev.c	/^int flag_strict_aliasing = 0;$/;"	v
flag_syntax_only	toplev.c	/^int flag_syntax_only = 0;$/;"	v
flag_test_coverage	toplev.c	/^int flag_test_coverage = 0;$/;"	v
flag_thread_jumps	toplev.c	/^int flag_thread_jumps;$/;"	v
flag_traditional	c-decl.c	/^int flag_traditional;$/;"	v
flag_unroll_all_loops	toplev.c	/^int flag_unroll_all_loops;$/;"	v
flag_unroll_loops	toplev.c	/^int flag_unroll_loops;$/;"	v
flag_verbose_asm	toplev.c	/^int flag_verbose_asm = 0;$/;"	v
flag_volatile	toplev.c	/^int flag_volatile;$/;"	v
flag_volatile_global	toplev.c	/^int flag_volatile_global;$/;"	v
flag_volatile_static	toplev.c	/^int flag_volatile_static;$/;"	v
flag_writable_strings	toplev.c	/^int flag_writable_strings = 0;$/;"	v
flags	cppexp.c	/^    char flags;$/;"	m	struct:operation
flags	fix-header.c	/^  symbol_flags flags;$/;"	m	struct:std_include_entry
flags	fix-header.c	/^  symbol_flags flags;$/;"	m	struct:symbol_list
flags	libgcc2.c	/^  char *flags;$/;"	m	struct:bb
flags_set_1	regmove.c	/^flags_set_1 (x, pat)$/;"	f	file:
flags_set_1_rtx	regmove.c	/^static rtx flags_set_1_rtx;$/;"	v	file:
flags_set_1_set	regmove.c	/^static int flags_set_1_set;$/;"	v	file:
float	libgcc2.c	1079;"	d	file:
float	libgcc2.c	1101;"	d	file:
float	libgcc2.c	1123;"	d	file:
float	libgcc2.c	1152;"	d	file:
float	libgcc2.c	117;"	d	file:
float_ftype_float	c-decl.c	/^tree float_ftype_float;$/;"	v
float_handled	toplev.c	/^int float_handled;$/;"	v
float_handler	toplev.c	/^jmp_buf float_handler;$/;"	v
float_handler_set	toplev.c	/^static int float_handler_set;$/;"	v	file:
float_long	floatlib.c	/^union float_long$/;"	u	file:
float_signal	toplev.c	/^float_signal (signo)$/;"	f	file:
float_type_node	c-decl.c	/^tree float_type_node;$/;"	v
floatdidf_libfunc	optabs.c	/^rtx floatdidf_libfunc;$/;"	v
floatdisf_libfunc	optabs.c	/^rtx floatdisf_libfunc;$/;"	v
floatditf_libfunc	optabs.c	/^rtx floatditf_libfunc;$/;"	v
floatdixf_libfunc	optabs.c	/^rtx floatdixf_libfunc;$/;"	v
floatsidf_libfunc	optabs.c	/^rtx floatsidf_libfunc;$/;"	v
floatsisf_libfunc	optabs.c	/^rtx floatsisf_libfunc;$/;"	v
floatsitf_libfunc	optabs.c	/^rtx floatsitf_libfunc;$/;"	v
floatsixf_libfunc	optabs.c	/^rtx floatsixf_libfunc;$/;"	v
floattab	optabs.c	/^enum insn_code floattab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v
floattidf_libfunc	optabs.c	/^rtx floattidf_libfunc;$/;"	v
floattisf_libfunc	optabs.c	/^rtx floattisf_libfunc;$/;"	v
floattitf_libfunc	optabs.c	/^rtx floattitf_libfunc;$/;"	v
floattixf_libfunc	optabs.c	/^rtx floattixf_libfunc;$/;"	v
flodiv_optab	optabs.c	/^optab flodiv_optab;$/;"	v
floor_log	enquire.c	/^int floor_log(base, x) int base; Long_double x; {$/;"	f
floor_log2_wide	toplev.c	/^floor_log2_wide (x)$/;"	f
flow2_completed	flow.c	/^int flow2_completed;$/;"	v
flow2_dump	toplev.c	/^int flow2_dump = 0;$/;"	v
flow2_time	toplev.c	/^int flow2_time;$/;"	v
flow_delete_insn	flow.c	/^flow_delete_insn (insn)$/;"	f	file:
flow_dump	toplev.c	/^int flow_dump = 0;$/;"	v
flow_time	toplev.c	/^int flow_time;$/;"	v
flt_or_int	libgcc1.c	/^union flt_or_int { int i; float f; };$/;"	u	file:
flt_or_value	libgcc1.c	/^union flt_or_value { FLOAT_VALUE_TYPE i; float f; };$/;"	u	file:
flt_radix	enquire.c	/^int flt_radix;     \/* The calculated value of FLT_RADIX *\/$/;"	v
flt_rounds	enquire.c	/^int flt_rounds;    \/* The calculated value of FLT_ROUNDS *\/$/;"	v
flush_addressof	function.c	/^flush_addressof (decl)$/;"	f
flush_hash_table	cse.c	/^flush_hash_table ()$/;"	f	file:
flush_pending_lists	haifa-sched.c	/^flush_pending_lists (insn, only_write)$/;"	f	file:
flush_pending_lists	sched.c	/^flush_pending_lists (insn, only_write)$/;"	f	file:
fmissing	enquire.c	/^Procedure fmissing(s) char *s; {$/;"	f
fn	fix-header.c	/^  struct fn_decl *fn;$/;"	m	struct:partial_proto
fname	cccp.c	/^    char fname[1];$/;"	m	struct:file_name_list
fname	cccp.c	/^  char *fname;			\/* The name of the directory.  *\/$/;"	m	struct:default_include
fname	cccp.c	/^  char *fname;		\/* copied from input when frame is made *\/$/;"	m	struct:if_stack
fname	cccp.c	/^  char *fname;$/;"	m	struct:file_buf
fname	cccp.c	/^  char *fname;$/;"	m	struct:include_file
fname	cppinit.c	/^  char *fname;			\/* The name of the directory.  *\/$/;"	m	struct:default_include
fname	fix-header.c	/^  char *fname;	\/* name of function *\/$/;"	m	struct:partial_proto
fname	protoize.c	/^struct default_include { const char *fname; $/;"	m	struct:default_include
fname_len	cccp.c	/^  size_t fname_len;		\/* similarly *\/$/;"	m	struct:if_stack
fnotice	gcov.c	/^fnotice VPROTO ((FILE *file, const char *msgid, ...))$/;"	f	file:
fnotice	toplev.c	/^fnotice VPROTO((FILE *file, const char *msgid, ...))$/;"	f
fold	fold-const.c	/^fold (expr) $/;"	f
fold_convert	fold-const.c	/^fold_convert (t, arg1)$/;"	f	file:
fold_convert_1	fold-const.c	/^fold_convert_1 (data)$/;"	f	file:
fold_range_test	fold-const.c	/^fold_range_test (exp)$/;"	f	file:
fold_rtx	cse.c	/^fold_rtx (x, insn)$/;"	f	file:
fold_rtx_mult_add	unroll.c	/^fold_rtx_mult_add (mult1, mult2, add1, mode)$/;"	f	file:
fold_truthop	fold-const.c	/^fold_truthop (code, truth_type, lhs, rhs)$/;"	f	file:
follow_jumps	jump.c	/^follow_jumps (label)$/;"	f
foo	libgcc1-test.c	/^foo ()$/;"	f
fopen	cccp.c	11033;"	d	file:
fopen	cccp.c	72;"	d	file:
fopen	toplev.c	95;"	d	file:
for_each_rtx	rtlanal.c	/^for_each_rtx (x, f, data)$/;"	f
for_lint	cccp.c	/^static int for_lint = 0;$/;"	v	file:
forbidden_inc_dec_class	regclass.c	/^static int forbidden_inc_dec_class[N_REG_CLASSES];$/;"	v	file:
force	loop.c	/^  unsigned int force : 1;	\/* 1 means MUST move this insn *\/$/;"	m	struct:movable
force_const_mem	varasm.c	/^force_const_mem (mode, x)$/;"	f
force_data_section	varasm.c	/^force_data_section ()$/;"	f
force_fit_type	fold-const.c	/^force_fit_type (t, overflow)$/;"	f
force_line_numbers	emit-rtl.c	/^force_line_numbers ()$/;"	f
force_movables	loop.c	/^force_movables (movables)$/;"	f	file:
force_next_line_note	emit-rtl.c	/^force_next_line_note ()$/;"	f
force_not_mem	explow.c	/^force_not_mem (x)$/;"	f
force_operand	expr.c	/^force_operand (value, target)$/;"	f
force_reg	explow.c	/^force_reg (mode, x)$/;"	f
force_to_data	crtstuff.c	/^static func_ptr force_to_data[0] __attribute__ ((__unused__)) = { };$/;"	v	file:
force_to_data	crtstuff.c	/^static void * force_to_data[0] __attribute__ ((__unused__)) = { };$/;"	v	file:
force_to_mode	combine.c	/^force_to_mode (x, mode, mask, reg, just_select)$/;"	f	file:
forced_labels	jump.c	/^rtx forced_labels;$/;"	v
forces	loop.c	/^  struct movable *forces;	\/* An insn that must be moved if this is *\/$/;"	m	struct:movable
forget_old_reloads_1	reload1.c	/^forget_old_reloads_1 (x, ignored)$/;"	f	file:
forget_protocol_qualifiers	c-lex.c	/^forget_protocol_qualifiers ()$/;"	f
fork_execute	collect2.c	/^fork_execute (prog, argv)$/;"	f	file:
form_sum	reload.c	/^form_sum (x, y)$/;"	f
formal_decls	protoize.c	/^  const char *		formal_decls;	\/* -> to string of formal declarations *\/$/;"	m	struct:def_dec_info_struct
formal_names	protoize.c	/^  const char *		formal_names;	\/* -> to list of names of formals *\/$/;"	m	struct:def_dec_info_struct
formals_list	protoize.c	/^  const char *			formals_list;	\/* -> to formals list string *\/$/;"	m	struct:f_list_chain_item_struct
formals_style	c-aux-info.c	/^typedef enum formals_style_enum formals_style;$/;"	t	file:
formals_style_enum	c-aux-info.c	/^enum formals_style_enum {$/;"	g	file:
format	gengenrtl.c	/^  const char *enumname, *name, *format;$/;"	m	struct:rtx_definition
format_char_info	c-common.c	/^} format_char_info;$/;"	t	file:
format_chars	c-common.c	/^  const char *format_chars;$/;"	m	struct:
format_num	c-common.c	/^  int format_num;		\/* number of format argument *\/$/;"	m	struct:function_format_info
format_num	c-common.c	/^  int format_num;		\/* number of format argument *\/$/;"	m	struct:international_format_info
format_type	c-common.c	/^  enum format_type format_type;	\/* type of format (printf, scanf, etc.) *\/$/;"	m	struct:function_format_info
format_type	c-common.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	g	file:
formats	gengenrtl.c	/^const char *formats[NUM_RTX_CODE];$/;"	v
forward	mips-tfile.c	/^  forward_t	forward	[ PAGE_SIZE \/ sizeof (forward_t) ];$/;"	m	union:page
forward	mips-tfile.c	/^typedef struct forward {$/;"	s	file:
forward_ref	mips-tfile.c	/^  struct forward *forward_ref;	\/* list of forward references *\/$/;"	m	struct:tag
forward_t	mips-tfile.c	/^} forward_t;$/;"	t	file:
forward_to_next_token_char	protoize.c	/^forward_to_next_token_char (ptr)$/;"	f	file:
frame_dummy	crtstuff.c	/^frame_dummy (void)$/;"	f	file:
frame_heapsort	frame.c	/^frame_heapsort (fde_vector *erratic)$/;"	f	file:
frame_init	frame.c	/^frame_init (struct object* ob)$/;"	f	file:
frame_offset	function.c	/^HOST_WIDE_INT frame_offset;$/;"	v
frame_pointer_needed	final.c	/^int frame_pointer_needed;$/;"	v
frame_state_internal	frame.c	/^struct frame_state_internal$/;"	s	file:
frame_tables	collect2.c	/^static struct head frame_tables;	\/* list of frame unwind info tables *\/$/;"	v	file:
freadsym	tlink.c	/^freadsym (stream, f, chosen)$/;"	f	file:
free	mips-tfile.c	/^  struct forward *free;		\/* free list pointer *\/$/;"	m	struct:forward
free	mips-tfile.c	/^  struct scope	*free;		\/* free list pointer *\/$/;"	m	struct:scope
free	mips-tfile.c	/^  struct tag	 *free;		\/* free list pointer *\/$/;"	m	struct:tag
free	mips-tfile.c	/^  struct thead	*free;		\/* free list pointer *\/$/;"	m	struct:thead
free1	cccp.c	/^  U_CHAR *free1, *free2;$/;"	m	struct:argdata
free2	cccp.c	/^  U_CHAR *free1, *free2;$/;"	m	struct:argdata
free_avail_expr_mem	gcse.c	/^free_avail_expr_mem ()$/;"	f	file:
free_basic_block_vars	flow.c	/^free_basic_block_vars (keep_head_end_p)$/;"	f
free_bb_mem	flow.c	/^free_bb_mem ()$/;"	f
free_binding_level	c-decl.c	/^static struct binding_level *free_binding_level;$/;"	v	file:
free_cprop_mem	gcse.c	/^free_cprop_mem ()$/;"	f	file:
free_cse_reg_info	cse.c	/^free_cse_reg_info (v)$/;"	f	file:
free_def_dec	protoize.c	/^free_def_dec (p)$/;"	f	file:
free_element	cse.c	/^free_element (elt)$/;"	f	file:
free_element_chain	cse.c	/^static struct table_elt *free_element_chain;$/;"	v	file:
free_expr_hash_table	gcse.c	/^free_expr_hash_table ()$/;"	f	file:
free_forward	mips-tfile.c	/^free_forward (ptr)$/;"	f
free_gcse_mem	gcse.c	/^free_gcse_mem ()$/;"	f	file:
free_insn	emit-rtl.c	/^static rtx free_insn;$/;"	v	file:
free_insn_eh_region	except.c	/^free_insn_eh_region () $/;"	f
free_int_list	flow.c	/^free_int_list (blk_list)$/;"	f
free_list	haifa-sched.c	/^free_list (listp, unused_listp)$/;"	f	file:
free_list	mips-tfile.c	/^  small_free_t	 free_list;	\/* current free list if any *\/$/;"	m	struct:alloc_info
free_multiple_pages	mips-tfile.c	/^free_multiple_pages (page_ptr, npages)$/;"	f
free_pending_lists	haifa-sched.c	/^free_pending_lists ()$/;"	f	file:
free_pending_lists	sched.c	/^free_pending_lists ()$/;"	f	file:
free_pre_mem	gcse.c	/^free_pre_mem ()$/;"	f	file:
free_ptr	cccp.c	/^  U_CHAR *free_ptr;$/;"	m	struct:file_buf
free_rd_mem	gcse.c	/^free_rd_mem ()$/;"	f	file:
free_reg_info	regclass.c	/^free_reg_info ()$/;"	f
free_reg_set_mem	gcse.c	/^free_reg_set_mem ()$/;"	f	file:
free_regset_vector	flow.c	/^free_regset_vector (vector, nelts)$/;"	f
free_resource_info	resource.c	/^free_resource_info ()$/;"	f
free_scope	mips-tdump.c	/^scope_t	*free_scope	= 0;	\/* list of freed scopes *\/$/;"	v
free_scope	mips-tfile.c	/^free_scope (ptr)$/;"	f
free_set_hash_table	gcse.c	/^free_set_hash_table ()$/;"	f	file:
free_split_directories	gcc.c	/^free_split_directories (dirs)$/;"	f	file:
free_tag	mips-tfile.c	/^free_tag (ptr)$/;"	f
free_temp_slots	function.c	/^free_temp_slots ()$/;"	f
free_temps_for_rtl_expr	function.c	/^free_temps_for_rtl_expr (t)$/;"	f
free_thead	mips-tfile.c	/^free_thead (ptr)$/;"	f
free_token_list	cccp.c	/^free_token_list (tokens)$/;"	f	file:
frees	combine.c	/^  struct undo *frees;$/;"	m	struct:undobuf
freopen	cccp.c	11021;"	d	file:
freopen	cccp.c	73;"	d	file:
frob_extension	tlink.c	/^frob_extension (s, ext)$/;"	f	file:
from	expr.c	/^  rtx from;$/;"	m	struct:move_by_pieces
from	reload1.c	/^  int from;			\/* Register number to be eliminated.  *\/$/;"	m	struct:elim_table
from	reload1.c	/^  int from;$/;"	m	struct:elim_table_1
from_addr	expr.c	/^  rtx from_addr;$/;"	m	struct:move_by_pieces
from_block	haifa-sched.c	/^    int from_block;$/;"	m	struct:
from_rtx	reload1.c	/^  rtx from_rtx;			\/* REG rtx for the register to be eliminated.$/;"	m	struct:elim_table
from_struct	expr.c	/^  int from_struct;$/;"	m	struct:move_by_pieces
froms	gmon.c	/^static unsigned short	*froms;$/;"	v	file:
fstat	cccp.c	11074;"	d	file:
fstat	cccp.c	74;"	d	file:
ft_entries	dwarfout.c	/^static unsigned ft_entries;$/;"	v	file:
ft_entries_allocated	dwarfout.c	/^static unsigned ft_entries_allocated;$/;"	v	file:
ftrunc_optab	optabs.c	/^optab ftrunc_optab;$/;"	v
ftruncify	optabs.c	/^ftruncify (x)$/;"	f	file:
ftype_of	enquire.c	/^char *ftype_of(x) int x; {$/;"	f
ftyperr	enquire.c	/^Procedure ftyperr(name, esize, size) char *name; int esize, size; {$/;"	f
full_name	doschk.c	/^  char *full_name;$/;"	m	struct:ENT
full_size	function.c	/^  HOST_WIDE_INT full_size;$/;"	m	struct:temp_slot
func	collect2.c	/^  func_table_command_t		func;	\/* function constructors\/destructors *\/$/;"	m	union:load_union
func	cpplib.c	/^  int (*func)			\/* Function to handle directive *\/$/;"	m	struct:directive
func	mips-tfile.c	/^  void (*func) __proto((const char *));	\/* function to handle line *\/$/;"	m	struct:_pseudo_ops
func_eh_entry	except.c	/^struct func_eh_entry $/;"	s	file:
func_label_num	final.c	/^  int func_label_num;		\/* LPBC<n> label # for stored function name *\/$/;"	m	struct:bb_list
func_ptr	crtstuff.c	/^typedef void (*func_ptr) (void);$/;"	t	file:
func_units_p	genattrtab.c	/^  unsigned func_units_p	: 1;	\/* this is the function_units attribute *\/$/;"	m	struct:attr_desc
funcname	libgcc2.c	/^  char *funcname;$/;"	m	struct:bb_func
function	dwarf2out.c	/^  unsigned long function;$/;"	m	struct:dw_separate_line_info_struct
function_branches	gcov.c	/^static int function_branches;$/;"	v	file:
function_branches_executed	gcov.c	/^static int function_branches_executed;$/;"	v	file:
function_branches_taken	gcov.c	/^static int function_branches_taken;$/;"	v	file:
function_call_count	function.c	/^int function_call_count;$/;"	v
function_call_count	stmt.c	/^	  int function_call_count;$/;"	m	struct:nesting::<anonymous>::<anonymous>
function_calls	gcov.c	/^static int function_calls;$/;"	v	file:
function_calls_executed	gcov.c	/^static int function_calls_executed;$/;"	v	file:
function_cannot_inline_p	integrate.c	/^function_cannot_inline_p (fndecl)$/;"	f
function_defined	varasm.c	/^static int function_defined;$/;"	v	file:
function_eh_regions	except.c	/^static struct func_eh_entry *function_eh_regions = NULL;$/;"	v	file:
function_format_info	c-common.c	/^typedef struct function_format_info$/;"	s	file:
function_format_info	c-common.c	/^} function_format_info;$/;"	t	file:
function_format_list	c-common.c	/^static function_format_info *function_format_list = NULL;$/;"	v	file:
function_invariant_p	local-alloc.c	/^function_invariant_p (x)$/;"	f
function_maybepermanent_obstack	tree.c	/^struct obstack *function_maybepermanent_obstack;$/;"	v
function_name	gcov.c	/^static char *function_name;$/;"	v	file:
function_name_primary	protoize.c	/^static hash_table function_name_primary;$/;"	v	file:
function_obstack	tree.c	/^struct obstack *function_obstack;$/;"	v
function_section	varasm.c	/^function_section (decl)$/;"	f
function_source_lines	gcov.c	/^static int function_source_lines;$/;"	v	file:
function_source_lines_executed	gcov.c	/^static int function_source_lines_executed;$/;"	v	file:
function_start_label	dwarfout.c	/^function_start_label (decl)$/;"	f	file:
function_summary	gcov.c	/^function_summary ()$/;"	f	file:
function_types_compatible_p	c-typeck.c	/^function_types_compatible_p (f1, f2)$/;"	f	file:
function_unit	genattr.c	/^struct function_unit$/;"	s	file:
function_unit	genattrtab.c	/^struct function_unit$/;"	s	file:
function_unit_op	genattrtab.c	/^struct function_unit_op$/;"	s	file:
functions	libgcc2.c	/^  const char **functions;$/;"	m	struct:bb
fund_type_attribute	dwarfout.c	/^fund_type_attribute (ft_code)$/;"	f	file:
fundamental_type_code	dwarfout.c	/^fundamental_type_code (type)$/;"	f	file:
funny_match	recog.c	/^struct funny_match$/;"	s	file:
g_switch_set	toplev.c	/^int g_switch_set;$/;"	v
g_switch_value	toplev.c	/^int g_switch_value;$/;"	v
gcc_exec_prefix	gcc.c	/^static const char *gcc_exec_prefix;$/;"	v	file:
gcc_obstack_init	tree.c	/^gcc_obstack_init (obstack)$/;"	f
gclose	libgcc2.c	/^gclose (FILE *f)$/;"	f	file:
gcov_file	gcov.c	/^static FILE *gcov_file;$/;"	v	file:
gcov_file_name	gcov.c	/^static char *gcov_file_name;$/;"	v	file:
gcov_version_string	gcov.c	/^char gcov_version_string[] = "GNU gcov version 1.5\\n";$/;"	v
gcse_alloc	gcse.c	/^gcse_alloc (size)$/;"	f	file:
gcse_create_count	gcse.c	/^static int gcse_create_count;$/;"	v	file:
gcse_dump	toplev.c	/^int gcse_dump = 0;$/;"	v
gcse_file	gcse.c	/^static FILE *gcse_file;$/;"	v	file:
gcse_main	gcse.c	/^gcse_main (f, file)$/;"	f
gcse_obstack	gcse.c	/^static struct obstack gcse_obstack;$/;"	v	file:
gcse_subst_count	gcse.c	/^static int gcse_subst_count;$/;"	v	file:
gcse_time	toplev.c	/^int gcse_time;$/;"	v
gedf2_libfunc	optabs.c	/^rtx gedf2_libfunc;$/;"	v
gehf2_libfunc	optabs.c	/^rtx gehf2_libfunc;$/;"	v
gen_add2_insn	optabs.c	/^gen_add2_insn (x, y)$/;"	f
gen_add3_insn	regmove.c	/^gen_add3_insn (r0, r1, c)$/;"	f	file:
gen_array_type_die	dwarf2out.c	/^gen_array_type_die (type, context_die)$/;"	f	file:
gen_attr	genattr.c	/^gen_attr (attr)$/;"	f	file:
gen_attr	genattrtab.c	/^gen_attr (exp)$/;"	f	file:
gen_aux_info_file	protoize.c	/^gen_aux_info_file (base_filename)$/;"	f	file:
gen_aux_info_record	c-aux-info.c	/^gen_aux_info_record (fndecl, is_definition, is_implicit, is_prototyped)$/;"	f
gen_binary	combine.c	/^gen_binary (code, mode, op0, op1)$/;"	f	file:
gen_block_die	dwarf2out.c	/^gen_block_die (stmt, context_die, depth)$/;"	f	file:
gen_compile_unit_die	dwarf2out.c	/^gen_compile_unit_die (main_input_filename)$/;"	f	file:
gen_cond_trap	optabs.c	/^gen_cond_trap (code, op1, op2, tcode)$/;"	f
gen_decl	c-aux-info.c	/^gen_decl (decl, is_func_definition, style)$/;"	f	file:
gen_decl_die	dwarf2out.c	/^gen_decl_die (decl, context_die)$/;"	f	file:
gen_delay	genattrtab.c	/^gen_delay (def)$/;"	f	file:
gen_enumeration_type_die	dwarf2out.c	/^gen_enumeration_type_die (type, context_die)$/;"	f	file:
gen_exception_label	except.c	/^gen_exception_label ()$/;"	f
gen_exp	genemit.c	/^gen_exp (x)$/;"	f	file:
gen_expand	genconfig.c	/^gen_expand (insn)$/;"	f	file:
gen_expand	genemit.c	/^gen_expand (expand)$/;"	f	file:
gen_expand	genoutput.c	/^gen_expand (insn)$/;"	f	file:
gen_extend_insn	optabs.c	/^gen_extend_insn (x, y, mto, mfrom, unsignedp)$/;"	f
gen_fake_label	sdbout.c	/^gen_fake_label ()$/;"	f	file:
gen_field_die	dwarf2out.c	/^gen_field_die (decl, context_die)$/;"	f	file:
gen_formal_list_for_func_def	c-aux-info.c	/^gen_formal_list_for_func_def (fndecl, style)$/;"	f	file:
gen_formal_list_for_type	c-aux-info.c	/^gen_formal_list_for_type (fntype, style)$/;"	f	file:
gen_formal_parameter_die	dwarf2out.c	/^gen_formal_parameter_die (node, context_die)$/;"	f	file:
gen_formal_types_die	dwarf2out.c	/^gen_formal_types_die (function_or_method_type, context_die)$/;"	f	file:
gen_highpart	emit-rtl.c	/^gen_highpart (mode, x)$/;"	f
gen_imagpart	emit-rtl.c	/^gen_imagpart (mode, x)$/;"	f
gen_inheritance_die	dwarf2out.c	/^gen_inheritance_die (binfo, context_die)$/;"	f	file:
gen_inline_header_rtx	emit-rtl.c	/^gen_inline_header_rtx (first_insn, first_parm_insn, first_labelno,$/;"	f
gen_inlined_enumeration_type_die	dwarf2out.c	/^gen_inlined_enumeration_type_die (type, context_die)$/;"	f	file:
gen_inlined_structure_type_die	dwarf2out.c	/^gen_inlined_structure_type_die (type, context_die)$/;"	f	file:
gen_inlined_subroutine_die	dwarf2out.c	/^gen_inlined_subroutine_die (stmt, context_die, depth)$/;"	f	file:
gen_inlined_union_type_die	dwarf2out.c	/^gen_inlined_union_type_die (type, context_die)$/;"	f	file:
gen_insn	genattrtab.c	/^gen_insn (exp)$/;"	f	file:
gen_insn	gencodes.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genconfig.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genemit.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genextract.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genflags.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genopinit.c	/^gen_insn (insn)$/;"	f	file:
gen_insn	genoutput.c	/^gen_insn (insn)$/;"	f	file:
gen_label_die	dwarf2out.c	/^gen_label_die (decl, context_die)$/;"	f	file:
gen_label_rtx	emit-rtl.c	/^gen_label_rtx ()$/;"	f
gen_lexical_block_die	dwarf2out.c	/^gen_lexical_block_die (stmt, context_die, depth)$/;"	f	file:
gen_lowpart	combine.c	9192;"	d	file:
gen_lowpart	combine.c	96;"	d	file:
gen_lowpart	emit-rtl.c	/^gen_lowpart (mode, x)$/;"	f
gen_lowpart_common	emit-rtl.c	/^gen_lowpart_common (mode, x)$/;"	f
gen_lowpart_for_combine	combine.c	/^gen_lowpart_for_combine (mode, x)$/;"	f	file:
gen_lowpart_if_possible	cse.c	/^gen_lowpart_if_possible (mode, x)$/;"	f
gen_mem_addressof	function.c	/^gen_mem_addressof (reg, decl)$/;"	f
gen_member_die	dwarf2out.c	/^gen_member_die (type, context_die)$/;"	f	file:
gen_mode_int	reload1.c	/^gen_mode_int (mode, value)$/;"	f	file:
gen_move_insn	optabs.c	/^gen_move_insn (x, y)$/;"	f
gen_nonproto	genflags.c	/^gen_nonproto (insn)$/;"	f	file:
gen_peephole	genconfig.c	/^gen_peephole (peep)$/;"	f	file:
gen_peephole	genoutput.c	/^gen_peephole (peep)$/;"	f	file:
gen_peephole	genpeep.c	/^gen_peephole (peep)$/;"	f	file:
gen_proto	genflags.c	/^gen_proto (insn)$/;"	f	file:
gen_ptr_to_mbr_type_die	dwarf2out.c	/^gen_ptr_to_mbr_type_die (type, context_die)$/;"	f	file:
gen_push_operand	expr.c	/^gen_push_operand ()$/;"	f
gen_realpart	emit-rtl.c	/^gen_realpart (mode, x)$/;"	f
gen_reg_rtx	emit-rtl.c	/^gen_reg_rtx (mode)$/;"	f
gen_reload	reload1.c	/^gen_reload (out, in, opnum, type)$/;"	f
gen_rtvec	emit-rtl.c	/^gen_rtvec VPROTO((int n, ...))$/;"	f
gen_rtvec_v	emit-rtl.c	/^gen_rtvec_v (n, argp)$/;"	f
gen_rtvec_vv	emit-rtl.c	/^gen_rtvec_vv (n, argp)$/;"	f
gen_rtx	emit-rtl.c	/^gen_rtx VPROTO((enum rtx_code code, enum machine_mode mode, ...))$/;"	f
gen_rtx_CONST_DOUBLE	emit-rtl.c	/^gen_rtx_CONST_DOUBLE (mode, arg0, arg1, arg2)$/;"	f
gen_rtx_CONST_INT	emit-rtl.c	/^gen_rtx_CONST_INT (mode, arg)$/;"	f
gen_rtx_MEM	emit-rtl.c	/^gen_rtx_MEM (mode, addr)$/;"	f
gen_rtx_REG	emit-rtl.c	/^gen_rtx_REG (mode, regno)$/;"	f
gen_rtx_combine	combine.c	/^gen_rtx_combine VPROTO((enum rtx_code code, enum machine_mode mode, ...))$/;"	f	file:
gen_sequence	emit-rtl.c	/^gen_sequence ()$/;"	f
gen_set_type_die	dwarf2out.c	/^gen_set_type_die (type, context_die)$/;"	f	file:
gen_split	genconfig.c	/^gen_split (split)$/;"	f	file:
gen_split	genemit.c	/^gen_split (split)$/;"	f	file:
gen_split	genoutput.c	/^gen_split (split)$/;"	f	file:
gen_string_type_die	dwarf2out.c	/^gen_string_type_die (type, context_die)$/;"	f	file:
gen_struct_or_union_type_die	dwarf2out.c	/^gen_struct_or_union_type_die (type, context_die)$/;"	f	file:
gen_sub2_insn	optabs.c	/^gen_sub2_insn (x, y)$/;"	f
gen_subprogram_die	dwarf2out.c	/^gen_subprogram_die (decl, context_die)$/;"	f	file:
gen_subroutine_type_die	dwarf2out.c	/^gen_subroutine_type_die (type, context_die)$/;"	f	file:
gen_tagged_type_instantiation_die	dwarf2out.c	/^gen_tagged_type_instantiation_die (type, context_die)$/;"	f	file:
gen_type	c-aux-info.c	/^gen_type (ret_val, t, style)$/;"	f	file:
gen_type_die	dwarf2out.c	/^gen_type_die (type, context_die)$/;"	f	file:
gen_typedef_die	dwarf2out.c	/^gen_typedef_die (decl, context_die)$/;"	f	file:
gen_unary	combine.c	/^gen_unary (code, mode, op0_mode, op0)$/;"	f	file:
gen_unit	genattrtab.c	/^gen_unit (def)$/;"	f	file:
gen_unspecified_parameters_die	dwarf2out.c	/^gen_unspecified_parameters_die (decl_or_type, context_die)$/;"	f	file:
gen_variable_die	dwarf2out.c	/^gen_variable_die (decl, context_die)$/;"	f	file:
gencode	gengenrtl.c	/^gencode (f)$/;"	f	file:
gendecl	gengenrtl.c	/^gendecl (f, format)$/;"	f	file:
gendef	gengenrtl.c	/^gendef (f, format)$/;"	f	file:
general_induction_var	loop.c	/^general_induction_var (x, src_reg, add_val, mult_val, is_addr, pbenefit)$/;"	f	file:
general_operand	recog.c	/^general_operand (op, mode)$/;"	f
generate_macinfo_entry	dwarfout.c	/^generate_macinfo_entry (type_and_offset, string)$/;"	f	file:
generate_new_sfname_entry	dwarfout.c	/^generate_new_sfname_entry ()$/;"	f	file:
generate_srcinfo_entry	dwarfout.c	/^generate_srcinfo_entry (line_entry_num, files_entry_num)$/;"	f	file:
genheader	gengenrtl.c	/^genheader (f)$/;"	f	file:
genlegend	gengenrtl.c	/^genlegend (f)$/;"	f	file:
genmacro	gengenrtl.c	/^genmacro (f, idx)$/;"	f	file:
gesf2_libfunc	optabs.c	/^rtx gesf2_libfunc;$/;"	v
get_AT	dwarf2out.c	/^get_AT (die, attr_kind)$/;"	f	file:
get_AT_flag	dwarf2out.c	/^get_AT_flag (die, attr_kind)$/;"	f	file:
get_AT_hi_pc	dwarf2out.c	/^get_AT_hi_pc (die)$/;"	f	file:
get_AT_low_pc	dwarf2out.c	/^get_AT_low_pc (die)$/;"	f	file:
get_AT_string	dwarf2out.c	/^get_AT_string (die, attr_kind)$/;"	f	file:
get_AT_unsigned	dwarf2out.c	/^get_AT_unsigned (die, attr_kind)$/;"	f	file:
get_alias_set	tree.c	/^get_alias_set (t)$/;"	f
get_alias_set_entry	alias.c	/^get_alias_set_entry (alias_set)$/;"	f	file:
get_asm_operand_n_inputs	reg-stack.c	/^get_asm_operand_n_inputs (body)$/;"	f	file:
get_attr_length	final.c	/^get_attr_length (insn)$/;"	f
get_attr_value	genattrtab.c	/^get_attr_value (value, attr, insn_code)$/;"	f	file:
get_best_mode	stor-layout.c	/^get_best_mode (bitsize, bitpos, align, largest_mode, volatilep)$/;"	f
get_block_head_tail	haifa-sched.c	/^get_block_head_tail (bb, headp, tailp)$/;"	f	file:
get_branch_condition	reorg.c	/^get_branch_condition (insn, target)$/;"	f	file:
get_cie	frame.c	/^get_cie (fde *f)$/;"	f	file:
get_condition	loop.c	/^get_condition (jump, earliest)$/;"	f
get_condition_for_loop	loop.c	/^get_condition_for_loop (x)$/;"	f
get_cse_reg_info	cse.c	/^get_cse_reg_info (regno)$/;"	f	file:
get_directive_line	c-common.c	/^get_directive_line ()$/;"	f
get_directive_line	c-common.c	/^get_directive_line (finput)$/;"	f
get_directive_token	cpplib.c	/^get_directive_token (pfile)$/;"	f	file:
get_dynamic_cleanup_chain	except.c	/^get_dynamic_cleanup_chain ()$/;"	f
get_dynamic_handler_chain	except.c	/^get_dynamic_handler_chain ()$/;"	f
get_eh_context	except.c	/^get_eh_context ()$/;"	f
get_eh_context	libgcc2.c	/^static struct eh_context *(*get_eh_context) () = &eh_context_initialize;$/;"	v	file:
get_element	cse.c	/^get_element ()$/;"	f	file:
get_file_function_name	tree.c	/^get_file_function_name (kind)$/;"	f
get_file_function_name_long	tree.c	/^get_file_function_name_long (type)$/;"	f
get_first_block_beg	function.c	/^get_first_block_beg ()$/;"	f
get_first_handler	except.c	/^get_first_handler (region)$/;"	f
get_first_label_num	emit-rtl.c	/^get_first_label_num ()$/;"	f
get_first_nonparm_insn	function.c	/^get_first_nonparm_insn ()$/;"	f
get_frame_size	function.c	/^get_frame_size ()$/;"	f
get_hard_regnum	reg-stack.c	/^get_hard_regnum (regstack, reg)$/;"	f	file:
get_identifier	tree.c	/^get_identifier (text)$/;"	f
get_inner_array_type	tree.c	/^get_inner_array_type (array)$/;"	f
get_inner_reference	expr.c	/^get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode,$/;"	f
get_insns	emit-rtl.c	/^get_insns ()$/;"	f
get_integer_term	rtlanal.c	/^get_integer_term (x)$/;"	f
get_jump_flags	reorg.c	/^get_jump_flags (insn, label)$/;"	f	file:
get_key_value	prefix.c	/^get_key_value (key)$/;"	f	file:
get_label_after	jump.c	/^get_label_after (insn)$/;"	f
get_label_before	jump.c	/^get_label_before (insn)$/;"	f
get_label_from_map	integrate.c	/^get_label_from_map (map, i)$/;"	f
get_last_insn	emit-rtl.c	/^get_last_insn ()$/;"	f
get_last_insn_anywhere	emit-rtl.c	/^get_last_insn_anywhere ()$/;"	f
get_last_value	combine.c	/^get_last_value (x)$/;"	f	file:
get_last_value_validate	combine.c	/^get_last_value_validate (loc, insn, tick, replace)$/;"	f	file:
get_lintcmd	cccp.c	/^get_lintcmd (ibp, limit, argstart, arglen, cmdlen)$/;"	f	file:
get_max_uid	emit-rtl.c	/^get_max_uid ()$/;"	f
get_memory_rtx	expr.c	/^get_memory_rtx (exp)$/;"	f	file:
get_memory_usage_from_modifier	expr.c	/^get_memory_usage_from_modifier (modifier)$/;"	f	file:
get_narrower	tree.c	/^get_narrower (op, unsignedp_ptr)$/;"	f
get_new_handler	except.c	/^get_new_handler (handler, typeinfo)$/;"	f
get_parm_info	c-decl.c	/^get_parm_info (void_at_end)$/;"	f
get_pending_sizes	stor-layout.c	/^get_pending_sizes ()$/;"	f
get_pointer_alignment	expr.c	/^get_pointer_alignment (exp, max_align)$/;"	f	file:
get_pool_constant	varasm.c	/^get_pool_constant (addr)$/;"	f
get_pool_mode	varasm.c	/^get_pool_mode (addr)$/;"	f
get_pool_offset	varasm.c	/^get_pool_offset (addr)$/;"	f
get_pool_size	varasm.c	/^get_pool_size ()$/;"	f
get_pos_from_mask	combine.c	/^get_pos_from_mask (m, plen)$/;"	f	file:
get_push_address	expr.c	/^get_push_address (size)$/;"	f	file:
get_reg	libgcc2.c	/^get_reg (unsigned reg, frame_state *udata, frame_state *sub_udata)$/;"	f	file:
get_reg_addr	libgcc2.c	/^get_reg_addr (unsigned reg, frame_state *udata, frame_state *sub_udata)$/;"	f	file:
get_reg_for_handler	except.c	/^get_reg_for_handler ()$/;"	f
get_related_value	rtlanal.c	/^get_related_value (x)$/;"	f
get_return_addr	libgcc2.c	/^get_return_addr (frame_state *udata, frame_state *sub_udata)$/;"	f	file:
get_run_time	toplev.c	/^get_run_time ()$/;"	f
get_secondary_mem	reload.c	/^get_secondary_mem (x, mode, opnum, type)$/;"	f
get_set_constructor_bits	tree.c	/^get_set_constructor_bits (init, buffer, bit_size)$/;"	f
get_set_constructor_bytes	tree.c	/^get_set_constructor_bytes (init, buffer, wd_size)$/;"	f
get_tag	mips-tfile.c	/^get_tag (tag_start, tag_end_p1, indx, basic_type)$/;"	f
get_target_temp_slot_level	function.c	/^get_target_temp_slot_level ()$/;"	f
get_token	scan.c	/^get_token (fp, s)$/;"	f
get_true_reg	reg-stack.c	/^get_true_reg (pat)$/;"	f	file:
get_unwidened	tree.c	/^get_unwidened (op, for_type)$/;"	f
get_visual_tbl_length	haifa-sched.c	/^get_visual_tbl_length ()$/;"	f	file:
getcwd	getpwd.c	11;"	d	file:
getdecls	c-decl.c	/^getdecls ()$/;"	f
getf2_libfunc	optabs.c	/^rtx getf2_libfunc;$/;"	v
getopt	protoize.c	138;"	d	file:
getopt	protoize.c	140;"	d	file:
getpagesize	libgcc2.c	/^long getpagesize()$/;"	f
getpwd	getpwd.c	/^getpwd ()$/;"	f
gettags	c-decl.c	/^gettags ()$/;"	f
gexf2_libfunc	optabs.c	/^rtx gexf2_libfunc;$/;"	v
giv_number	loop.c	/^  int giv_number;$/;"	m	struct:combine_givs_stats
giv_number	loop.c	/^  int giv_number;$/;"	m	struct:recombine_givs_stats
give_switch	gcc.c	/^give_switch (switchnum, omit_first_word, include_blanks)$/;"	f	file:
glevel	mips-tdump.c	/^typedef enum glevel {$/;"	g	file:
glevel_0	mips-tdump.c	/^  glevel_0	= GLEVEL_0,$/;"	e	file:	enum:glevel
glevel_1	mips-tdump.c	/^  glevel_1	= GLEVEL_1,$/;"	e	file:	enum:glevel
glevel_2	mips-tdump.c	/^  glevel_2	= GLEVEL_2,$/;"	e	file:	enum:glevel
glevel_3	mips-tdump.c	/^  glevel_3	= GLEVEL_3$/;"	e	file:	enum:glevel
glevel_t	mips-tdump.c	/^} glevel_t;$/;"	t	file:
glevel_to_string	mips-tdump.c	/^glevel_to_string (g_level)$/;"	f
global	loop.c	/^  unsigned int global : 1;	\/* 1 means reg is live outside this loop *\/$/;"	m	struct:movable
global_alloc	global.c	/^global_alloc (file)$/;"	f
global_alloc_time	toplev.c	/^int global_alloc_time;$/;"	v
global_binding_level	c-decl.c	/^static struct binding_level *global_binding_level;$/;"	v	file:
global_bindings_p	c-decl.c	/^global_bindings_p ()$/;"	f
global_conflicts	global.c	/^global_conflicts ()$/;"	f	file:
global_const_equiv_varray	integrate.c	/^varray_type global_const_equiv_varray;$/;"	v
global_flag	protoize.c	/^static int global_flag = 0;		\/* set by -g option *\/$/;"	v	file:
global_hdr	mips-tdump.c	/^struct filehdr global_hdr;	\/* a.out header *\/$/;"	v
global_reg_dump	toplev.c	/^int global_reg_dump = 0;$/;"	v
global_regs	regclass.c	/^char global_regs[FIRST_PSEUDO_REGISTER];$/;"	v
global_rtl	emit-rtl.c	/^struct _global_rtl global_rtl =$/;"	v
global_rtl	genattrtab.c	/^struct _global_rtl global_rtl;$/;"	v
globalize_reg	regclass.c	/^globalize_reg (i)$/;"	f
gmalloc	gcse.c	/^gmalloc (size)$/;"	f	file:
gopen	libgcc2.c	/^gopen (char *fn, char *mode)$/;"	f	file:
got_define_asm_attributes	genattrtab.c	/^static int got_define_asm_attributes;$/;"	v	file:
got_name_map	cccp.c	/^    int got_name_map;$/;"	m	struct:file_name_list
goto_block_pat	reg-stack.c	/^goto_block_pat (insn, regstack, pat)$/;"	f	file:
goto_fixup	stmt.c	/^struct goto_fixup$/;"	s	file:
goto_fixup_chain	stmt.c	/^static struct goto_fixup *goto_fixup_chain;$/;"	v	file:
graph_dump_format	toplev.c	/^enum graph_dump_types graph_dump_format;$/;"	v
graph_ext	graph.c	/^static const char *graph_ext[] =$/;"	v	file:
grealloc	gcse.c	/^grealloc (ptr, size)$/;"	f	file:
grokdeclarator	c-decl.c	/^grokdeclarator (declarator, declspecs, decl_context, initialized)$/;"	f	file:
grokfield	c-decl.c	/^grokfield (filename, line, declarator, declspecs, width)$/;"	f
grokparms	c-decl.c	/^grokparms (parms_info, funcdef_flag)$/;"	f	file:
groktypename	c-decl.c	/^groktypename (typename)$/;"	f
groktypename_in_parm_context	c-decl.c	/^groktypename_in_parm_context (typename)$/;"	f
group_case_nodes	stmt.c	/^group_case_nodes (head)$/;"	f	file:
group_leader	haifa-sched.c	/^group_leader (insn)$/;"	f	file:
grow_outbuf	cccp.c	/^grow_outbuf (obuf, needed)$/;"	f	file:
gtdf2_libfunc	optabs.c	/^rtx gtdf2_libfunc;$/;"	v
gthf2_libfunc	optabs.c	/^rtx gthf2_libfunc;$/;"	v
gtsf2_libfunc	optabs.c	/^rtx gtsf2_libfunc;$/;"	v
gttf2_libfunc	optabs.c	/^rtx gttf2_libfunc;$/;"	v
gtxf2_libfunc	optabs.c	/^rtx gtxf2_libfunc;$/;"	v
hack_vms_include_specification	cccp.c	/^hack_vms_include_specification (fullname, vaxc_include)$/;"	f	file:
had_errors	mips-tfile.c	/^static int	 had_errors;$/;"	v	file:
had_errors	mips-tfile.c	/^static int	had_errors	= 0;		\/* != 0 if errors were found *\/$/;"	v	file:
haifa_classify_insn	haifa-sched.c	/^haifa_classify_insn (insn)$/;"	f	file:
haifa_edge	haifa-sched.c	/^haifa_edge;$/;"	t	file:
half_pic_address_p	halfpic.c	/^half_pic_address_p (addr)$/;"	f
half_pic_declare	halfpic.c	/^half_pic_declare (name)$/;"	f
half_pic_encode	halfpic.c	/^half_pic_encode (decl)$/;"	f
half_pic_external	halfpic.c	/^half_pic_external (name)$/;"	f
half_pic_finish	halfpic.c	/^half_pic_finish (stream)$/;"	f
half_pic_hash	halfpic.c	/^half_pic_hash (name, len, create_p)$/;"	f	file:
half_pic_init	halfpic.c	/^half_pic_init ()$/;"	f
half_pic_names	halfpic.c	/^static struct all_refs *half_pic_names;$/;"	v	file:
half_pic_number_ptrs	halfpic.c	/^int half_pic_number_ptrs	= 0;	\/* # distinct pointers found *\/$/;"	v
half_pic_number_refs	halfpic.c	/^int half_pic_number_refs	= 0;	\/* # half-pic references *\/$/;"	v
half_pic_obstack	halfpic.c	/^static struct obstack half_pic_obstack;$/;"	v	file:
half_pic_prefix	halfpic.c	/^static char *half_pic_prefix;$/;"	v	file:
half_pic_prefix_len	halfpic.c	/^static int   half_pic_prefix_len;$/;"	v	file:
half_pic_ptr	halfpic.c	/^half_pic_ptr (operand)$/;"	f
handle_avail_expr	gcse.c	/^handle_avail_expr (insn, expr)$/;"	f	file:
handle_braces	gcc.c	/^handle_braces (p)$/;"	f	file:
handle_directive	cccp.c	/^handle_directive (ip, op)$/;"	f	file:
handle_directive	cpplib.c	/^handle_directive (pfile)$/;"	f	file:
handle_generic_pragma	c-lex.c	/^handle_generic_pragma (token)$/;"	f	file:
handle_input	doschk.c	/^handle_input (line)$/;"	f
handle_pragma_token	c-pragma.c	/^handle_pragma_token (string, token)$/;"	f
handle_rd_kill_set	gcse.c	/^handle_rd_kill_set (insn, regno, bb)$/;"	f	file:
handler	collect2.c	/^handler (signo)$/;"	f	file:
handlers	except.c	/^  struct handler_info *handlers;$/;"	m	struct:func_eh_entry
hard_function_value	explow.c	/^hard_function_value (valtype, func)$/;"	f
hard_libcall_value	explow.c	/^hard_libcall_value (mode)$/;"	f
hard_reg_conflicts	global.c	/^static HARD_REG_SET *hard_reg_conflicts;$/;"	v	file:
hard_reg_copy_preferences	global.c	/^static HARD_REG_SET *hard_reg_copy_preferences;$/;"	v	file:
hard_reg_full_preferences	global.c	/^static HARD_REG_SET *hard_reg_full_preferences;$/;"	v	file:
hard_reg_n_uses	reload1.c	/^struct hard_reg_n_uses$/;"	s	file:
hard_reg_preferences	global.c	/^static HARD_REG_SET *hard_reg_preferences;$/;"	v	file:
hard_reg_set_here_p	reload.c	/^hard_reg_set_here_p (beg_regno, end_regno, x)$/;"	f	file:
hard_reg_use_compare	reload1.c	/^hard_reg_use_compare (p1p, p2p)$/;"	f	file:
hard_regs_in_table	cse.c	/^static HARD_REG_SET hard_regs_in_table;$/;"	v	file:
hard_regs_live	global.c	/^static HARD_REG_SET hard_regs_live;$/;"	v	file:
hard_regs_live_known	reload.c	/^static int hard_regs_live_known;$/;"	v	file:
hard_regs_saved	caller-save.c	/^static HARD_REG_SET hard_regs_saved;$/;"	v	file:
has_asm_insn	genattrtab.c	/^  int has_asm_insn;		\/* True if this value used for `asm' insns *\/$/;"	m	struct:attr_value
has_cleanups	tree.c	/^has_cleanups (exp)$/;"	f
hash_allocate	hash.c	/^hash_allocate (table, size)$/;"	f
hash_arg_in_memory	cse.c	/^static int hash_arg_in_memory;$/;"	v	file:
hash_arg_in_struct	cse.c	/^static int hash_arg_in_struct;$/;"	v	file:
hash_entry	protoize.c	/^  const hash_table_entry *	hash_entry; \/* -> to associated hash entry *\/$/;"	m	struct:file_info_struct
hash_entry	protoize.c	/^  hash_table_entry *	hash_entry;	\/* -> hash entry for function name *\/$/;"	m	struct:def_dec_info_struct
hash_expr	gcse.c	/^hash_expr (x, mode, do_not_record_p, hash_table_size)$/;"	f	file:
hash_expr_1	gcse.c	/^hash_expr_1 (x, mode, do_not_record_p)$/;"	f	file:
hash_lookup	hash.c	/^hash_lookup (table, key, create, copy)$/;"	f
hash_mask	protoize.c	/^static const int hash_mask = (HASH_TABLE_SIZE - 1);$/;"	v	file:
hash_newfunc	hash.c	/^hash_newfunc (entry, table, p)$/;"	f
hash_next	halfpic.c	/^  struct all_refs *hash_next;	\/* next name in hash chain *\/$/;"	m	struct:all_refs
hash_next	protoize.c	/^  hash_table_entry *		hash_next;	\/* -> to secondary entries *\/$/;"	m	struct:hash_table_entry_struct
hash_no	mips-tfile.c	/^  hash_no	= 0,		\/* don't hash type *\/$/;"	e	file:	enum:hash_state
hash_obstack	genattrtab.c	/^struct obstack *hash_obstack = &obstack1;$/;"	v
hash_ptr	mips-tfile.c	/^  struct shash	 *hash_ptr;	\/* pointer to the hash table head *\/$/;"	m	struct:tag
hash_record	mips-tfile.c	/^  hash_record	= 2		\/* ok to record hash, but don't use prev.  *\/$/;"	e	file:	enum:hash_state
hash_scan_call	gcse.c	/^hash_scan_call (x, insn)$/;"	f	file:
hash_scan_clobber	gcse.c	/^hash_scan_clobber (x, insn)$/;"	f	file:
hash_scan_insn	gcse.c	/^hash_scan_insn (insn, set_p, in_libcall_block)$/;"	f	file:
hash_scan_set	gcse.c	/^hash_scan_set (pat, insn, set_p)$/;"	f	file:
hash_set	gcse.c	/^hash_set (regno, hash_table_size)$/;"	f	file:
hash_state	mips-tfile.c	/^typedef enum hash_state {$/;"	g	file:
hash_state_t	mips-tfile.c	/^} hash_state_t;$/;"	t	file:
hash_string	mips-tfile.c	/^hash_string (text, hash_len, hash_tbl, ret_hash_index)$/;"	f
hash_tab	gen-protos.c	/^int hash_tab[HASH_SIZE];$/;"	v
hash_table	protoize.c	/^typedef hash_table_entry hash_table[HASH_TABLE_SIZE];$/;"	t	file:
hash_table	tree.c	/^static tree hash_table[MAX_HASH_TABLE];	\/* id hash buckets *\/$/;"	v	file:
hash_table_entry	protoize.c	/^typedef struct hash_table_entry_struct hash_table_entry;$/;"	t	file:
hash_table_entry_struct	protoize.c	/^struct hash_table_entry_struct {$/;"	s	file:
hash_table_free	hash.c	/^hash_table_free (table)$/;"	f
hash_table_init	hash.c	/^hash_table_init (table, newfunc, hash, comp)$/;"	f
hash_table_init_n	hash.c	/^hash_table_init_n (table, newfunc, hash, comp, size)$/;"	f
hash_traverse	hash.c	/^hash_traverse (table, func, info)$/;"	f
hash_yes	mips-tfile.c	/^  hash_yes	= 1,		\/* ok to hash type, or use previous hash *\/$/;"	e	file:	enum:hash_state
hashcode	genattrtab.c	/^  int hashcode;			\/* Hash code of this rtx or string.  *\/$/;"	m	struct:attr_hash
hashcode	tree.c	/^  int hashcode;			\/* Hash code of this type.  *\/$/;"	m	struct:type_hash
hashf	cccp.c	/^hashf (name, len, hashsize)$/;"	f	file:
hashf	cpphash.c	/^hashf (name, len, hashsize)$/;"	f
hashnode	cccp.c	/^struct hashnode {$/;"	s	file:
hashtab	cccp.c	/^static HASHNODE *hashtab[HASHSIZE];$/;"	v	file:
hashval	cccp.c	/^union hashval {$/;"	u	file:
have_add2_insn	optabs.c	/^have_add2_insn (mode)$/;"	f
have_annul_false	genattrtab.c	/^static int have_annul_true, have_annul_false;$/;"	v	file:
have_annul_true	genattrtab.c	/^static int have_annul_true, have_annul_false;$/;"	v	file:
have_cc0_flag	genconfig.c	/^static int have_cc0_flag;$/;"	v	file:
have_cmove_flag	genconfig.c	/^static int have_cmove_flag;$/;"	v	file:
have_constraints	genoutput.c	/^int have_constraints;$/;"	v
have_error	genoutput.c	/^static int have_error;$/;"	v	file:
have_lo_sum_flag	genconfig.c	/^static int have_lo_sum_flag;$/;"	v	file:
have_sub2_insn	optabs.c	/^have_sub2_insn (mode)$/;"	f
have_used_extensions	dbxout.c	/^static int have_used_extensions = 0;$/;"	v	file:
hdr	collect2.c	/^  ldc_header_t			hdr;	\/* common header *\/$/;"	m	union:load_union
he	function.c	/^  struct hash_entry he;$/;"	m	struct:insns_for_mem_entry
head	collect2.c	/^struct head$/;"	s	file:
hhlen	c-common.c	/^  tree *hhlen;$/;"	m	struct:
hi	dwarf2out.c	/^  unsigned long hi;$/;"	m	struct:dw_long_long_struct
high	libgcc2.c	/^  struct DIstruct {SItype high, low;};$/;"	m	struct:DIstruct
high	libgcc2.c	/^  struct DIstruct {SItype low, high;};$/;"	m	struct:DIstruct
high	stmt.c	/^  tree			high;	\/* Highest index value for this label *\/$/;"	m	struct:case_node
high	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	struct:rtx_const::<anonymous>::<anonymous>
high_block_linenum	final.c	/^static int high_block_linenum;$/;"	v	file:
high_cuid	cse.c	/^  int high_cuid;$/;"	m	struct:cse_basic_block_data
high_function_linenum	final.c	/^static int high_function_linenum;$/;"	v	file:
high_pc_attribute	dwarfout.c	/^high_pc_attribute (asm_high_label)$/;"	f	file:
highest_outgoing_arg_in_use	calls.c	/^static int highest_outgoing_arg_in_use;$/;"	v	file:
hlen	c-common.c	/^  tree *hlen;$/;"	m	struct:
ht	function.c	/^  struct hash_table *ht;$/;"	m	struct:insns_for_mem_walk_info
i	c-typeck.c	/^      int i;$/;"	m	union:spelling::<anonymous>
i	combine.c	/^  union {rtx *r; int *i;} where;$/;"	m	union:undo::<anonymous>
i	combine.c	/^  union {rtx r; int i;} old_contents;$/;"	m	union:undo::<anonymous>
i	libgcc1.c	/^union flt_or_int { int i; float f; };$/;"	m	union:flt_or_int
i	libgcc1.c	/^union flt_or_value { FLOAT_VALUE_TYPE i; float f; };$/;"	m	union:flt_or_value
i	loop.c	/^  int i;$/;"	m	struct:rtx_and_int
i	tree.c	/^  tree type, i;$/;"	m	struct:brfic_args
i1	fp-test.c	/^int i1, i2 = 2;$/;"	v
i2	fp-test.c	/^int i1, i2 = 2;$/;"	v
i_define	enquire.c	/^Procedure i_define(desc, extra, sort, name, val, lim, req, mark)$/;"	f
ibmtoe	real.c	/^ibmtoe (d, e, mode)$/;"	f	file:
id	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	m	struct:
id	c-pragma.c	/^  tree                 id;$/;"	m	struct:align_stack
id	collect2.c	/^struct id $/;"	s	file:
id_clash_len	toplev.c	/^unsigned id_clash_len;$/;"	v
id_kind	tree.c	/^  id_kind,$/;"	e	file:
id_string_size	tree.c	/^int id_string_size = 0;$/;"	v
identify_blocks	function.c	/^identify_blocks (block, insns)$/;"	f
identify_lineno	protoize.c	/^identify_lineno (clean_p)$/;"	f	file:
identity_fn	genattrtab.c	/^identity_fn (exp)$/;"	f	file:
if_elt	c-common.c	/^} if_elt;$/;"	t	file:
if_stack	c-common.c	/^static if_elt *if_stack;$/;"	v	file:
if_stack	cccp.c	/^  struct if_stack *if_stack;$/;"	m	struct:file_buf
if_stack	cccp.c	/^static IF_STACK_FRAME *if_stack = NULL;$/;"	v	file:
if_stack	cccp.c	/^struct if_stack {$/;"	s	file:
if_stack_pointer	c-common.c	/^static int if_stack_pointer = 0;$/;"	v	file:
if_stack_space	c-common.c	/^static int if_stack_space = 0;$/;"	v	file:
if_stmt_file	c-parse.c	/^static char *if_stmt_file;$/;"	v	file:
if_stmt_line	c-parse.c	/^static int if_stmt_line;$/;"	v	file:
if_succeeded	cccp.c	/^  int if_succeeded;		\/* true if a leg of this if-group$/;"	m	struct:if_stack
if_then_else_cond	combine.c	/^if_then_else_cond (x, ptrue, pfalse)$/;"	f	file:
ifd	mips-tfile.c	/^  symint_t	  ifd;		\/* file # tag defined in *\/$/;"	m	struct:tag
ifd_ptr	mips-tfile.c	/^  AUXU		 *ifd_ptr;	\/* pointer to store file index *\/$/;"	m	struct:forward
ignore_code	genrecog.c	/^  char ignore_code;		\/* If non-zero, need not test code *\/$/;"	m	struct:decision
ignore_escape_flag	cccp.c	/^static int ignore_escape_flag = 1;$/;"	v	file:
ignore_library	collect2.c	/^ignore_library (name)$/;"	f	file:
ignore_mode	genrecog.c	/^  char ignore_mode;		\/* If non-zero, need not test mode *\/$/;"	m	struct:decision
ignore_next_note	profile.c	/^static int ignore_next_note;$/;"	v	file:
ignore_some_movables	loop.c	/^ignore_some_movables (movables)$/;"	f	file:
ignore_srcdir	cccp.c	/^static int ignore_srcdir;$/;"	v	file:
imag	c-lex.c	/^  int imag;$/;"	m	struct:pf_args
immed_double_const	varasm.c	/^immed_double_const (i0, i1, mode)$/;"	f
immed_real_const	varasm.c	/^immed_real_const (exp)$/;"	f
immed_real_const_1	varasm.c	/^immed_real_const_1 (d, mode)$/;"	f
immediate_operand	recog.c	/^immediate_operand (op, mode)$/;"	f
immediate_size_expand	stor-layout.c	/^int immediate_size_expand;$/;"	v
immune_p	reload.c	/^immune_p (x, y, ydata)$/;"	f	file:
implicit	c-typeck.c	/^  char implicit;$/;"	m	struct:constructor_stack
implicitly_declare	c-decl.c	/^implicitly_declare (functionid)$/;"	f
import_file	collect2.c	/^static char *import_file;	        \/* <xxx>.p for AIX import list.  *\/$/;"	v	file:
imports	collect2.c	/^static struct head imports;		\/* list of imported symbols *\/$/;"	v	file:
in_arg_offset	function.c	/^static int in_arg_offset;$/;"	v	file:
in_bss	varasm.c	/^  , in_bss$/;"	e	file:	enum:in_section
in_check_memory_usage	expr.c	/^static int in_check_memory_usage;$/;"	v	file:
in_class	dwarfout.c	/^static int in_class;$/;"	v	file:
in_data	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	file:	enum:in_section
in_data_section	varasm.c	/^in_data_section ()$/;"	f
in_edges	haifa-sched.c	/^static int *in_edges;$/;"	v	file:
in_eh_frame	varasm.c	/^  , in_eh_frame$/;"	e	file:	enum:in_section
in_extern_C_brace	scan-decls.c	32;"	d	file:
in_inc_dec	regclass.c	/^static char *in_inc_dec;$/;"	v	file:
in_memory	cse.c	/^  char in_memory;$/;"	m	struct:table_elt
in_named	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	file:	enum:in_section
in_named_name	varasm.c	/^static char *in_named_name;$/;"	v	file:
in_nonparm_insns	integrate.c	/^static int in_nonparm_insns;$/;"	v	file:
in_parm_level_p	c-decl.c	/^in_parm_level_p ()$/;"	f
in_reg_window	libgcc2.c	/^in_reg_window (int reg, frame_state *udata)$/;"	f	file:
in_reg_window	libgcc2.c	/^static inline int in_reg_window (int reg, frame_state *udata) { return 0; }$/;"	f	file:
in_same_eh_region	except.c	/^in_same_eh_region (insn1, insn2) $/;"	f
in_section	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	g	file:
in_section	varasm.c	/^} in_section = no_section;$/;"	v	file:
in_sequence_p	emit-rtl.c	/^in_sequence_p ()$/;"	f
in_struct	cse.c	/^  char in_struct;$/;"	m	struct:table_elt
in_system_header	toplev.c	/^int in_system_header = 0;$/;"	v
in_system_include_dir	protoize.c	/^in_system_include_dir (path)$/;"	f	file:
in_text	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	file:	enum:in_section
in_text_section	varasm.c	/^in_text_section ()$/;"	f
in_use	function.c	/^  char in_use;$/;"	m	struct:temp_slot
inc	cccp.c	/^  struct include_file *inc;$/;"	m	struct:file_buf
inc_filename	fix-header.c	/^char *inc_filename;$/;"	v
inc_filename_length	fix-header.c	/^int inc_filename_length;$/;"	v
inc_for_reload	reload1.c	/^inc_for_reload (reloadreg, in, value, inc_amount)$/;"	f	file:
include	cccp.c	/^static struct file_name_list *include = 0;	\/* First dir to search *\/$/;"	v	file:
include_defaults	cccp.c	/^static struct default_include *include_defaults = include_defaults_array;$/;"	v	file:
include_defaults	protoize.c	/^			 int x1, x2; } include_defaults[]$/;"	v
include_defaults_array	cccp.c	/^} include_defaults_array[]$/;"	v	file:
include_defaults_array	cppinit.c	/^include_defaults_array[]$/;"	v	file:
include_entry	fix-header.c	/^struct std_include_entry *include_entry;$/;"	v
include_file	cccp.c	/^struct include_file {$/;"	s	file:
include_hash	cppfiles.c	/^include_hash (pfile, fname, add)$/;"	f
include_hashtab	cccp.c	/^static struct include_file *include_hashtab[INCLUDE_HASHSIZE];$/;"	v	file:
include_ino_hashtab	cccp.c	/^static struct include_file *include_ino_hashtab[INCLUDE_HASHSIZE];$/;"	v	file:
include_prefix	cccp.c	/^static char *include_prefix;$/;"	v	file:
include_prefixes	gcc.c	/^static struct path_prefix include_prefixes = { 0, 0, "include" };$/;"	v	file:
included	cccp.c	/^  int included;                 \/* Set if the directory is acceptable.  *\/$/;"	m	struct:default_include
incomplete_decl_finalize_hook	toplev.c	/^void (*incomplete_decl_finalize_hook) PROTO((tree)) = 0;$/;"	v
incomplete_type_error	c-typeck.c	/^incomplete_type_error (value, type)$/;"	f
incomplete_types	dwarf2out.c	/^static unsigned incomplete_types;$/;"	v	file:
incomplete_types	dwarfout.c	/^static unsigned incomplete_types;$/;"	v	file:
incomplete_types_allocated	dwarf2out.c	/^static unsigned incomplete_types_allocated;$/;"	v	file:
incomplete_types_allocated	dwarfout.c	/^static unsigned incomplete_types_allocated;$/;"	v	file:
incomplete_types_list	dwarf2out.c	/^static tree *incomplete_types_list;$/;"	v	file:
incomplete_types_list	dwarfout.c	/^static tree *incomplete_types_list;$/;"	v	file:
incr_ticks_for_insn	resource.c	/^incr_ticks_for_insn (insn)$/;"	f
increment_current_value	genattrtab.c	/^increment_current_value (space, ndim)$/;"	f	file:
incremental	c-typeck.c	/^  char incremental;$/;"	m	struct:constructor_stack
incremental	c-typeck.c	/^  char incremental;$/;"	m	struct:initializer_stack
indent	print-rtl.c	/^static int indent;$/;"	v	file:
indent_level	c-lex.c	/^static int indent_level = 0;        \/* Number of { minus number of }. *\/$/;"	v	file:
indent_string	protoize.c	/^static const char *indent_string = "     ";	\/* Indentation for newly$/;"	v	file:
indent_to	print-tree.c	/^indent_to (file, column)$/;"	f
indents	genrecog.c	/^static const char *indents[]$/;"	v	file:
indepth	cccp.c	/^static int indepth = -1;$/;"	v	file:
index	c-typeck.c	/^  tree index;$/;"	m	struct:constructor_stack
index	mips-tdump.c	27;"	d	file:
index	mips-tfile.c	666;"	d	file:
index0	cccp.c	/^index0 (s, c, n)$/;"	f	file:
index_expr	stmt.c	/^	  tree index_expr;$/;"	m	struct:nesting::<anonymous>::<anonymous>
index_number	genoutput.c	/^  int index_number;$/;"	m	struct:data
index_ptr	mips-tfile.c	/^  AUXU		 *index_ptr;	\/* pointer to store symbol index *\/$/;"	m	struct:forward
index_type_equal	tree.c	/^index_type_equal (itype1, itype2)$/;"	f
indirect_jump_in_function	loop.c	/^int indirect_jump_in_function = 0;$/;"	v
indirect_jump_in_function_p	loop.c	/^indirect_jump_in_function_p (start)$/;"	f	file:
indirect_operand	recog.c	/^indirect_operand (op, mode)$/;"	f
indirect_symref_ok	reload1.c	/^char indirect_symref_ok;$/;"	v
indx	mips-tfile.c	/^  symint_t	  indx;		\/* index within file's local symbols *\/$/;"	m	struct:tag
indx	mips-tfile.c	/^  symint_t	 indx;		\/* index within string table *\/$/;"	m	struct:shash
indx	mips-tfile.c	/^  symint_t	 indx;		\/* index within string table *\/$/;"	m	struct:thash
inequality_comparisons_p	rtlanal.c	/^inequality_comparisons_p (x)$/;"	f
inf_buffer	fix-header.c	/^char *inf_buffer;$/;"	v
inf_limit	fix-header.c	/^char *inf_limit;$/;"	v
inf_ptr	fix-header.c	/^char *inf_ptr;$/;"	v
inf_read_upto	fix-header.c	/^inf_read_upto (str, delim)$/;"	f
inf_scan_ident	fix-header.c	/^inf_scan_ident (s, c)$/;"	f
inf_skip_spaces	fix-header.c	/^inf_skip_spaces (c)$/;"	f
infile	gcc.c	/^struct infile$/;"	s	file:
infiles	gcc.c	/^static struct infile *infiles;$/;"	v	file:
info	collect2.c	/^  gen_info_command_t		info;	\/* object information *\/$/;"	m	union:load_union
inhibit_defer_pop	expr.c	/^int inhibit_defer_pop;$/;"	v
inhibit_libc	libgcc2.c	64;"	d	file:
inhibit_warnings	cccp.c	/^static int inhibit_warnings = 0;$/;"	v	file:
inhibit_warnings	toplev.c	/^int inhibit_warnings = 0;$/;"	v
init_alias_analysis	alias.c	/^init_alias_analysis ()$/;"	f
init_alias_once	alias.c	/^init_alias_once ()$/;"	f
init_arc	gcov.c	/^init_arc (arcptr, source, target, bb_graph)$/;"	f	file:
init_arc	profile.c	/^init_arc (arcptr, source, target, insn)$/;"	f	file:
init_arc_profiler	profile.c	/^init_arc_profiler ()$/;"	f	file:
init_attributes	c-common.c	/^init_attributes ()$/;"	f	file:
init_block_visualization	haifa-sched.c	/^init_block_visualization ()$/;"	f	file:
init_branch_prob	profile.c	/^init_branch_prob (filename)$/;"	f
init_caller_save	caller-save.c	/^init_caller_save ()$/;"	f
init_const_rtx_hash_table	varasm.c	/^init_const_rtx_hash_table ()$/;"	f
init_cost	regclass.c	/^static struct costs init_cost;$/;"	v	file:
init_decl_processing	c-decl.c	/^init_decl_processing ()$/;"	f
init_dummy	crtstuff.c	/^init_dummy (void)$/;"	f	file:
init_eh	except.c	/^init_eh ()$/;"	f
init_eh_for_function	except.c	/^init_eh_for_function ()$/;"	f
init_elim_table	reload1.c	/^init_elim_table ()$/;"	f	file:
init_emit	emit-rtl.c	/^init_emit ()$/;"	f
init_emit_once	emit-rtl.c	/^init_emit_once (line_numbers)$/;"	f
init_expmed	expmed.c	/^init_expmed ()$/;"	f
init_expr	expr.c	/^init_expr ()$/;"	f
init_expr_once	expr.c	/^init_expr_once ()$/;"	f
init_file	mips-tfile.c	/^static efdr_t init_file = $/;"	v	file:
init_final	final.c	/^init_final (filename)$/;"	f
init_floating_libfuncs	optabs.c	/^init_floating_libfuncs (optable, opname, suffix)$/;"	f	file:
init_function_format_info	c-common.c	/^init_function_format_info ()$/;"	f
init_function_start	function.c	/^init_function_start (subr, filename, line)$/;"	f
init_insn_eh_region	except.c	/^init_insn_eh_region (first, max_uid)$/;"	f
init_insn_lengths	final.c	/^init_insn_lengths ()$/;"	f
init_integral_libfuncs	optabs.c	/^init_integral_libfuncs (optable, opname, suffix)$/;"	f	file:
init_iterators	c-iterate.c	/^init_iterators ()$/;"	f
init_label_info	jump.c	/^init_label_info (f)$/;"	f	file:
init_lex	c-lex.c	/^init_lex ()$/;"	f
init_libfuncs	optabs.c	/^init_libfuncs (optable, first_mode, last_mode, opname, suffix)$/;"	f	file:
init_loop	loop.c	/^init_loop ()$/;"	f
init_node	c-typeck.c	/^struct init_node$/;"	s	file:
init_noncopied_parts	expr.c	/^init_noncopied_parts (lhs, list)$/;"	f	file:
init_object_mutex	frame.c	/^init_object_mutex (void)$/;"	f	file:
init_object_mutex_once	frame.c	/^init_object_mutex_once (void)$/;"	f	file:
init_object_mutex_once	frame.c	137;"	d	file:
init_object_mutex_once	frame.c	152;"	d	file:
init_obstacks	tree.c	/^init_obstacks ()$/;"	f
init_optab	optabs.c	/^init_optab (code)$/;"	f	file:
init_optabs	optabs.c	/^init_optabs ()$/;"	f
init_parse	c-lex.c	/^init_parse (filename)$/;"	f
init_pending_stack_adjust	expr.c	/^init_pending_stack_adjust ()$/;"	f
init_queue	expr.c	/^init_queue ()$/;"	f	file:
init_range	genattr.c	/^init_range (range)$/;"	f	file:
init_recog	recog.c	/^init_recog ()$/;"	f
init_recog_no_volatile	recog.c	/^init_recog_no_volatile ()$/;"	f
init_reg_last_arrays	combine.c	/^init_reg_last_arrays ()$/;"	f	file:
init_reg_map	unroll.c	/^init_reg_map (map, maxregnum)$/;"	f	file:
init_reg_modes	regclass.c	/^init_reg_modes ()$/;"	f	file:
init_reg_sets	regclass.c	/^init_reg_sets ()$/;"	f
init_reg_sets_1	regclass.c	/^init_reg_sets_1 ()$/;"	f	file:
init_regs	regclass.c	/^init_regs ()$/;"	f
init_regset_vector	flow.c	/^init_regset_vector (vector, nelts, alloc_obstack)$/;"	f	file:
init_reload	reload1.c	/^init_reload ()$/;"	f
init_resource_info	resource.c	/^init_resource_info (epilogue_insn)$/;"	f
init_rgn_data_dependences	haifa-sched.c	/^init_rgn_data_dependences (n_bbs)$/;"	f	file:
init_rtl	rtl.c	/^init_rtl ()$/;"	f
init_rtx_vector	haifa-sched.c	/^init_rtx_vector (vector, space, nelts, bytes_per_elt)$/;"	f	file:
init_save_areas	caller-save.c	/^init_save_areas ()$/;"	f
init_spec	gcc.c	/^init_spec ()$/;"	f	file:
init_stmt	stmt.c	/^init_stmt ()$/;"	f
init_stmt_for_function	stmt.c	/^init_stmt_for_function ()$/;"	f
init_target_units	haifa-sched.c	/^init_target_units ()$/;"	f	file:
init_temp_slots	function.c	/^init_temp_slots ()$/;"	f
init_traps	optabs.c	/^init_traps ()$/;"	f	file:
init_tree_codes	tree.c	/^init_tree_codes ()$/;"	f
init_virtual_regs	emit-rtl.c	/^init_virtual_regs ()$/;"	f
initial_call_used_regs	regclass.c	/^static char initial_call_used_regs[] = CALL_USED_REGISTERS;$/;"	v	file:
initial_fixed_regs	regclass.c	/^static char initial_fixed_regs[] = FIXED_REGISTERS;$/;"	v	file:
initial_offset	reload1.c	/^  int initial_offset;		\/* Initial difference between values.  *\/$/;"	m	struct:elim_table
initial_reg_note_copy	unroll.c	/^initial_reg_note_copy (notes, map)$/;"	f	file:
initial_return_save	dwarf2out.c	/^initial_return_save (rtl)$/;"	f	file:
initial_value	calls.c	/^  rtx initial_value;$/;"	m	struct:arg_data
initialize_argument_information	calls.c	/^initialize_argument_information (num_actuals, args, args_size, n_named_args,$/;"	f	file:
initialize_builtins	cccp.c	/^initialize_builtins (inp, outp)$/;"	f	file:
initialize_builtins	cppinit.c	/^initialize_builtins (pfile)$/;"	f	file:
initialize_char_syntax	cccp.c	/^initialize_char_syntax ()$/;"	f	file:
initialize_char_syntax	cppinit.c	/^initialize_char_syntax (dollar_in_ident)$/;"	f	file:
initialize_dependency_output	cppinit.c	/^initialize_dependency_output (pfile)$/;"	f	file:
initialize_for_inline	integrate.c	/^initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)$/;"	f	file:
initialize_input_buffer	cppfiles.c	/^initialize_input_buffer (pfile, fd, st)$/;"	f	file:
initialize_random_junk	cexp.c	/^initialize_random_junk ()$/;"	f	file:
initializer_constant_valid_p	c-typeck.c	/^initializer_constant_valid_p (value, endtype)$/;"	f
initializer_stack	c-typeck.c	/^struct initializer_stack *initializer_stack;$/;"	v
initializer_stack	c-typeck.c	/^struct initializer_stack$/;"	s	file:
initname	collect2.c	/^static char *initname, *fininame;	\/* names of init and fini funcs *\/$/;"	v	file:
inline_attribute	dwarfout.c	/^inline_attribute (decl)$/;"	f	file:
inline_function_decl	function.c	/^tree inline_function_decl;$/;"	v
inline_max_insns	integrate.c	/^int inline_max_insns = 10000;$/;"	v
inline_obstacks	tree.c	/^struct simple_obstack_stack *inline_obstacks;$/;"	v
inner_dest	cse.c	/^  rtx inner_dest;$/;"	m	struct:set
inner_dest_loc	cse.c	/^  rtx *inner_dest_loc;$/;"	m	struct:set
innermost_stack_block	stmt.c	/^	  struct nesting *innermost_stack_block;$/;"	m	struct:nesting::<anonymous>::<anonymous>
input_basename	gcc.c	/^static const char *input_basename;$/;"	v	file:
input_file_name	gcov.c	/^static char *input_file_name = 0;$/;"	v	file:
input_file_name_index	protoize.c	/^static int input_file_name_index = 0;$/;"	v	file:
input_file_number	gcc.c	/^static int input_file_number;$/;"	v	file:
input_file_stack	toplev.c	/^struct file_stack *input_file_stack;$/;"	v
input_file_stack_tick	cccp.c	/^static int input_file_stack_tick;  \/* Incremented when the status changes.  *\/$/;"	v	file:
input_file_stack_tick	toplev.c	/^int input_file_stack_tick;$/;"	v
input_filename	gcc.c	/^const char *input_filename;$/;"	v
input_filename	toplev.c	/^char *input_filename;$/;"	v
input_filename_length	gcc.c	/^size_t input_filename_length;$/;"	v
input_from_pipe	gcc.c	/^static int input_from_pipe;$/;"	v	file:
input_name	mips-tfile.c	/^static const char *input_name	= "stdin";	\/* name of input file *\/$/;"	v	file:
input_name	mips-tfile.c	/^static const char *input_name;$/;"	v	file:
input_suffix	gcc.c	/^static const char *input_suffix;$/;"	v	file:
insert	cse.c	/^insert (x, classp, hash, mode)$/;"	f	file:
insert_bct	loop.c	/^insert_bct (loop_start, loop_end, loop_info)$/;"	f	file:
insert_block	c-decl.c	/^insert_block (block)$/;"	f
insert_expr_in_table	gcse.c	/^insert_expr_in_table (x, mode, insn, antic_p, avail_p)$/;"	f	file:
insert_insn_end_bb	gcse.c	/^insert_insn_end_bb (expr, bb, pre)$/;"	f	file:
insert_insn_ent	genattrtab.c	/^insert_insn_ent (av, ie)$/;"	f	file:
insert_insn_on_edge	flow.c	/^insert_insn_on_edge (pattern, e)$/;"	f
insert_loop_mem	loop.c	/^insert_loop_mem (mem, data)$/;"	f	file:
insert_one_insn	caller-save.c	/^insert_one_insn (chain, before_p, code, pat)$/;"	f	file:
insert_regs	cse.c	/^insert_regs (x, classp, modified)$/;"	f	file:
insert_restore	caller-save.c	/^insert_restore (chain, before_p, regno, maxrestore)$/;"	f	file:
insert_right_side	genattrtab.c	/^insert_right_side (code, exp, term, insn_code, insn_index)$/;"	f	file:
insert_save	caller-save.c	/^insert_save (chain, before_p, regno, to_save)$/;"	f	file:
insert_set_in_table	gcse.c	/^insert_set_in_table (x, insn)$/;"	f	file:
insert_subset_children	alias.c	/^insert_subset_children (node, data)$/;"	f	file:
insn	function.c	/^  rtx insn;$/;"	m	struct:insns_for_mem_walk_info
insn	gcse.c	/^  rtx insn;$/;"	m	struct:occr
insn	gcse.c	/^  rtx insn;$/;"	m	struct:reg_set
insn	loop.c	/^  rtx insn;			\/* A movable insn *\/$/;"	m	struct:movable
insn	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	m	struct:reg_use
insn_addresses	final.c	/^int *insn_addresses;$/;"	v
insn_alternatives	genattrtab.c	/^static int *insn_alternatives;$/;"	v	file:
insn_blockage	haifa-sched.c	/^static unsigned int *insn_blockage;$/;"	v	file:
insn_blockage	sched.c	/^static unsigned int *insn_blockage;$/;"	v	file:
insn_code	genattrtab.c	/^  int insn_code;		\/* Instruction number.  *\/$/;"	m	struct:insn_def
insn_code	genattrtab.c	/^  int insn_code;		\/* Instruction number.  *\/$/;"	m	struct:insn_ent
insn_code	genextract.c	/^  int insn_code;$/;"	m	struct:code_ptr
insn_code_number	genattrtab.c	/^static int insn_code_number;$/;"	v	file:
insn_code_number	gencodes.c	/^static int insn_code_number;$/;"	v	file:
insn_code_number	genemit.c	/^static int insn_code_number;$/;"	v	file:
insn_code_number	genextract.c	/^static int insn_code_number;$/;"	v	file:
insn_code_number	genpeep.c	/^static int insn_code_number = 0;$/;"	v	file:
insn_code_number	genrecog.c	/^  int insn_code_number;		\/* Insn number matched, if success *\/$/;"	m	struct:decision
insn_cost	haifa-sched.c	/^insn_cost (insn, link, used)$/;"	f	file:
insn_cost	sched.c	/^insn_cost (insn, link, used)$/;"	f	file:
insn_costs	haifa-sched.c	/^static short *insn_costs;$/;"	v	file:
insn_costs	sched.c	/^static short *insn_costs;$/;"	v	file:
insn_counter	final.c	/^static int insn_counter = 0;$/;"	v	file:
insn_cuid	combine.c	/^insn_cuid (insn)$/;"	f	file:
insn_current_address	final.c	/^int insn_current_address;$/;"	v
insn_current_align	final.c	/^int insn_current_align;$/;"	v
insn_current_reference_address	final.c	/^insn_current_reference_address (branch)$/;"	f
insn_data	genoutput.c	/^struct data *insn_data;$/;"	v
insn_dead_p	flow.c	/^insn_dead_p (x, needed, call_ok, notes)$/;"	f	file:
insn_def	genattrtab.c	/^struct insn_def$/;"	s	file:
insn_dep_count	haifa-sched.c	/^static int *insn_dep_count;$/;"	v	file:
insn_depend	haifa-sched.c	/^static rtx *insn_depend;$/;"	v	file:
insn_eh_region	except.c	/^static int *insn_eh_region = (int *)0;$/;"	v	file:
insn_ent	genattrtab.c	/^struct insn_ent$/;"	s	file:
insn_index	genattrtab.c	/^  int insn_index;		\/* Expression numer in file, for errors.  *\/$/;"	m	struct:insn_def
insn_index	genattrtab.c	/^  int insn_index;		\/* Index of definition in file *\/$/;"	m	struct:insn_ent
insn_index_number	genattrtab.c	/^static int insn_index_number;$/;"	v	file:
insn_index_number	genemit.c	/^static int insn_index_number;$/;"	v	file:
insn_invalid_p	recog.c	/^insn_invalid_p (insn)$/;"	f	file:
insn_issue_delay	haifa-sched.c	/^insn_issue_delay (insn)$/;"	f	file:
insn_last_address	final.c	/^int insn_last_address;$/;"	v
insn_lengths	final.c	/^static short *insn_lengths;$/;"	v	file:
insn_lengths_max_uid	final.c	/^static int insn_lengths_max_uid;$/;"	v	file:
insn_luid	haifa-sched.c	/^static int *insn_luid;$/;"	v	file:
insn_luid	sched.c	/^static int *insn_luid;$/;"	v	file:
insn_map	integrate.c	/^static rtx *insn_map;$/;"	v	file:
insn_n_alternatives	genattrtab.c	/^static int *insn_n_alternatives;$/;"	v	file:
insn_name_ptr	genattr.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genattrtab.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	gencodes.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genconfig.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genemit.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genextract.c	/^char **insn_name_ptr;$/;"	v
insn_name_ptr	genflags.c	/^char **insn_name_ptr;$/;"	v
insn_name_ptr	genopinit.c	/^char **insn_name_ptr;$/;"	v
insn_name_ptr	genoutput.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genpeep.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr	genrecog.c	/^char **insn_name_ptr = 0;$/;"	v
insn_name_ptr_size	genrecog.c	/^int insn_name_ptr_size = 0;$/;"	v
insn_noperands	final.c	/^static unsigned int insn_noperands;$/;"	v	file:
insn_orig_block	haifa-sched.c	/^static int *insn_orig_block;$/;"	v	file:
insn_print_units	haifa-sched.c	/^insn_print_units (insn)$/;"	f	file:
insn_priority	haifa-sched.c	/^static int *insn_priority;$/;"	v	file:
insn_priority	sched.c	/^static int *insn_priority;$/;"	v	file:
insn_queue	haifa-sched.c	/^static rtx insn_queue[INSN_QUEUE_SIZE];$/;"	v	file:
insn_queue	sched.c	/^static rtx insn_queue[INSN_QUEUE_SIZE];$/;"	v	file:
insn_ref_count	haifa-sched.c	/^static int *insn_ref_count;$/;"	v	file:
insn_ref_count	sched.c	/^static int *insn_ref_count;$/;"	v	file:
insn_references_resource_p	reorg.c	/^insn_references_resource_p (insn, res, include_delayed_effects)$/;"	f	file:
insn_reg_weight	haifa-sched.c	/^static int *insn_reg_weight;$/;"	v	file:
insn_sets_resource_p	reorg.c	/^insn_sets_resource_p (insn, res, include_delayed_effects)$/;"	f	file:
insn_tick	haifa-sched.c	/^static int *insn_tick;$/;"	v	file:
insn_tick	sched.c	/^static int *insn_tick;$/;"	v	file:
insn_unit	haifa-sched.c	/^insn_unit (insn)$/;"	f	file:
insn_unit	sched.c	/^insn_unit (insn)$/;"	f	file:
insn_units	haifa-sched.c	/^static short *insn_units;$/;"	v	file:
insn_units	sched.c	/^static short *insn_units;$/;"	v	file:
insns	function.c	/^  rtx insns;$/;"	m	struct:insns_for_mem_entry
insns	genemit.c	/^  struct clobber_ent *insns;$/;"	m	struct:clobber_pat
insns	genextract.c	/^  struct code_ptr *insns;$/;"	m	struct:extraction
insns_for_mem_comp	function.c	/^insns_for_mem_comp (k1, k2)$/;"	f	file:
insns_for_mem_entry	function.c	/^struct insns_for_mem_entry {$/;"	s	file:
insns_for_mem_hash	function.c	/^insns_for_mem_hash (k)$/;"	f	file:
insns_for_mem_newfunc	function.c	/^insns_for_mem_newfunc (he, ht, k)$/;"	f	file:
insns_for_mem_walk	function.c	/^insns_for_mem_walk (r, data)$/;"	f	file:
insns_for_mem_walk_info	function.c	/^struct insns_for_mem_walk_info {$/;"	s	file:
insns_need_reload	reload1.c	/^static struct insn_chain *insns_need_reload;$/;"	v	file:
instack	cccp.c	/^} instack[INPUT_STACK_MAX];$/;"	v	file:
install	cccp.c	/^install (name, len, type, value, hash)$/;"	f	file:
instantiate_decl	function.c	/^instantiate_decl (x, size, valid_only)$/;"	f	file:
instantiate_decls	function.c	/^instantiate_decls (fndecl, valid_only)$/;"	f	file:
instantiate_decls_1	function.c	/^instantiate_decls_1 (let, valid_only)$/;"	f	file:
instantiate_virtual_regs	function.c	/^instantiate_virtual_regs (fndecl, insns)$/;"	f
instantiate_virtual_regs_1	function.c	/^instantiate_virtual_regs_1 (loc, object, extra_insns)$/;"	f	file:
instrument_arcs	profile.c	/^instrument_arcs (f, num_blocks, dump_file)$/;"	f	file:
instrument_loop_bct	loop.c	/^instrument_loop_bct (loop_start, loop_end, loop_num_iterations)$/;"	f	file:
int	libgcc2.c	1076;"	d	file:
int	libgcc2.c	1098;"	d	file:
int	libgcc2.c	1120;"	d	file:
int	libgcc2.c	1149;"	d	file:
int	libgcc2.c	114;"	d	file:
intDI_type_node	c-decl.c	/^tree intDI_type_node;$/;"	v
intHI_type_node	c-decl.c	/^tree intHI_type_node;$/;"	v
intQI_type_node	c-decl.c	/^tree intQI_type_node;$/;"	v
intSI_type_node	c-decl.c	/^tree intSI_type_node;$/;"	v
intTI_type_node	c-decl.c	/^tree intTI_type_node;$/;"	v
int_array_type_node	c-decl.c	/^tree int_array_type_node;$/;"	v
int_const_binop	fold-const.c	/^int_const_binop (code, arg1, arg2, notrunc, forsize)$/;"	f	file:
int_fits_type_p	tree.c	/^int_fits_type_p (c, type)$/;"	f
int_ftype_cptr_cptr_sizet	c-decl.c	/^tree int_ftype_cptr_cptr_sizet;$/;"	v
int_ftype_int	c-decl.c	/^tree int_ftype_int, long_ftype_long;$/;"	v
int_ftype_ptr_ptr_int	c-decl.c	/^tree void_ftype_ptr_ptr_int, int_ftype_ptr_ptr_int, void_ftype_ptr_int_int;$/;"	v
int_ftype_string_string	c-decl.c	/^tree string_ftype_ptr_ptr, int_ftype_string_string;$/;"	v
int_mode_for_mode	stor-layout.c	/^int_mode_for_mode (mode)$/;"	f
int_reg_class_contents	regclass.c	/^static unsigned int_reg_class_contents[N_REG_CLASSES][N_REG_INTS] $/;"	v	file:
int_size_in_bytes	tree.c	/^int_size_in_bytes (type)$/;"	f
int_type	mips-tfile.c	/^  symint_t	 int_type;	\/* aux. pointer to 'int' type *\/$/;"	m	struct:efdr
int_type_info	mips-tfile.c	/^static type_info_t int_type_info;$/;"	v	file:
integer	cexp.c	/^  struct constant {HOST_WIDEST_INT value; int signedp;} integer;$/;"	m	union:
integer_all_onesp	tree.c	/^integer_all_onesp (expr)$/;"	f
integer_one_node	c-decl.c	/^tree integer_one_node;$/;"	v
integer_onep	tree.c	/^integer_onep (expr)$/;"	f
integer_overflow	cexp.c	/^integer_overflow ()$/;"	f	file:
integer_overflow	cppexp.c	/^integer_overflow (pfile)$/;"	f	file:
integer_pow2p	tree.c	/^integer_pow2p (expr)$/;"	f
integer_type_node	c-decl.c	/^tree integer_type_node;$/;"	v
integer_zero_node	c-decl.c	/^tree integer_zero_node;$/;"	v
integer_zerop	tree.c	/^integer_zerop (expr)$/;"	f
integrate_decl_tree	integrate.c	/^integrate_decl_tree (let, level, map)$/;"	f	file:
integrate_parm_decls	integrate.c	/^integrate_parm_decls (args, map, arg_vector)$/;"	f	file:
integration_time	toplev.c	/^int integration_time;$/;"	v
internal_build_compound_expr	c-typeck.c	/^internal_build_compound_expr (list, first_p)$/;"	f	file:
international_format_info	c-common.c	/^typedef struct international_format_info$/;"	s	file:
international_format_info	c-common.c	/^} international_format_info;$/;"	t	file:
international_format_list	c-common.c	/^static international_format_info *international_format_list = NULL;$/;"	v	file:
invalid_msg	doschk.c	/^invalid_msg ()$/;"	f
invalidate	cse.c	/^invalidate (x, full_mode)$/;"	f	file:
invalidate_for_call	cse.c	/^invalidate_for_call ()$/;"	f	file:
invalidate_from_clobbers	cse.c	/^invalidate_from_clobbers (x)$/;"	f	file:
invalidate_memory	cse.c	/^invalidate_memory ()$/;"	f	file:
invalidate_mems_from_autoinc	flow.c	/^invalidate_mems_from_autoinc (insn)$/;"	f	file:
invalidate_regno_rtx	reload1.c	/^static rtx invalidate_regno_rtx;$/;"	v	file:
invalidate_skipped_block	cse.c	/^invalidate_skipped_block (start)$/;"	f	file:
invalidate_skipped_set	cse.c	/^invalidate_skipped_set (dest, set)$/;"	f	file:
invariant_p	loop.c	/^invariant_p (x)$/;"	f
invert_exp	jump.c	/^invert_exp (x, insn)$/;"	f
invert_jump	jump.c	/^invert_jump (jump, nlabel)$/;"	f
invert_mod2n	expmed.c	/^invert_mod2n (x, n)$/;"	f	file:
invert_tree_comparison	fold-const.c	/^invert_tree_comparison (code)$/;"	f	file:
invert_truthvalue	fold-const.c	/^invert_truthvalue (arg)$/;"	f
invocation_filename	protoize.c	/^static const char *invocation_filename;$/;"	v	file:
ior_hard_reg_set	reload1.c	/^ior_hard_reg_set (set1, set2)$/;"	f	file:
ior_optab	optabs.c	/^optab ior_optab;$/;"	v
iprtr	collect2.c	/^  interpreter_command_t		iprtr;	\/* interpreter pathname *\/$/;"	m	union:load_union
is_abspath	protoize.c	/^is_abspath (path)$/;"	f	file:
is_attribute_p	tree.c	/^is_attribute_p (attr, ident)$/;"	f
is_base_type	dwarf2out.c	/^is_base_type (type)$/;"	f	file:
is_based_loc	dwarf2out.c	/^is_based_loc (rtl)$/;"	f	file:
is_body_block	dwarf2out.c	/^is_body_block (stmt)$/;"	f	file:
is_body_block	dwarfout.c	/^is_body_block (stmt)$/;"	f	file:
is_c_family	dwarf2out.c	/^is_c_family ()$/;"	f	file:
is_cfg_nonregular	haifa-sched.c	/^is_cfg_nonregular ()$/;"	f	file:
is_class_name	c-lang.c	/^is_class_name (arg)$/;"	f
is_conditionally_protected	haifa-sched.c	/^is_conditionally_protected (load_insn, bb_src, bb_trg)$/;"	f	file:
is_const	cse.c	/^  char is_const;$/;"	m	struct:table_elt
is_const	genattrtab.c	/^  unsigned is_const	: 1;	\/* Attribute value constant for each run.  *\/$/;"	m	struct:attr_desc
is_ctor_dtor	collect2.c	/^is_ctor_dtor (s)$/;"	f	file:
is_dir_separator	cccp.c	/^is_dir_separator(ch)$/;"	f	file:
is_directory	gcc.c	/^is_directory (path1, path2, linker)$/;"	f	file:
is_eh_region	stmt.c	/^is_eh_region ()$/;"	f
is_equiv	loop.c	/^  unsigned int is_equiv : 1;	\/* 1 means a REG_EQUIV is present on INSN.  *\/$/;"	m	struct:movable
is_exception_free	haifa-sched.c	/^is_exception_free (insn, bb_src, bb_trg)$/;"	f	file:
is_exception_handler_label	except.c	/^is_exception_handler_label (lab)$/;"	f
is_extern_subr_die	dwarf2out.c	/^is_extern_subr_die (die)$/;"	f	file:
is_fortran	dwarf2out.c	/^is_fortran ()$/;"	f	file:
is_func_def	protoize.c	/^  unsigned int        	is_func_def;	\/* = 0 means this is a declaration *\/$/;"	m	struct:def_dec_info_struct
is_hor_space	cccp.c	/^static U_CHAR is_hor_space[256];$/;"	v	file:
is_hor_space	cppinit.c	/^U_CHAR is_hor_space[256] = { 0 };$/;"	v
is_hor_space	cppinit.c	/^U_CHAR is_hor_space[256] =$/;"	v
is_id_char	protoize.c	/^is_id_char (ch)$/;"	f	file:
is_idchar	cccp.c	/^U_CHAR is_idchar[256];$/;"	v
is_idchar	cexp.c	/^unsigned char is_idchar[256];$/;"	v
is_idchar	cppinit.c	/^U_CHAR is_idchar[256] = { 0 };$/;"	v
is_idchar	cppinit.c	/^U_CHAR is_idchar[256] =$/;"	v
is_idstart	cccp.c	/^U_CHAR is_idstart[256];$/;"	v
is_idstart	cexp.c	/^unsigned char is_idstart[256];$/;"	v
is_idstart	cppinit.c	/^U_CHAR is_idstart[256] = { 0 };$/;"	v
is_idstart	cppinit.c	/^U_CHAR is_idstart[256] =$/;"	v
is_implicit	protoize.c	/^  char			is_implicit;	\/* != 0 for implicit func decl's *\/$/;"	m	struct:def_dec_info_struct
is_in_list	collect2.c	/^is_in_list (prefix, list)$/;"	f	file:
is_int	combine.c	/^  int is_int;$/;"	m	struct:undo
is_load_insn	haifa-sched.c	/^char *is_load_insn;$/;"	v
is_numeric	genattrtab.c	/^  unsigned is_numeric	: 1;	\/* Values of this attribute are numeric.  *\/$/;"	m	struct:attr_desc
is_pfree	haifa-sched.c	/^is_pfree (load_insn, bb_src, bb_trg)$/;"	f	file:
is_prisky	haifa-sched.c	/^is_prisky (load_insn, bb_src, bb_trg)$/;"	f	file:
is_pseudo_reg	dwarf2out.c	/^is_pseudo_reg (rtl)$/;"	f	file:
is_pseudo_reg	dwarfout.c	/^is_pseudo_reg (rtl)$/;"	f	file:
is_redundant_typedef	dwarf2out.c	/^is_redundant_typedef (decl)$/;"	f	file:
is_redundant_typedef	dwarfout.c	/^is_redundant_typedef (decl)$/;"	f	file:
is_signed	enquire.c	1035;"	d	file:
is_space	cccp.c	/^U_CHAR is_space[256];$/;"	v
is_space	cexp.c	/^unsigned char is_space[256];$/;"	v
is_space	cppinit.c	/^U_CHAR is_space[256] = { 0 };$/;"	v
is_space	cppinit.c	/^U_CHAR is_space[256] =$/;"	v
is_special	genattrtab.c	/^  unsigned is_special	: 1;	\/* Don't call `write_attr_set'.  *\/$/;"	m	struct:attr_desc
is_speculative	haifa-sched.c	/^    char is_speculative;$/;"	m	struct:
is_static	protoize.c	/^  char	        	is_static;	\/* = 0 means visibility is "extern"  *\/$/;"	m	struct:def_dec_info_struct
is_syscalls_file	protoize.c	/^is_syscalls_file (fi_p)$/;"	f	file:
is_system_include	cccp.c	/^is_system_include (filename)$/;"	f	file:
is_tagged_type	dwarf2out.c	/^is_tagged_type (type)$/;"	f	file:
is_tagged_type	dwarfout.c	/^is_tagged_type (type)$/;"	f	file:
is_valid	haifa-sched.c	/^    char is_valid;$/;"	m	struct:
is_zeros_p	expr.c	/^is_zeros_p (exp)$/;"	f	file:
isn_append	c-iterate.c	/^isn_append (x, y)$/;"	f	file:
issue_delay	genattr.c	/^  struct range issue_delay;	\/* Range of issue delay values.  *\/$/;"	m	struct:function_unit
issue_delay	genattrtab.c	/^  int issue_delay;		\/* Cost until unit can accept another insn.  *\/$/;"	m	struct:function_unit_op
issue_delay	genattrtab.c	/^  struct range issue_delay;	\/* Range of issue delay values.  *\/$/;"	m	struct:function_unit
issue_exp	genattrtab.c	/^  rtx issue_exp;		\/* Expression computing issue delay.  *\/$/;"	m	struct:function_unit_op
issue_rate	haifa-sched.c	/^static int issue_rate;$/;"	v	file:
istack_sublevel_to_current	c-iterate.c	/^istack_sublevel_to_current ()$/;"	f	file:
iter_stack	c-iterate.c	/^struct iter_stack_node *iter_stack;$/;"	v
iter_stack_node	c-iterate.c	/^struct iter_stack_node$/;"	s	file:
iteration_info	unroll.c	/^iteration_info (iteration_var, initial_value, increment, loop_start, loop_end)$/;"	f	file:
iterator_expand	c-iterate.c	/^iterator_expand (stmt)$/;"	f
iterator_for_loop_end	c-iterate.c	/^iterator_for_loop_end (idecl)$/;"	f
iterator_for_loop_start	c-iterate.c	/^iterator_for_loop_start (idecl)$/;"	f
iterator_loop_epilogue	c-iterate.c	/^iterator_loop_epilogue (idecl, start_note, end_note)$/;"	f	file:
iterator_loop_prologue	c-iterate.c	/^iterator_loop_prologue (idecl, start_note, end_note)$/;"	f	file:
itype	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:
ixdecl	c-iterate.c	/^  tree ixdecl;			\/* Iterator decl *\/$/;"	m	struct:ixpansion
ixepilogue_end	c-iterate.c	/^  rtx  ixepilogue_end;$/;"	m	struct:ixpansion
ixepilogue_start	c-iterate.c	/^  rtx  ixepilogue_start;$/;"	m	struct:ixpansion
ixp_firstobj	c-iterate.c	/^static char *ixp_firstobj;$/;"	v	file:
ixp_obstack	c-iterate.c	/^static struct obstack ixp_obstack;$/;"	v	file:
ixpansion	c-iterate.c	/^struct  ixpansion$/;"	s	file:
ixprologue_end	c-iterate.c	/^  rtx  ixprologue_end;$/;"	m	struct:ixpansion
ixprologue_start	c-iterate.c	/^  rtx  ixprologue_start;	\/* First insn of epilogue. NULL means *\/$/;"	m	struct:ixpansion
jmp_buf	enquire.c	407;"	d	file:
jmp_uses_reg_or_mem	rtlanal.c	/^jmp_uses_reg_or_mem (x)$/;"	f	file:
jump2_opt_dump	toplev.c	/^int jump2_opt_dump = 0;$/;"	v
jump_back_p	jump.c	/^jump_back_p (insn, target)$/;"	f	file:
jump_chain	jump.c	/^static rtx *jump_chain;$/;"	v	file:
jump_opt_dump	toplev.c	/^int jump_opt_dump = 0;$/;"	v
jump_optimize	jump.c	/^jump_optimize (f, cross_jump, noop_moves, after_regscan)$/;"	f
jump_optimize_1	jump.c	/^jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)$/;"	f	file:
jump_time	toplev.c	/^int jump_time;$/;"	v
jumpif	expr.c	/^jumpif (exp, label)$/;"	f
jumpif_rtx	except.c	/^jumpif_rtx (x, label)$/;"	f	file:
jumpifnot	expr.c	/^jumpifnot (exp, label)$/;"	f
just_machine_suffix	gcc.c	/^static const char *just_machine_suffix = 0;$/;"	v	file:
k_and_r_decls	c-aux-info.c	/^  k_and_r_decls$/;"	e	file:	enum:formals_style_enum
k_and_r_names	c-aux-info.c	/^  k_and_r_names,$/;"	e	file:	enum:formals_style_enum
keep	c-decl.c	/^    char keep;$/;"	m	struct:binding_level
keep	function.c	/^  int keep;$/;"	m	struct:temp_slot
keep_flag	protoize.c	/^static int keep_flag = 0;		\/* Don't delete the .X files.  *\/$/;"	v	file:
keep_if_subblocks	c-decl.c	/^    char keep_if_subblocks;$/;"	m	struct:binding_level
keep_next_if_subblocks	c-decl.c	/^static int keep_next_if_subblocks;$/;"	v	file:
keep_next_level	c-decl.c	/^keep_next_level ()$/;"	f
keep_next_level_flag	c-decl.c	/^static int keep_next_level_flag;$/;"	v	file:
kept_level_p	c-decl.c	/^kept_level_p ()$/;"	f
keydef	cccp.c	/^  KEYDEF *keydef;$/;"	m	union:hashval
keyword_parsing	cexp.c	/^static int keyword_parsing = 0;$/;"	v	file:
keywords	cexp.c	/^  struct arglist *keywords;$/;"	m	union:
kill	gcc.c	93;"	d	file:
kind	c-typeck.c	/^  int kind;$/;"	m	struct:spelling
kind	varasm.c	/^  unsigned int kind : 16;$/;"	m	struct:rtx_const
kind	varasm.c	/^enum kind { RTX_DOUBLE, RTX_INT };$/;"	g	file:
known_cond	combine.c	/^known_cond (x, cond, reg, val)$/;"	f	file:
known_suffixes	cppinit.c	/^static char *known_suffixes[] =$/;"	v	file:
known_suffixes	cppspec.c	/^static const char *const known_suffixes[] =$/;"	v	file:
l	floatlib.c	/^    long l;$/;"	m	union:float_long
l	floatlib.c	/^    } l;$/;"	m	union:double_long
l_strings	mips-tdump.c	/^char	*l_strings;		\/* local strings *\/$/;"	v
l_symbols	mips-tdump.c	/^SYMR	*l_symbols;		\/* local symbols *\/$/;"	v
lab	enquire.c	/^	int lab=1;$/;"	v
lab	enquire.c	/^	jmp_buf lab;$/;"	v
label	stmt.c	/^  tree label;$/;"	m	struct:label_chain
label	varasm.c	/^  char *label;$/;"	m	struct:constant_descriptor
label	varasm.c	/^  char *label;$/;"	m	struct:pool_sym
label_align	final.c	/^static struct label_alignment *label_align;$/;"	v	file:
label_alignment	final.c	/^struct label_alignment {$/;"	s	file:
label_chain	stmt.c	/^	  struct label_chain *label_chain;$/;"	m	struct:nesting::<anonymous>::<anonymous>
label_chain	stmt.c	/^struct label_chain$/;"	s	file:
label_level_chain	c-decl.c	/^static struct binding_level *label_level_chain;$/;"	v	file:
label_map	integrate.c	/^static rtx *label_map;$/;"	v	file:
label_needed	genrecog.c	/^  int label_needed;		\/* Nonzero if label needed when writing tree *\/$/;"	m	struct:decision
label_num	emit-rtl.c	/^static int label_num = 1;$/;"	v	file:
label_num	final.c	/^  int label_num;		\/* label number *\/$/;"	m	struct:bb_str
label_rtx	stmt.c	/^label_rtx (label)$/;"	f
label_tick	combine.c	/^static int label_tick;$/;"	v	file:
label_to_alignment	final.c	/^label_to_alignment (label)$/;"	f
label_to_bb	profile.c	/^static int *label_to_bb;$/;"	v	file:
label_to_bb_size	profile.c	/^static int label_to_bb_size;$/;"	v	file:
label_value_list	flow.c	/^static rtx label_value_list;$/;"	v	file:
labelno	varasm.c	/^  int labelno;$/;"	m	struct:deferred_constant
labelno	varasm.c	/^  int labelno;$/;"	m	struct:pool_constant
labels_in_range_p	loop.c	/^labels_in_range_p (insn, end)$/;"	f	file:
lang	mips-tdump.c	/^typedef enum lang {$/;"	g	file:
lang_Ada	mips-tdump.c	/^  lang_Ada	 = langAda,$/;"	e	file:	enum:lang
lang_Assembler	mips-tdump.c	/^  lang_Assembler = langAssembler,$/;"	e	file:	enum:lang
lang_C	mips-tdump.c	/^  lang_C	 = langC,$/;"	e	file:	enum:lang
lang_Cobol	mips-tdump.c	/^  lang_Cobol	 = langCobol$/;"	e	file:	enum:lang
lang_Fortran	mips-tdump.c	/^  lang_Fortran	 = langFortran,$/;"	e	file:	enum:lang
lang_Machine	mips-tdump.c	/^  lang_Machine	 = langMachine,$/;"	e	file:	enum:lang
lang_Nil	mips-tdump.c	/^  lang_Nil	 = langNil,$/;"	e	file:	enum:lang
lang_Pascal	mips-tdump.c	/^  lang_Pascal	 = langPascal,$/;"	e	file:	enum:lang
lang_Pl1	mips-tdump.c	/^  lang_Pl1	 = langPl1,$/;"	e	file:	enum:lang
lang_asm	cccp.c	/^static int lang_asm;$/;"	v	file:
lang_decl	tree.c	/^  lang_decl,$/;"	e	file:
lang_decode_option	c-lang.c	/^lang_decode_option (argc, argv)$/;"	f
lang_expand_expr	toplev.c	/^lang_expand_expr_t lang_expand_expr = 0;$/;"	v
lang_finish	c-lang.c	/^lang_finish ()$/;"	f
lang_get_alias_set	tree.c	/^int (*lang_get_alias_set) PROTO((tree));$/;"	v
lang_identify	c-lang.c	/^lang_identify ()$/;"	f
lang_independent_options	toplev.c	/^lang_independent_options;$/;"	t	file:
lang_init	c-lang.c	/^lang_init ()$/;"	f
lang_init_options	c-lang.c	/^lang_init_options ()$/;"	f
lang_opt	toplev.c	/^static struct lang_opt$/;"	s	file:
lang_print_xnode	c-lang.c	/^lang_print_xnode (file, node, indent)$/;"	f
lang_specific_driver	cppspec.c	/^lang_specific_driver (errfn, in_argc, in_argv, in_added_libraries)$/;"	f
lang_specific_driver	gccspec.c	/^lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)$/;"	f
lang_specific_extra_outfiles	cppspec.c	/^int lang_specific_extra_outfiles = 0;  \/* Not used for cpp. *\/$/;"	v
lang_specific_extra_outfiles	gccspec.c	/^int lang_specific_extra_outfiles = 0;  \/* Not used for C. *\/$/;"	v
lang_specific_pre_link	cppspec.c	/^int lang_specific_pre_link ()$/;"	f
lang_specific_pre_link	gccspec.c	/^lang_specific_pre_link ()$/;"	f
lang_t	mips-tdump.c	/^} lang_t;$/;"	t	file:
lang_to_string	mips-tdump.c	/^lang_to_string (lang)$/;"	f
lang_type	tree.c	/^  lang_type,$/;"	e	file:
language	gcc.c	/^  const char *language;$/;"	m	struct:infile
language_attribute	dwarfout.c	/^language_attribute (language_code)$/;"	f	file:
language_code	except.c	/^static short language_code = 0;$/;"	v	file:
language_string	c-parse.c	/^char *language_string = "GNU C";$/;"	v
larger_than_size	toplev.c	/^unsigned larger_than_size;$/;"	v
last	c-iterate.c	/^  struct ixpansion *last;	\/* Last node in list  of ixpansions *\/$/;"	m	struct:iter_stack_node
last	collect2.c	/^  struct id *last;$/;"	m	struct:head
last	cse.c	/^  rtx last;$/;"	m	struct:cse_basic_block_data
last	genrecog.c	/^struct decision_head { struct decision *first, *last; };$/;"	m	struct:decision_head
last	mips-tfile.c	/^  vlinks_t	*last;			\/* last page link *\/$/;"	m	struct:varray
last_after_include	cccp.c	/^static struct file_name_list *last_after_include = 0;	\/* Last in chain *\/$/;"	v	file:
last_assemble_variable_decl	varasm.c	/^tree last_assemble_variable_decl;$/;"	v
last_atexit_chain_slot	libgcc2.c	/^static volatile long last_atexit_chain_slot = -1;$/;"	v	file:
last_bb_file_name	profile.c	/^static char *last_bb_file_name;$/;"	v	file:
last_before_system	cccp.c	/^static struct file_name_list *last_before_system = 0;	\/* Last in chain *\/$/;"	v	file:
last_block_end_note	stmt.c	/^static rtx last_block_end_note;$/;"	v	file:
last_call_cuid	combine.c	/^static int last_call_cuid;$/;"	v	file:
last_call_suid	stupid.c	/^static int last_call_suid;$/;"	v	file:
last_cleanup_this_contour	stmt.c	/^last_cleanup_this_contour ()$/;"	f
last_clock_var	haifa-sched.c	/^static int last_clock_var;$/;"	v	file:
last_error_function	toplev.c	/^static tree last_error_function = NULL;$/;"	v	file:
last_error_tick	cccp.c	/^static int last_error_tick;	   \/* Incremented each time we print it.  *\/$/;"	v	file:
last_error_tick	toplev.c	/^static int last_error_tick;$/;"	v	file:
last_expr_type	stmt.c	/^static tree last_expr_type;$/;"	v	file:
last_expr_value	stmt.c	/^static rtx last_expr_value;$/;"	v	file:
last_file_ptr	mips-tfile.c	/^static efdr_t **last_file_ptr = &first_file;	\/* file descriptor tail *\/$/;"	v	file:
last_filename	dwarfout.c	/^static char *last_filename;$/;"	v	file:
last_filename	emit-rtl.c	/^static char *last_filename = 0;$/;"	v	file:
last_filename	final.c	/^static char *last_filename;$/;"	v	file:
last_func_eptr	mips-tfile.c	/^static EXTR	  *last_func_eptr;$/;"	v	file:
last_func_type_info	mips-tfile.c	/^static type_info_t last_func_type_info;$/;"	v	file:
last_function_call	haifa-sched.c	/^static rtx last_function_call;$/;"	v	file:
last_function_call	sched.c	/^static rtx last_function_call;$/;"	v	file:
last_function_parm_tags	c-decl.c	/^static tree last_function_parm_tags;$/;"	v	file:
last_function_parms	c-decl.c	/^static tree last_function_parms;$/;"	v	file:
last_ignored_compare	final.c	/^static rtx last_ignored_compare = 0;$/;"	v	file:
last_include	cccp.c	/^static struct file_name_list *last_include = 0;	\/* Last in chain *\/$/;"	v	file:
last_increment_giv	loop.c	/^int first_increment_giv, last_increment_giv;$/;"	v
last_insn	emit-rtl.c	/^static rtx last_insn = NULL;$/;"	v	file:
last_jump_equiv_class	cse.c	/^static struct table_elt *last_jump_equiv_class;$/;"	v	file:
last_known_line_number	protoize.c	/^static int last_known_line_number;$/;"	v	file:
last_known_line_start	protoize.c	/^static const char *last_known_line_start;$/;"	v	file:
last_label_num	emit-rtl.c	/^static int last_label_num;$/;"	v	file:
last_linenum	emit-rtl.c	/^static int last_linenum = 0;$/;"	v	file:
last_linenum	final.c	/^static int last_linenum;$/;"	v	file:
last_parm_insn	function.c	/^static rtx last_parm_insn;$/;"	v	file:
last_pending_memory_flush	haifa-sched.c	/^static rtx last_pending_memory_flush;$/;"	v	file:
last_pending_memory_flush	sched.c	/^static rtx last_pending_memory_flush;$/;"	v	file:
last_pool	varasm.c	/^static struct pool_constant *first_pool, *last_pool;$/;"	v	file:
last_rethrow_symbol	except.c	/^static rtx last_rethrow_symbol = NULL_RTX;$/;"	v	file:
last_scheduled_insn	haifa-sched.c	/^static rtx last_scheduled_insn;$/;"	v	file:
last_scheduled_insn	sched.c	/^static rtx last_scheduled_insn;$/;"	v	file:
last_set_insn	gcse.c	/^static rtx last_set_insn;$/;"	v	file:
last_setjmp_suid	stupid.c	/^static int last_setjmp_suid;$/;"	v	file:
last_spill_reg	reload1.c	/^static int last_spill_reg;$/;"	v	file:
last_unconditional_cleanup	stmt.c	/^	  rtx last_unconditional_cleanup;$/;"	m	struct:nesting::<anonymous>::<anonymous>
last_use_this_basic_block	loop.c	/^last_use_this_basic_block (reg, insn)$/;"	f	file:
lastfile	dbxout.c	/^static char *lastfile;$/;"	v	file:
lastiddecl	c-lex.c	/^tree lastiddecl;$/;"	v
layout_array_type	c-decl.c	/^layout_array_type (t)$/;"	f	file:
layout_decl	stor-layout.c	/^layout_decl (decl, known_align)$/;"	f
layout_record	stor-layout.c	/^layout_record (rec)$/;"	f	file:
layout_type	stor-layout.c	/^layout_type (type)$/;"	f
layout_union	stor-layout.c	/^layout_union (rec)$/;"	f	file:
lbrac_line	fix-header.c	/^int lbrac_line, rbrac_line;$/;"	v
ld	collect2.c	/^struct link_dynamic *ld;$/;"	v
ld_2	collect2.c	/^struct link_dynamic_2 *ld_2;$/;"	v
ldd_file_name	collect2.c	/^static char *ldd_file_name;		\/* pathname of ldd (or equivalent) *\/$/;"	v	file:
ldexp	optabs.c	/^ldexp(x,n)$/;"	f
ldouble_ftype_ldouble	c-decl.c	/^tree ldouble_ftype_ldouble;$/;"	v
ldout	collect2.c	/^char *ldout;				\/* File for ld errors.  *\/$/;"	v
leaf_function_p	final.c	/^leaf_function_p ()$/;"	f
leaf_renumber_regs	final.c	/^leaf_renumber_regs (first)$/;"	f	file:
leaf_renumber_regs_insn	final.c	/^leaf_renumber_regs_insn (in_rtx)$/;"	f
leave_file	cccp.c	/^enum file_change_code {same_file, enter_file, leave_file};$/;"	e	file:	enum:file_change_code
ledf2_libfunc	optabs.c	/^rtx ledf2_libfunc;$/;"	v
left	c-typeck.c	/^  struct init_node *left, *right;$/;"	m	struct:init_node
left	stmt.c	/^  struct case_node	*left;	\/* Left son in binary tree *\/$/;"	m	struct:case_node
left_shift	cexp.c	/^left_shift (a, b)$/;"	f	file:
left_shift	cppexp.c	/^left_shift (pfile, a, unsignedp, b)$/;"	f	file:
lehf2_libfunc	optabs.c	/^rtx lehf2_libfunc;$/;"	v
len	expr.c	/^  int len;$/;"	m	struct:clear_by_pieces
len	expr.c	/^  int len;$/;"	m	struct:move_by_pieces
len	mips-tfile.c	/^  int len;				\/* length of name to compare *\/$/;"	m	struct:_pseudo_ops
len	mips-tfile.c	/^  symint_t	 len;		\/* string length *\/$/;"	m	struct:shash
length	cccp.c	/^  int length;			\/* Length of name *\/$/;"	m	struct:directive
length	cccp.c	/^  int length;			\/* length of expansion string *\/$/;"	m	struct:definition
length	cccp.c	/^  int length;			\/* length of token, for quick comparison *\/$/;"	m	struct:assertion_hashnode
length	cccp.c	/^  int length;			\/* length of token, for quick comparison *\/$/;"	m	struct:hashnode
length	cccp.c	/^  int length;$/;"	m	struct:arglist
length	cccp.c	/^  int length;$/;"	m	struct:file_buf
length	cexp.c	/^  int length;$/;"	m	struct:arglist
length	cexp.c	/^  struct name {U_CHAR *address; int length;} name;$/;"	m	struct:<anonymous>::name
length	cpphash.c	/^  int length;$/;"	m	struct:arglist
length	cpplib.c	/^  int length;			\/* Length of name *\/$/;"	m	struct:directive
length	dwarf2out.c	/^  unsigned length;$/;"	m	struct:dw_fp_struct
length	final.c	/^  int length;			\/* string length *\/$/;"	m	struct:bb_str
length	frame.c	/^  uword length;$/;"	m	struct:dwarf_cie
length	frame.c	/^  uword length;$/;"	m	struct:dwarf_fde
length	gcc.c	/^  int length;		\/* strlen (suffix).  *\/$/;"	m	struct:temp_name
length_used	genattrtab.c	/^static int length_used;$/;"	v	file:
lesf2_libfunc	optabs.c	/^rtx lesf2_libfunc;$/;"	v
letf2_libfunc	optabs.c	/^rtx letf2_libfunc;$/;"	v
level	function.c	/^  int level;$/;"	m	struct:temp_slot
level_chain	c-decl.c	/^    struct binding_level *level_chain;$/;"	m	struct:binding_level
lexf2_libfunc	optabs.c	/^rtx lexf2_libfunc;$/;"	v
lexptr	cexp.c	/^static char *lexptr;$/;"	v	file:
lib_spec	gcc.c	/^static char *lib_spec = LIB_SPEC;$/;"	v	file:
libcall_benefit	loop.c	/^libcall_benefit (last)$/;"	f	file:
libcall_dead_p	flow.c	/^libcall_dead_p (x, needed, note, insn)$/;"	f	file:
libcall_other_reg	loop.c	/^libcall_other_reg (insn, equiv)$/;"	f
libcompare	collect2.c	/^libcompare (d1, d2)$/;"	f	file:
libexts	collect2.c	/^static char *libexts[4] = {"a", "so", "dll", NULL};  \/* possible library extentions *\/$/;"	v	file:
libgcc_spec	gcc.c	/^static char *libgcc_spec = LIBGCC_SPEC;$/;"	v	file:
libname	collect2.c	/^static char *libname;$/;"	v	file:
libpath_lib_dirs	collect2.c	/^static struct path_prefix libpath_lib_dirs; \/* directories in LIBPATH *\/$/;"	v	file:
libpaths	collect2.c	/^static struct path_prefix *libpaths[3] = {&cmdline_lib_dirs,$/;"	v	file:
libraries	collect2.c	/^struct head libraries;$/;"	v
libs	collect2.c	/^static struct head libs;                    \/* list of libraries *\/$/;"	v	file:
libselect	collect2.c	/^libselect (d)$/;"	f	file:
life_analysis	flow.c	/^life_analysis (f, nregs, file, remove_dead_code)$/;"	f
life_analysis_1	flow.c	/^life_analysis_1 (f, nregs, remove_dead_code)$/;"	f	file:
lifetime	loop.c	/^  short lifetime;		\/* lifetime of that register;$/;"	m	struct:movable
limbo_die_list	dwarf2out.c	/^static limbo_die_node *limbo_die_list = 0;$/;"	v	file:
limbo_die_node	dwarf2out.c	/^limbo_die_node;$/;"	t	file:
limbo_die_struct	dwarf2out.c	/^typedef struct limbo_die_struct$/;"	s	file:
line	c-common.c	/^  int line;$/;"	m	struct:
line	cccp.c	/^  int line;			\/* Line number of definition *\/$/;"	m	struct:definition
line	fix-header.c	/^sstring line;$/;"	v
line	protoize.c	/^  int        		line;		\/* source line number of def\/dec *\/$/;"	m	struct:def_dec_info_struct
line_for_error	cccp.c	/^line_for_error (line)$/;"	f	file:
line_info_table	dwarf2out.c	/^static dw_line_info_ref line_info_table;$/;"	v	file:
line_info_table_allocated	dwarf2out.c	/^static unsigned line_info_table_allocated;$/;"	v	file:
line_info_table_in_use	dwarf2out.c	/^static unsigned line_info_table_in_use;$/;"	v	file:
line_note	haifa-sched.c	/^static rtx *line_note;$/;"	v	file:
line_note	sched.c	/^static rtx *line_note;$/;"	v	file:
line_note_exists	final.c	/^static char *line_note_exists;$/;"	v	file:
line_note_head	haifa-sched.c	/^static rtx *line_note_head;$/;"	v	file:
line_note_head	sched.c	/^static rtx *line_note_head;$/;"	v	file:
line_num	final.c	/^  int line_num;			\/* line number *\/$/;"	m	struct:bb_list
line_number	mips-tfile.c	/^static int	 line_number;$/;"	v	file:
line_number	mips-tfile.c	/^static long	line_number	= 0;		\/* current input line number *\/$/;"	v	file:
line_number_status	stmt.c	/^	  int line_number_status;$/;"	m	struct:nesting::<anonymous>::<anonymous>
line_nums	libgcc2.c	/^  const long *line_nums;$/;"	m	struct:bb
line_seen	fix-header.c	/^  int line_seen;$/;"	m	struct:partial_proto
linear	frame.c	/^  fde_vector linear;$/;"	m	struct:fde_accumulator
lineno	c-parse.c	/^	char *filename; int lineno; int ends_in_label; } YYSTYPE;$/;"	m	union:
lineno	cccp.c	/^  int lineno;			\/* similarly *\/$/;"	m	struct:if_stack
lineno	cccp.c	/^  int lineno;$/;"	m	struct:file_buf
lineno	scan.c	/^int lineno = 1;$/;"	v
lineno	toplev.c	/^int lineno;$/;"	v
lines	mips-tdump.c	/^LINER	*lines;			\/* line numbers *\/$/;"	v
link	genpeep.c	/^struct link$/;"	s	file:
link_cc0_insns	emit-rtl.c	/^link_cc0_insns (insn)$/;"	f
link_command_spec	gcc.c	/^static const char *link_command_spec = "\\$/;"	v	file:
link_command_spec	gcc.c	/^static const char *link_command_spec = $/;"	v	file:
link_spec	gcc.c	/^static char *link_spec = LINK_SPEC;$/;"	v	file:
linker_name_spec	gcc.c	/^static char *linker_name_spec = LINKER_NAME;$/;"	v	file:
linker_options	gcc.c	/^static char **linker_options;$/;"	v	file:
list_length	tree.c	/^list_length (t)$/;"	f
listify	tree.c	/^listify (chain)$/;"	f
literal_codeset	mbchar.c	/^char *literal_codeset = NULL;$/;"	v
live_cond	gcc.c	/^  int live_cond;$/;"	m	struct:switchstr
live_length	haifa-sched.c	/^    int live_length;$/;"	m	struct:sometimes
live_length	sched.c	/^  int live_length;$/;"	m	struct:sometimes
live_regs	resource.c	/^  HARD_REG_SET live_regs;	\/* Registers live at target.  *\/$/;"	m	struct:target_info
live_relevant_regs	global.c	/^static regset live_relevant_regs;$/;"	v	file:
ll	floatlib.c	/^    long long ll;$/;"	m	union:double_long
ll	libgcc2.c	/^  DItype ll;$/;"	m	union:
llen	c-common.c	/^  tree *llen;$/;"	m	struct:
lnumber	mips-tfile.c	/^  symint_t	 lnumber;	\/* lsym index *\/$/;"	m	struct:scope
load	collect2.c	/^  load_union_t *load;			\/* load command *\/$/;"	m	struct:load_all
load_all	collect2.c	/^typedef struct load_all$/;"	s	file:
load_all_t	collect2.c	/^} load_all_t;$/;"	t	file:
load_mems	loop.c	/^load_mems (scan_start, end, loop_top, start)$/;"	f	file:
load_mems_and_recount_loop_regs_set	loop.c	/^load_mems_and_recount_loop_regs_set (scan_start, end, loop_top, start,$/;"	f	file:
load_register_parameters	calls.c	/^load_register_parameters (args, num_actuals, call_fusage)$/;"	f	file:
load_specs	gcc.c	/^load_specs (filename)$/;"	f	file:
load_union	collect2.c	/^typedef union load_union$/;"	u	file:
load_union_t	collect2.c	/^} load_union_t;$/;"	t	file:
loc	recog.c	/^  rtx *loc;$/;"	m	struct:change_t
loc_descriptor	dwarf2out.c	/^loc_descriptor (rtl)$/;"	f	file:
loc_mentioned_in_p	reload.c	/^loc_mentioned_in_p (loc, in)$/;"	f	file:
local_alloc	local-alloc.c	/^local_alloc ()$/;"	f
local_alloc_time	toplev.c	/^int local_alloc_time;$/;"	v
local_flag	protoize.c	/^static int local_flag = 0;		\/* Insert new local decls (when?).  *\/$/;"	v	file:
local_index	mips-tfile.c	/^local_index (str, sentinel)$/;"	f
local_mb_cur_max	mbchar.c	/^local_mb_cur_max ()$/;"	f
local_mblen	mbchar.c	/^local_mblen (s, n)$/;"	f
local_mbtowc	mbchar.c	/^local_mbtowc (pwc, s, n)$/;"	f
local_reg_dump	toplev.c	/^int local_reg_dump = 0;$/;"	v
local_reg_live_length	global.c	/^static int local_reg_live_length[FIRST_PSEUDO_REGISTER];$/;"	v	file:
local_reg_n_refs	global.c	/^static int local_reg_n_refs[FIRST_PSEUDO_REGISTER];$/;"	v	file:
local_rindex	mips-tfile.c	/^local_rindex (str, sentinel)$/;"	f
localedir	intl.c	/^const char localedir[] = LOCALEDIR;$/;"	v
locate_and_pad_parm	function.c	/^locate_and_pad_parm (passed_mode, type, in_regs, fndecl,$/;"	f
locatelib	collect2.c	/^locatelib (name)$/;"	f	file:
location_attribute	dwarfout.c	/^location_attribute (rtl)$/;"	f	file:
location_or_const_value_attribute	dwarfout.c	/^location_or_const_value_attribute (decl)$/;"	f	file:
log	expmed.c	/^  char log[MAX_BITS_PER_WORD];$/;"	m	struct:algorithm
long	libgcc2.c	1077;"	d	file:
long	libgcc2.c	1099;"	d	file:
long	libgcc2.c	1121;"	d	file:
long	libgcc2.c	1150;"	d	file:
long	libgcc2.c	115;"	d	file:
long_double_type_node	c-decl.c	/^tree long_double_type_node;$/;"	v
long_ftype_long	c-decl.c	/^tree int_ftype_int, long_ftype_long;$/;"	v
long_integer_type_node	c-decl.c	/^tree long_integer_type_node;$/;"	v
long_long_integer_type_node	c-decl.c	/^tree long_long_integer_type_node;$/;"	v
long_long_unsigned_type_node	c-decl.c	/^tree long_long_unsigned_type_node;$/;"	v
long_unsigned_type_node	c-decl.c	/^tree long_unsigned_type_node;$/;"	v
longjmp_libfunc	optabs.c	/^rtx longjmp_libfunc;$/;"	v
longopts	protoize.c	/^static struct option longopts[] =$/;"	v	file:
lookup	cccp.c	/^lookup (name, len, hash)$/;"	f
lookup	cexp.c	/^lookup (name, len, hash)$/;"	f
lookup	cse.c	/^lookup (x, hash, mode)$/;"	f	file:
lookup	protoize.c	/^lookup (hash_tab_p, search_symbol)$/;"	f	file:
lookup_as_function	cse.c	/^lookup_as_function (x, code)$/;"	f	file:
lookup_attribute	tree.c	/^lookup_attribute (attr_name, list)$/;"	f
lookup_cfa	dwarf2out.c	/^lookup_cfa (regp, offsetp)$/;"	f	file:
lookup_cfa_1	dwarf2out.c	/^lookup_cfa_1 (cfi, regp, offsetp)$/;"	f	file:
lookup_compiler	gcc.c	/^lookup_compiler (name, length, language)$/;"	f	file:
lookup_decl_die	dwarf2out.c	/^lookup_decl_die (decl)$/;"	f	file:
lookup_expr	gcse.c	/^lookup_expr (pat)$/;"	f	file:
lookup_field	c-typeck.c	/^lookup_field (type, component, indirect)$/;"	f	file:
lookup_filename	dwarf2out.c	/^lookup_filename (file_name)$/;"	f	file:
lookup_filename	dwarfout.c	/^lookup_filename (file_name)$/;"	f	file:
lookup_for_remove	cse.c	/^lookup_for_remove (x, hash, mode)$/;"	f	file:
lookup_ino_include	cccp.c	/^lookup_ino_include (inc)$/;"	f	file:
lookup_interface	c-lang.c	/^lookup_interface (arg)$/;"	f
lookup_key	prefix.c	/^lookup_key (key)$/;"	f	file:
lookup_label	c-decl.c	/^lookup_label (id)$/;"	f
lookup_name	c-decl.c	/^lookup_name (name)$/;"	f
lookup_name_current_level	c-decl.c	/^lookup_name_current_level (name)$/;"	f
lookup_set	gcse.c	/^lookup_set (regno, pat)$/;"	f	file:
lookup_static_chain	function.c	/^lookup_static_chain (decl)$/;"	f
lookup_std_proto	fix-header.c	/^lookup_std_proto (name, name_length)$/;"	f
lookup_tag	c-decl.c	/^lookup_tag (code, name, binding_level, thislevel_only)$/;"	f	file:
lookup_tag_reverse	c-decl.c	/^lookup_tag_reverse (type)$/;"	f	file:
lookup_type_die	dwarf2out.c	/^lookup_type_die (type)$/;"	f	file:
loop	stmt.c	/^	} loop;$/;"	m	union:nesting::<anonymous>
loop_continue	loop.c	/^static rtx loop_continue;$/;"	v	file:
loop_cost	regclass.c	/^static int loop_cost;$/;"	v	file:
loop_depth	flow.c	/^static int loop_depth;$/;"	v	file:
loop_depth	local-alloc.c	/^static int loop_depth;$/;"	v	file:
loop_depth	regclass.c	/^static int loop_depth;$/;"	v	file:
loop_depth	regmove.c	/^static int loop_depth;$/;"	v	file:
loop_dump	toplev.c	/^int loop_dump = 0;$/;"	v
loop_dump_stream	loop.c	/^FILE *loop_dump_stream;$/;"	v
loop_find_equiv_value	unroll.c	/^loop_find_equiv_value (loop_start, reg)$/;"	f	file:
loop_has_call	loop.c	/^static int loop_has_call;$/;"	v	file:
loop_has_tablejump	loop.c	/^static int loop_has_tablejump;$/;"	v	file:
loop_has_volatile	loop.c	/^static int loop_has_volatile;$/;"	v	file:
loop_insn_first_p	loop.c	/^loop_insn_first_p (insn, reference)$/;"	f
loop_invalid	loop.c	/^static char *loop_invalid;$/;"	v	file:
loop_iterations	unroll.c	/^loop_iterations (loop_start, loop_end, loop_info)$/;"	f
loop_iv_list	loop.c	/^struct iv_class *loop_iv_list;$/;"	v
loop_mem_info	loop.c	/^typedef struct loop_mem_info {$/;"	s	file:
loop_mem_info	loop.c	/^} loop_mem_info;$/;"	t	file:
loop_mems	loop.c	/^static loop_mem_info *loop_mems;$/;"	v	file:
loop_mems_allocated	loop.c	/^static int loop_mems_allocated;$/;"	v	file:
loop_mems_idx	loop.c	/^static int loop_mems_idx;$/;"	v	file:
loop_number_cont_dominator	loop.c	/^static rtx *loop_number_cont_dominator;$/;"	v	file:
loop_number_exit_count	loop.c	/^int *loop_number_exit_count;$/;"	v
loop_number_exit_labels	loop.c	/^rtx *loop_number_exit_labels;$/;"	v
loop_number_loop_cont	loop.c	/^static rtx *loop_number_loop_cont;$/;"	v	file:
loop_number_loop_ends	loop.c	/^static rtx *loop_number_loop_starts, *loop_number_loop_ends;$/;"	v	file:
loop_number_loop_starts	loop.c	/^static rtx *loop_number_loop_starts, *loop_number_loop_ends;$/;"	v	file:
loop_optimize	loop.c	/^loop_optimize (f, dumpfile, unroll_p, bct_p)$/;"	f
loop_outer_loop	loop.c	/^int *loop_outer_loop;$/;"	v
loop_reg_used_before_p	loop.c	/^loop_reg_used_before_p (set, insn, loop_start, scan_start, loop_end)$/;"	f	file:
loop_stack	stmt.c	/^struct nesting *loop_stack;$/;"	v
loop_store_mems	loop.c	/^static rtx loop_store_mems;$/;"	v	file:
loop_time	toplev.c	/^int loop_time;$/;"	v
loop_used_count_register	loop.c	/^int *loop_used_count_register;$/;"	v
loops_enclosed	loop.c	/^static int loops_enclosed;$/;"	v	file:
losing_caller_save_reg_set	regclass.c	/^HARD_REG_SET losing_caller_save_reg_set;$/;"	v
low	dwarf2out.c	/^  unsigned long low;$/;"	m	struct:dw_long_long_struct
low	libgcc2.c	/^  struct DIstruct {SItype high, low;};$/;"	m	struct:DIstruct
low	libgcc2.c	/^  struct DIstruct {SItype low, high;};$/;"	m	struct:DIstruct
low	stmt.c	/^  tree			low;	\/* Lowest index value for this label *\/$/;"	m	struct:case_node
low	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	struct:rtx_const::<anonymous>::<anonymous>
low_cuid	cse.c	/^  int low_cuid;$/;"	m	struct:cse_basic_block_data
low_pc_attribute	dwarfout.c	/^low_pc_attribute (asm_low_label)$/;"	f	file:
lower	floatlib.c	/^      unsigned long lower;$/;"	m	struct:double_long::<anonymous>
lrotate_double	fold-const.c	/^lrotate_double (l1, h1, count, prec, lv, hv)$/;"	f
lshift_double	fold-const.c	/^lshift_double (l1, h1, count, prec, lv, hv, arith)$/;"	f
lshift_value	expmed.c	/^lshift_value (mode, value, bitpos, bitsize)$/;"	f	file:
lshr_optab	optabs.c	/^optab lshr_optab;$/;"	v
lsym	mips-tfile.c	/^  SYMR		*lsym;		\/* pointer to local symbol node *\/$/;"	m	struct:scope
ltdf2_libfunc	optabs.c	/^rtx ltdf2_libfunc;$/;"	v
lthf2_libfunc	optabs.c	/^rtx lthf2_libfunc;$/;"	v
ltoe	real.c	/^ltoe (lp, y)$/;"	f	file:
ltsf2_libfunc	optabs.c	/^rtx ltsf2_libfunc;$/;"	v
lttf2_libfunc	optabs.c	/^rtx lttf2_libfunc;$/;"	v
ltxf2_libfunc	optabs.c	/^rtx ltxf2_libfunc;$/;"	v
lvalue_or_else	c-typeck.c	/^lvalue_or_else (ref, msgid)$/;"	f
lvalue_p	c-typeck.c	/^lvalue_p (ref)$/;"	f
m16m	real.c	/^m16m (a, b, c)$/;"	f	file:
mac_info_attribute	dwarfout.c	/^mac_info_attribute (mac_info_start_label)$/;"	f	file:
macarg	cccp.c	/^macarg (argptr, rest_args)$/;"	f	file:
macarg	cpphash.c	/^macarg (pfile, rest_args)$/;"	f	file:
macarg1	cccp.c	/^macarg1 (start, limit, macro, depthptr, newlines, comments, rest_args)$/;"	f	file:
mach_dep_reorg_dump	toplev.c	/^int mach_dep_reorg_dump = 0;$/;"	v
machine_suffix	gcc.c	/^static const char *machine_suffix = 0;$/;"	v	file:
macro	cccp.c	/^  struct hashnode *macro;$/;"	m	struct:file_buf
macro_cleanup	cpphash.c	/^macro_cleanup (pbuf, pfile)$/;"	f	file:
macrodef	cccp.c	/^struct macrodef$/;"	s	file:
macroexpand	cccp.c	/^macroexpand (hp, op)$/;"	f	file:
macroexpand	cpphash.c	/^macroexpand (pfile, hp)$/;"	f
main	cccp.c	/^main (argc, argv)$/;"	f
main	cexp.c	/^main (argc, argv)$/;"	f
main	collect2.c	/^main (argc, argv)$/;"	f
main	cppmain.c	/^main (argc, argv)$/;"	f
main	doprint.c	/^main ()$/;"	f
main	doschk.c	/^main (argc, argv)$/;"	f
main	enquire.c	/^int main(argc, argv) int argc; char *argv[]; {$/;"	f
main	fix-header.c	/^main (argc, argv)$/;"	f
main	fp-test.c	/^main ()$/;"	f
main	gcc.c	/^main (argc, argv)$/;"	f
main	gcov.c	/^main (argc, argv)$/;"	f
main	gen-protos.c	/^main (argc, argv)$/;"	f
main	genattr.c	/^main (argc, argv)$/;"	f
main	genattrtab.c	/^main (argc, argv)$/;"	f
main	gencheck.c	/^int main (argc, argv)$/;"	f
main	gencodes.c	/^main (argc, argv)$/;"	f
main	genconfig.c	/^main (argc, argv)$/;"	f
main	genemit.c	/^main (argc, argv)$/;"	f
main	genextract.c	/^main (argc, argv)$/;"	f
main	genflags.c	/^main (argc, argv)$/;"	f
main	gengenrtl.c	/^main(argc, argv)$/;"	f
main	genopinit.c	/^main (argc, argv)$/;"	f
main	genoutput.c	/^main (argc, argv)$/;"	f
main	genpeep.c	/^main (argc, argv)$/;"	f
main	genrecog.c	/^main (argc, argv)$/;"	f
main	mips-tdump.c	/^main (argc, argv)$/;"	f
main	mips-tfile.c	/^main ()$/;"	f
main	mips-tfile.c	/^main (argc, argv)$/;"	f
main	protoize.c	/^main (argc, argv)$/;"	f
main	pself.c	/^main(){char*p="main(){char*p=%c%s%c;(void)printf(p,34,p,34,10);}%c";(void)printf(p,34,p,34,10);}$/;"	f
main	pself1.c	/^main(a){a="main(a){a=%c%s%c;printf(a,34,a,34);}";printf(a,34,a,34);}/;"	f
main	pself2.c	/^main(){char*a="main(){char*a=%c%s%c;int b='%c';printf(a,b,a,b,b);}";int b='"';printf(a,b,a,b,b);}$/;"	f
main	pself3.c	/^main(a){printf(a,34,a="main(a){printf(a,34,a=%c%s%c,34);}",34);}$/;"	f
main	pself4.c	/^int main(void){char*p="#include <stdio.h>%cint main(void){char*p=%c%s%c;(void)printf(p,10,34,p,34,10);return 0;}%c";(void)printf(p,10,34,p,34,10);return 0;}$/;"	f
main	pself5.c	/^int main(void){char*p="#include <stdio.h>%c#define N '%cn'%c#define Q '%c%c'%c#define B '%c%c'%cint main(void){char*p=%c%s%c;(void)printf(p,N,B,N,B,Q,N,B,B,N,Q,p,Q,N);return 0;}%c";(void)printf(p,N,B,N,B,Q,N,B,B,N,Q,p,Q,N);return 0;}$/;"	f
main	tlink.c	/^  const char *main;$/;"	m	struct:file_hash_entry
main	toplev.c	/^main (argc, argv)$/;"	f
mainCRTStartup	libgcc1-test.c	/^void mainCRTStartup() {}$/;"	f
main_input_filename	toplev.c	/^char *main_input_filename;$/;"	v
main_without__main	libgcc1-test.c	/^main_without__main ()$/;"	f
make_alternative_compare	genattrtab.c	/^make_alternative_compare (mask)$/;"	f	file:
make_assertion	cccp.c	/^make_assertion (option, str)$/;"	f	file:
make_binding_level	c-decl.c	/^make_binding_level ()$/;"	f	file:
make_bit_field_ref	fold-const.c	/^make_bit_field_ref (inner, type, bitsize, bitpos, unsignedp)$/;"	f	file:
make_call_insn_raw	emit-rtl.c	/^make_call_insn_raw (pattern)$/;"	f	file:
make_canonical	genattrtab.c	/^make_canonical (attr, exp)$/;"	f	file:
make_compound_operation	combine.c	/^make_compound_operation (x, in_code)$/;"	f	file:
make_decl_one_only	varasm.c	/^make_decl_one_only (decl)$/;"	f
make_decl_rtl	varasm.c	/^make_decl_rtl (decl, asmspec, top_level)$/;"	f
make_definition	cccp.c	/^make_definition (str)$/;"	f	file:
make_edge	flow.c	/^make_edge (src, dst, flags)$/;"	f	file:
make_edges	flow.c	/^make_edges (label_value_list, bb_eh_end)$/;"	f	file:
make_extraction	combine.c	/^make_extraction (mode, inner, pos, pos_rtx, len,$/;"	f	file:
make_field_assignment	combine.c	/^make_field_assignment (x)$/;"	f	file:
make_function_rtl	varasm.c	/^make_function_rtl (decl)$/;"	f
make_insn_raw	emit-rtl.c	/^make_insn_raw (pattern)$/;"	f
make_insn_sequence	genrecog.c	/^make_insn_sequence (insn, type)$/;"	f	file:
make_internal_attr	genattrtab.c	/^make_internal_attr (name, value, special)$/;"	f	file:
make_jump_insn_raw	emit-rtl.c	/^make_jump_insn_raw (pattern)$/;"	f	file:
make_label_edge	flow.c	/^make_label_edge (src, label, flags)$/;"	f	file:
make_length_attrs	genattrtab.c	/^make_length_attrs ()$/;"	f	file:
make_memloc	reload.c	/^make_memloc (ad, regno)$/;"	f	file:
make_nan	real.c	/^make_nan (nan, sign, mode)$/;"	f	file:
make_new_qty	cse.c	/^make_new_qty (reg)$/;"	f	file:
make_node	tree.c	/^make_node (code)$/;"	f
make_numeric_value	genattrtab.c	/^make_numeric_value (n)$/;"	f	file:
make_pointer_declarator	c-lex.c	/^make_pointer_declarator (type_quals, target)$/;"	f
make_range	fold-const.c	/^make_range (exp, pin_p, plow, phigh)$/;"	f	file:
make_regs_eqv	cse.c	/^make_regs_eqv (new, old)$/;"	f	file:
make_relative_prefix	gcc.c	/^make_relative_prefix (progname, bin_prefix, prefix)$/;"	f	file:
make_return_insns	reorg.c	/^make_return_insns (first)$/;"	f	file:
make_safe_from	emit-rtl.c	/^make_safe_from (x, other)$/;"	f
make_signed_type	stor-layout.c	/^make_signed_type (precision)$/;"	f
make_sstring_space	scan.c	/^make_sstring_space (str, count)$/;"	f
make_tree	expmed.c	/^make_tree (type, x)$/;"	f
make_tree_vec	tree.c	/^make_tree_vec (len)$/;"	f
make_undef	cccp.c	/^make_undef (str, op)$/;"	f	file:
make_unsigned_type	stor-layout.c	/^make_unsigned_type (precision)$/;"	f
make_var_volatile	varasm.c	/^make_var_volatile (var)$/;"	f
mangled	tlink.c	/^  const char *mangled;$/;"	m	struct:demangled_hash_entry
map	collect2.c	/^  load_cmd_map_command_t	map;	\/* map indexing other load cmds *\/$/;"	m	union:load_union
map_coff_derived_type	mips-tfile.c	/^static tq_t map_coff_derived_type[ (int)DT_MAX ] = {$/;"	v	file:
map_coff_storage	mips-tfile.c	/^static sc_t map_coff_storage[ (int)C_MAX ] = {$/;"	v	file:
map_coff_sym_type	mips-tfile.c	/^static st_t map_coff_sym_type[ (int)C_MAX ] = {$/;"	v	file:
map_coff_types	mips-tfile.c	/^static bt_t map_coff_types[ (int)T_MAX ] = {$/;"	v	file:
map_from	cccp.c	/^  char *map_from;$/;"	m	struct:file_name_map
map_from	cppfiles.c	/^  char *map_from;$/;"	m	struct:file_name_map
map_list_map	cppfiles.c	/^  struct file_name_map *map_list_map;$/;"	m	struct:file_name_map_list
map_list_name	cppfiles.c	/^  char *map_list_name;$/;"	m	struct:file_name_map_list
map_list_next	cppfiles.c	/^  struct file_name_map_list *map_list_next;$/;"	m	struct:file_name_map_list
map_next	cccp.c	/^  struct file_name_map *map_next;$/;"	m	struct:file_name_map
map_next	cppfiles.c	/^  struct file_name_map *map_next;$/;"	m	struct:file_name_map
map_to	cccp.c	/^  char *map_to;$/;"	m	struct:file_name_map
map_to	cppfiles.c	/^  char *map_to;$/;"	m	struct:file_name_map
mapfile	collect2.c	/^mapfile (name)$/;"	f	file:
mark	varasm.c	/^  int mark;$/;"	m	struct:pool_constant
mark_addressable	c-typeck.c	/^mark_addressable (exp)$/;"	f
mark_all_labels	jump.c	/^mark_all_labels (f, cross_jump)$/;"	f	file:
mark_all_temps_used	function.c	/^mark_all_temps_used ()$/;"	f
mark_block_as_eh_region	stmt.c	/^mark_block_as_eh_region ()$/;"	f
mark_block_as_not_eh_region	stmt.c	/^mark_block_as_not_eh_region ()$/;"	f
mark_call	gcse.c	/^mark_call (insn)$/;"	f	file:
mark_clobber	gcse.c	/^mark_clobber (pat, insn)$/;"	f	file:
mark_constant_pool	varasm.c	/^mark_constant_pool ()$/;"	f	file:
mark_constants	varasm.c	/^mark_constants (x)$/;"	f	file:
mark_critical_edges	flow.c	/^mark_critical_edges ()$/;"	f	file:
mark_elimination	global.c	/^mark_elimination (from, to)$/;"	f
mark_end_of_function_resources	resource.c	/^mark_end_of_function_resources (trial, include_delayed_effects)$/;"	f
mark_flags_life_zones	regmove.c	/^mark_flags_life_zones (flags)$/;"	f	file:
mark_home_live	reload1.c	/^mark_home_live (regno)$/;"	f
mark_jump_label	jump.c	/^mark_jump_label (x, insn, cross_jump)$/;"	f	file:
mark_life	local-alloc.c	/^mark_life (regno, mode, life)$/;"	f	file:
mark_loop_jump	loop.c	/^mark_loop_jump (x, loop_num)$/;"	f	file:
mark_modified_reg	jump.c	/^mark_modified_reg (dest, x)$/;"	f	file:
mark_not_eliminable	reload1.c	/^mark_not_eliminable (dest, x)$/;"	f	file:
mark_oprs_set	gcse.c	/^mark_oprs_set (insn)$/;"	f	file:
mark_referenced_regs	caller-save.c	/^mark_referenced_regs (x)$/;"	f	file:
mark_referenced_resources	resource.c	/^mark_referenced_resources (x, res, include_delayed_effects)$/;"	f
mark_reg_clobber	global.c	/^mark_reg_clobber (reg, setter)$/;"	f	file:
mark_reg_conflicts	global.c	/^mark_reg_conflicts (reg)$/;"	f	file:
mark_reg_death	global.c	/^mark_reg_death (reg)$/;"	f	file:
mark_reg_live_nc	global.c	/^mark_reg_live_nc (regno, mode)$/;"	f	file:
mark_reg_pointer	emit-rtl.c	/^mark_reg_pointer (reg, align)$/;"	f
mark_reg_store	global.c	/^mark_reg_store (reg, setter)$/;"	f	file:
mark_regs_live_at_end	flow.c	/^mark_regs_live_at_end (set)$/;"	f	file:
mark_regs_pat	reg-stack.c	/^mark_regs_pat (pat, set)$/;"	f	file:
mark_reload_reg_in_use	reload1.c	/^mark_reload_reg_in_use (regno, opnum, type, mode)$/;"	f	file:
mark_seen_cases	stmt.c	/^mark_seen_cases (type, cases_seen, count, sparseness)$/;"	f
mark_set	gcse.c	/^mark_set (pat, insn)$/;"	f	file:
mark_set_1	flow.c	/^mark_set_1 (needed, dead, x, insn, significant)$/;"	f	file:
mark_set_regs	caller-save.c	/^mark_set_regs (reg, setter)$/;"	f	file:
mark_set_regs	flow.c	/^mark_set_regs (needed, dead, x, insn, significant)$/;"	f	file:
mark_set_resources	resource.c	/^mark_set_resources (x, res, in_dest, include_delayed_effects)$/;"	f
mark_stabs	mips-tfile.c	/^mark_stabs (start)$/;"	f	file:
mark_stores	integrate.c	/^mark_stores (dest, x)$/;"	f
mark_target_live_regs	resource.c	/^mark_target_live_regs (insns, target, res)$/;"	f
mark_temp_addr_taken	function.c	/^mark_temp_addr_taken (x)$/;"	f
mark_used_regs	flow.c	/^mark_used_regs (needed, live, x, final, insn)$/;"	f	file:
mark_used_regs_combine	combine.c	/^mark_used_regs_combine (x)$/;"	f	file:
mark_user_reg	emit-rtl.c	/^mark_user_reg (reg)$/;"	f
mark_varargs	function.c	/^mark_varargs ()$/;"	f
mask_rtx	expmed.c	/^mask_rtx (mode, bitpos, bitsize, complement)$/;"	f	file:
match	loop.c	/^  struct movable *match;	\/* First entry for same value *\/$/;"	m	struct:movable
match	regmove.c	/^struct match {$/;"	s	file:
match_rtx	genpeep.c	/^match_rtx (x, path, fail_label)$/;"	f	file:
max	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	m	struct:
max	genattr.c	/^  int max;$/;"	m	struct:range
max	genattrtab.c	/^  int max;$/;"	m	struct:range
max_allocno	global.c	/^static int max_allocno;$/;"	v	file:
max_attr_value	genattrtab.c	/^max_attr_value (exp, unknownp)$/;"	f	file:
max_block_depth	final.c	/^static int max_block_depth;$/;"	v	file:
max_blockage	genattrtab.c	/^  int max_blockage;		\/* Maximum time an insn blocks the unit.  *\/$/;"	m	struct:function_unit
max_clobbers_per_insn	genconfig.c	/^static int max_clobbers_per_insn;$/;"	v	file:
max_cuid	gcse.c	/^static int max_cuid;$/;"	v	file:
max_depth	genrecog.c	/^static int max_depth;$/;"	v	file:
max_dup_operands	genconfig.c	/^static int max_dup_operands;    \/* Largest number of match_dup in any insn.  *\/$/;"	v	file:
max_dup_opno	genemit.c	/^static int max_dup_opno;$/;"	v	file:
max_elements_made	cse.c	/^static int max_elements_made;$/;"	v	file:
max_file_offset	mips-tfile.c	/^static long	max_file_offset	= 0;		\/* maximum file offset *\/$/;"	v	file:
max_fn	genattrtab.c	/^max_fn (exp)$/;"	f	file:
max_gcse_regno	gcse.c	/^static int max_gcse_regno;$/;"	v	file:
max_id_len	genflags.c	/^static int max_id_len;$/;"	v	file:
max_include_len	cccp.c	/^static int max_include_len;$/;"	v	file:
max_index	c-typeck.c	/^  tree max_index;$/;"	m	struct:constructor_stack
max_index	regclass.c	/^  size_t max_index;		\/* maximum index # *\/$/;"	m	struct:reg_info_data
max_insn_uid	cse.c	/^static int max_insn_uid;$/;"	v	file:
max_insns_per_split	genconfig.c	/^static int max_insns_per_split = 1;$/;"	v	file:
max_jump_chain	jump.c	/^static int max_jump_chain;$/;"	v	file:
max_label_num	emit-rtl.c	/^max_label_num ()$/;"	f
max_labelno	final.c	/^static int min_labelno, max_labelno;$/;"	v	file:
max_len	collect2.c	/^  int max_len;                \/* Max length of a prefix in PLIST *\/$/;"	m	struct:path_prefix
max_len	gcc.c	/^  int max_len;                \/* Max length of a prefix in PLIST *\/$/;"	m	struct:path_prefix
max_loop_num	loop.c	/^static int max_loop_num;$/;"	v	file:
max_luid	loop.c	/^static int max_luid;$/;"	v	file:
max_operand_1	genemit.c	/^max_operand_1 (x)$/;"	f	file:
max_operand_vec	genemit.c	/^max_operand_vec (insn, arg)$/;"	f	file:
max_opno	genemit.c	/^static int max_opno;$/;"	v	file:
max_opno	genoutput.c	/^static int max_opno;$/;"	v	file:
max_opno	genpeep.c	/^static int max_opno;$/;"	v	file:
max_parallel	regclass.c	/^int max_parallel;$/;"	v
max_parm_reg	function.c	/^int max_parm_reg;$/;"	v
max_parm_reg_num	function.c	/^max_parm_reg_num ()$/;"	f
max_priority	haifa-sched.c	/^static int max_priority;$/;"	v	file:
max_priority	sched.c	/^static int max_priority;$/;"	v	file:
max_qty	cse.c	/^static int max_qty;$/;"	v	file:
max_recog_operands	genconfig.c	/^static int max_recog_operands;  \/* Largest operand number seen.  *\/$/;"	v	file:
max_reg	cse.c	/^static int max_reg;$/;"	v	file:
max_reg_before_loop	loop.c	/^int max_reg_before_loop;$/;"	v
max_reg_num	emit-rtl.c	/^max_reg_num ()$/;"	f
max_regno	flow.c	/^int max_regno;$/;"	v
max_skip	final.c	/^  short max_skip;$/;"	m	struct:label_alignment
max_uid	cse.c	/^static int max_uid;$/;"	v	file:
max_uid	gcse.c	/^static int max_uid;$/;"	v	file:
max_uid	reg-stack.c	/^static int max_uid = 0;$/;"	v	file:
max_uid	reorg.c	/^static int max_uid;$/;"	v	file:
max_uid_cuid	combine.c	/^static int max_uid_cuid;$/;"	v	file:
max_uid_for_loop	loop.c	/^int max_uid_for_loop;$/;"	v
maximum_field_alignment	stor-layout.c	/^int maximum_field_alignment;$/;"	v
maximum_int	enquire.c	/^int maximum_int() {$/;"	f
maximum_uid	except.c	/^static int maximum_uid;$/;"	v	file:
maxint	enquire.c	/^int maxint;$/;"	v
maxlineno	gcov.c	/^  int maxlineno;$/;"	m	struct:sourcefile
maxtoken	c-lex.c	/^static int maxtoken;		\/* Current nominal length of token buffer.  *\/$/;"	v	file:
may_move_cost	regclass.c	/^static int may_move_cost[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	file:
may_not_optimize	loop.c	/^static varray_type may_not_optimize;$/;"	v	file:
may_trap_exp	haifa-sched.c	/^may_trap_exp (x, is_store)$/;"	f	file:
may_trap_p	rtlanal.c	/^may_trap_p (x)$/;"	f
maybe_build_cleanup	c-decl.c	/^maybe_build_cleanup (decl)$/;"	f
maybe_building_objc_message_expr	c-lang.c	/^maybe_building_objc_message_expr ()$/;"	f
maybe_eliminate_biv	loop.c	/^maybe_eliminate_biv (bl, loop_start, end, eliminate_p, threshold, insn_count)$/;"	f	file:
maybe_eliminate_biv_1	loop.c	/^maybe_eliminate_biv_1 (x, insn, bl, eliminate_p, where)$/;"	f	file:
maybe_fix_stack_asms	reload1.c	/^maybe_fix_stack_asms ()$/;"	f	file:
maybe_get_identifier	tree.c	/^maybe_get_identifier (text)$/;"	f
maybe_mark_pseudo_spilled	reload1.c	/^maybe_mark_pseudo_spilled (reg)$/;"	f	file:
maybe_objc_check_decl	c-lang.c	/^maybe_objc_check_decl (decl)$/;"	f
maybe_objc_comptypes	c-lang.c	/^maybe_objc_comptypes (lhs, rhs, reflexive)$/;"	f
maybe_objc_method_name	c-lang.c	/^maybe_objc_method_name (decl)$/;"	f
maybe_tweak	tlink.c	/^maybe_tweak (line, f)$/;"	f	file:
maybe_unlink	collect2.c	/^maybe_unlink (file)$/;"	f	file:
maybepermanent_firstobj	tree.c	/^char *maybepermanent_firstobj;$/;"	v
maybepermanent_obstack	tree.c	/^struct obstack maybepermanent_obstack;$/;"	v
mcount	gmon.c	/^mcount()$/;"	f
md_exec_prefix	gcc.c	/^static const char *md_exec_prefix = MD_EXEC_PREFIX;$/;"	v	file:
md_startfile_prefix	gcc.c	/^static const char *md_startfile_prefix = MD_STARTFILE_PREFIX;$/;"	v	file:
md_startfile_prefix_1	gcc.c	/^static const char *md_startfile_prefix_1 = MD_STARTFILE_PREFIX_1;$/;"	v	file:
mem	loop.c	/^  rtx mem;      \/* The MEM itself.  *\/$/;"	m	struct:loop_mem_info
mem_cost	regclass.c	/^  int mem_cost;$/;"	m	struct:costs
mem_first_set	gcse.c	/^static int mem_first_set;$/;"	v	file:
mem_last_set	combine.c	/^static int mem_last_set;$/;"	v	file:
mem_last_set	gcse.c	/^static int mem_last_set;$/;"	v	file:
mem_loc_descriptor	dwarf2out.c	/^mem_loc_descriptor (rtl)$/;"	f	file:
mem_set_in_block	gcse.c	/^static char *mem_set_in_block;$/;"	v	file:
mem_set_list	flow.c	/^static rtx mem_set_list;$/;"	v	file:
member_attribute	dwarfout.c	/^member_attribute (context)$/;"	f	file:
member_declared_type	dwarf2out.c	/^member_declared_type (member)$/;"	f	file:
member_declared_type	dwarfout.c	/^member_declared_type (member)$/;"	f	file:
memcmp_libfunc	optabs.c	/^rtx memcmp_libfunc;$/;"	v
memcpy	libgcc1-test.c	/^void memcpy() {}$/;"	f
memcpy_libfunc	optabs.c	/^rtx memcpy_libfunc;$/;"	v
memory_address	explow.c	/^memory_address (mode, x)$/;"	f
memory_address_noforce	explow.c	/^memory_address_noforce (mode, x)$/;"	f
memory_address_p	recog.c	/^memory_address_p (mode, addr)$/;"	f
memory_extend_rtx	cse.c	/^static rtx memory_extend_rtx;$/;"	v	file:
memory_full	cccp.c	/^memory_full ()$/;"	f	file:
memory_full	cppalloc.c	/^memory_full ()$/;"	f	file:
memory_move_secondary_cost	regclass.c	/^memory_move_secondary_cost (mode, class, in)$/;"	f
memory_operand	recog.c	/^memory_operand (op, mode)$/;"	f
memref_referenced_p	local-alloc.c	/^memref_referenced_p (memref, x)$/;"	f	file:
memref_used_between_p	local-alloc.c	/^memref_used_between_p (memref, start, end)$/;"	f	file:
memrefs_conflict_p	alias.c	/^memrefs_conflict_p (xsize, x, ysize, y, c)$/;"	f	file:
mems_in_disjoint_alias_sets_p	alias.c	/^mems_in_disjoint_alias_sets_p (mem1, mem2)$/;"	f	file:
memset_libfunc	optabs.c	/^rtx memset_libfunc;$/;"	v
mention_regs	cse.c	/^mention_regs (x)$/;"	f	file:
merge_assigned_reloads	reload1.c	/^merge_assigned_reloads (insn)$/;"	f	file:
merge_attributes	tree.c	/^merge_attributes (a1, a2)$/;"	f
merge_blocks	flow.c	/^merge_blocks (e, b, c)$/;"	f	file:
merge_blocks_nomove	flow.c	/^merge_blocks_nomove (a, b)$/;"	f	file:
merge_equiv_classes	cse.c	/^merge_equiv_classes (class1, class2)$/;"	f	file:
merge_include_chains	cppfiles.c	/^merge_include_chains (opts)$/;"	f
merge_machine_decl_attributes	tree.c	/^merge_machine_decl_attributes (olddecl, newdecl)$/;"	f
merge_machine_type_attributes	tree.c	/^merge_machine_type_attributes (t1, t2)$/;"	f
merge_outer_ops	combine.c	/^merge_outer_ops (pop0, pconst0, op1, const1, mode, pcomp_p)$/;"	f	file:
merge_ranges	fold-const.c	/^merge_ranges (pin_p, plow, phigh, in0_p, low0, high0, in1_p, low1, high1)$/;"	f	file:
merge_trees	genrecog.c	/^merge_trees (oldh, addh)$/;"	f	file:
merror	real.c	/^int merror = 0;$/;"	v
mesg_implicit_function_declaration	c-decl.c	/^int mesg_implicit_function_declaration;$/;"	v
min	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	m	struct:
min	genattr.c	/^  int min;$/;"	m	struct:range
min	genattrtab.c	/^  int min;$/;"	m	struct:range
min_index	regclass.c	/^  size_t min_index;		\/* minimum index # *\/$/;"	m	struct:reg_info_data
min_labelno	final.c	/^static int min_labelno, max_labelno;$/;"	v	file:
min_precision	c-common.c	/^min_precision (value, unsignedp)$/;"	f
missing	enquire.c	/^Procedure missing(s) char *s; {$/;"	f
missing_braces_mentioned	c-typeck.c	/^static int missing_braces_mentioned;$/;"	v	file:
missing_extern_C_count	fix-header.c	/^int missing_extern_C_count = 0;$/;"	v
mod_fund_type_attribute	dwarfout.c	/^mod_fund_type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
mod_u_d_type_attribute	dwarfout.c	/^mod_u_d_type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
mode	calls.c	/^  enum machine_mode mode;$/;"	m	struct:arg_data
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:set
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:table_elt
mode	genrecog.c	/^  enum machine_mode mode;	\/* Machine mode of node *\/$/;"	m	struct:decision
mode	libgcc2.c	/^  enum bb_func_mode mode;$/;"	m	struct:bb_func
mode	reload.c	/^  enum machine_mode mode;	\/* mode it must have *\/$/;"	m	struct:replacement
mode	varasm.c	/^  enum machine_mode mode;$/;"	m	struct:pool_constant
mode	varasm.c	/^  unsigned int mode : 16;$/;"	m	struct:rtx_const
mode_class	rtl.c	/^enum mode_class mode_class[(int) MAX_MACHINE_MODE] = {$/;"	v
mode_dependent_address_p	recog.c	/^mode_dependent_address_p (addr)$/;"	f
mode_for_size	stor-layout.c	/^mode_for_size (size, class, limit)$/;"	f
mode_independent_operand	recog.c	/^mode_independent_operand (op, mode)$/;"	f
mode_mask_array	rtl.c	/^unsigned HOST_WIDE_INT mode_mask_array[(int) MAX_MACHINE_MODE] = {$/;"	v
mode_name	rtl.c	/^char *mode_name[(int) MAX_MACHINE_MODE + 1] = {$/;"	v
mode_size	rtl.c	/^int mode_size[(int) MAX_MACHINE_MODE] = {$/;"	v
mode_unit_size	rtl.c	/^int mode_unit_size[(int) MAX_MACHINE_MODE] = {$/;"	v
mode_wider_mode	rtl.c	/^unsigned char mode_wider_mode[(int) MAX_MACHINE_MODE] = {$/;"	v
modes	genoutput.c	/^  enum machine_mode modes[MAX_MAX_OPERANDS];$/;"	m	struct:data
modes	genoutput.c	/^static enum machine_mode modes[MAX_MAX_OPERANDS];$/;"	v	file:
modes_equiv_for_class_p	reload1.c	/^modes_equiv_for_class_p (allocate_mode, other_mode, class)$/;"	f	file:
modified_between_p	rtlanal.c	/^modified_between_p (x, start, end)$/;"	f
modified_in_p	rtlanal.c	/^modified_in_p (x, insn)$/;"	f
modified_mem	jump.c	/^static int modified_mem;$/;"	v	file:
modified_regs	jump.c	/^static char *modified_regs;$/;"	v	file:
modified_type_die	dwarf2out.c	/^modified_type_die (type, is_const_type, is_volatile_type, context_die)$/;"	f	file:
momentary_firstobj	tree.c	/^char *momentary_firstobj;$/;"	v
momentary_function_firstobj	tree.c	/^char *momentary_function_firstobj;$/;"	v
momentary_level	tree.c	/^struct momentary_level$/;"	s	file:
momentary_obstack	tree.c	/^struct obstack momentary_obstack;$/;"	v
momentary_stack	tree.c	/^struct momentary_level *momentary_stack;$/;"	v
moncontrol	gmon.c	/^moncontrol(mode)$/;"	f
monstartup	gmon.c	/^monstartup(lowpc, highpc)$/;"	f
monthnames	cccp.c	/^static char *monthnames[] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun",$/;"	v	file:
monthnames	cpphash.c	/^static char *monthnames[] =$/;"	v	file:
mostly_true_jump	reorg.c	/^mostly_true_jump (jump_insn, condition)$/;"	f	file:
mostly_zeros_p	expr.c	/^mostly_zeros_p (exp)$/;"	f	file:
mov_optab	optabs.c	/^optab mov_optab;$/;"	v
movable	loop.c	/^struct movable$/;"	s	file:
movcc_gen_code	optabs.c	/^enum insn_code movcc_gen_code[NUM_MACHINE_MODES];$/;"	v
move2add_luid	reload1.c	/^static int move2add_luid;$/;"	v	file:
move2add_note_store	reload1.c	/^move2add_note_store (dst, set)$/;"	f	file:
move_block_from_reg	expr.c	/^move_block_from_reg (regno, x, nregs, size)$/;"	f
move_block_to_reg	expr.c	/^move_block_to_reg (regno, x, nregs, mode)$/;"	f
move_by_pieces	expr.c	/^move_by_pieces (to, from, len, align)$/;"	f
move_by_pieces	expr.c	/^struct move_by_pieces$/;"	s	file:
move_by_pieces_1	expr.c	/^move_by_pieces_1 (genfun, mode, data)$/;"	f	file:
move_by_pieces_ninsns	expr.c	/^move_by_pieces_ninsns (l, align)$/;"	f	file:
move_cleanups_up	stmt.c	/^move_cleanups_up ()$/;"	f
move_cost	regclass.c	/^static int move_cost[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	file:
move_deaths	combine.c	/^move_deaths (x, maybe_kill_insn, from_cuid, to_insn, pnotes)$/;"	f	file:
move_for_stack_reg	reg-stack.c	/^move_for_stack_reg (insn, regstack, pat)$/;"	f	file:
move_insn	haifa-sched.c	/^move_insn (insn, last)$/;"	f	file:
move_insn	loop.c	/^  unsigned int move_insn : 1;	\/* 1 means that we call emit_move_insn to$/;"	m	struct:movable
move_insn1	haifa-sched.c	/^move_insn1 (insn, last)$/;"	f	file:
move_insn_first	loop.c	/^  unsigned int move_insn_first:1;\/* Same as above, if this is necessary for the$/;"	m	struct:movable
move_movables	loop.c	/^move_movables (movables, threshold, insn_count, loop_start, end, nregs)$/;"	f	file:
move_replacements	reload.c	/^move_replacements (x, y)$/;"	f
moved_once	loop.c	/^static char *moved_once;$/;"	v	file:
movstr_optab	expr.c	/^enum insn_code movstr_optab[NUM_MACHINE_MODES];$/;"	v
movstrict_optab	optabs.c	/^optab movstrict_optab;$/;"	v
mpath	doschk.c	/^mpath (ent)$/;"	f
mprotect	libgcc2.c	/^mprotect (char *addr, int len, int prot)$/;"	f
mtherr	real.c	/^mtherr (name, code)$/;"	f	file:
mtime	protoize.c	/^  time_t			mtime;      \/* Time of last modification.  *\/$/;"	m	struct:file_info_struct
mul_cost	expmed.c	/^static int mul_cost[NUM_MACHINE_MODES];$/;"	v	file:
mul_double	fold-const.c	/^mul_double (l1, h1, l2, h2, lv, hv)$/;"	f
mul_highpart_cost	expmed.c	/^static int mul_highpart_cost[NUM_MACHINE_MODES];$/;"	v	file:
mul_widen_cost	expmed.c	/^static int mul_widen_cost[NUM_MACHINE_MODES];$/;"	v	file:
multilib_defaults	gcc.c	/^static char *multilib_defaults;$/;"	v	file:
multilib_defaults_raw	gcc.c	/^static char *multilib_defaults_raw[] = MULTILIB_DEFAULTS;$/;"	v	file:
multilib_dir	gcc.c	/^static const char *multilib_dir;$/;"	v	file:
multilib_matches	gcc.c	/^static char *multilib_matches;$/;"	v	file:
multilib_obstack	gcc.c	/^static struct obstack multilib_obstack;$/;"	v	file:
multilib_select	gcc.c	/^static char *multilib_select;$/;"	v	file:
multiline_string_line	cccp.c	/^static int multiline_string_line = 0;$/;"	v	file:
multiple_of_p	fold-const.c	/^multiple_of_p (type, top, bottom)$/;"	f	file:
multiple_sets	rtlanal.c	/^multiple_sets (insn)$/;"	f
multiplicity	genattr.c	/^  int multiplicity;		\/* Number of units of this type.  *\/$/;"	m	struct:function_unit
multiplicity	genattrtab.c	/^  int multiplicity;		\/* Number of units of this type.  *\/$/;"	m	struct:function_unit
munge_compile_params	protoize.c	/^munge_compile_params (params_list)$/;"	f	file:
must_constrain	genattrtab.c	/^static int must_constrain;$/;"	v	file:
must_extract	genattrtab.c	/^static int must_extract;$/;"	v	file:
my_access	protoize.c	151;"	d	file:
my_chmod	protoize.c	156;"	d	file:
my_open	protoize.c	155;"	d	file:
my_rename	protoize.c	153;"	d	file:
my_stat	protoize.c	152;"	d	file:
my_strerror	cccp.c	/^my_strerror (errnum)$/;"	f	file:
my_strerror	collect2.c	/^my_strerror (e)$/;"	f	file:
my_strerror	cpplib.c	/^my_strerror (errnum)$/;"	f	file:
my_strsignal	collect2.c	/^my_strsignal (s)$/;"	f	file:
my_strsignal	mips-tfile.c	/^my_strsignal (s)$/;"	f
my_unlink	protoize.c	154;"	d	file:
n_aligned_regs	calls.c	/^  int n_aligned_regs;$/;"	m	struct:arg_data
n_alternatives	genoutput.c	/^  int n_alternatives;		\/* Number of alternatives in each constraint *\/$/;"	m	struct:data
n_assembler_options	gcc.c	/^static int n_assembler_options;$/;"	v	file:
n_base_source_files	protoize.c	/^static int n_base_source_files = 0;$/;"	v	file:
n_basic_blocks	flow.c	/^int n_basic_blocks;$/;"	v
n_comma_elts	genattrtab.c	/^n_comma_elts (s)$/;"	f	file:
n_compilers	gcc.c	/^static int n_compilers;$/;"	v	file:
n_default_compilers	gcc.c	/^static int n_default_compilers$/;"	v	file:
n_dups	genoutput.c	/^  int n_dups;			\/* Number times match_dup appears in pattern *\/$/;"	m	struct:data
n_earlyclobbers	reload.c	/^int n_earlyclobbers;$/;"	v
n_elements_made	cse.c	/^static int n_elements_made;$/;"	v	file:
n_exprs	gcse.c	/^static int n_exprs;$/;"	v	file:
n_incomplete	c-decl.c	/^    int n_incomplete;$/;"	m	struct:binding_level
n_infiles	gcc.c	/^static int n_infiles;$/;"	v	file:
n_linker_options	gcc.c	/^static int n_linker_options;$/;"	v	file:
n_non_fixed_regs	regclass.c	/^int n_non_fixed_regs;$/;"	v
n_occurrences	combine.c	/^static int n_occurrences;$/;"	v	file:
n_occurrences	genoutput.c	/^n_occurrences (c, s)$/;"	f	file:
n_occurrences	stmt.c	/^n_occurrences (c, s)$/;"	f	file:
n_operands	genoutput.c	/^  int n_operands;		\/* Number of operands this insn recognizes *\/$/;"	m	struct:data
n_operands	genpeep.c	/^static int n_operands;$/;"	v	file:
n_preprocessor_options	gcc.c	/^static int n_preprocessor_options;$/;"	v	file:
n_regs_saved	caller-save.c	/^static int n_regs_saved;$/;"	v	file:
n_regs_set	global.c	/^static int n_regs_set;$/;"	v	file:
n_reloads	reload.c	/^int n_reloads;$/;"	v
n_replacements	reload.c	/^static int n_replacements;$/;"	v	file:
n_sets	gcse.c	/^static int n_sets;$/;"	v	file:
n_spills	reload1.c	/^static int n_spills;$/;"	v	file:
n_switches	gcc.c	/^static int n_switches;$/;"	v	file:
n_times_set	loop.c	/^static varray_type n_times_set;$/;"	v	file:
n_vis_no_unit	haifa-sched.c	/^int n_vis_no_unit;$/;"	v
n_visual_lines	haifa-sched.c	/^int n_visual_lines;$/;"	v
name	c-common.c	/^  tree name;			\/* identifier such as "gettext" *\/$/;"	m	struct:international_format_info
name	c-common.c	/^  tree name;			\/* identifier such as "printf" *\/$/;"	m	struct:function_format_info
name	c-common.c	/^static struct {enum attrs id; tree name; int min, max, decl_req;} attrtab[50];$/;"	m	struct:
name	cccp.c	/^  U_CHAR *name;			\/* the actual name *\/$/;"	m	struct:assertion_hashnode
name	cccp.c	/^  U_CHAR *name;			\/* the actual name *\/$/;"	m	struct:hashnode
name	cccp.c	/^  U_CHAR *name;$/;"	m	struct:arglist
name	cccp.c	/^  char *name;			\/* Name of directive *\/$/;"	m	struct:directive
name	cexp.c	/^  U_CHAR *name;$/;"	m	struct:arglist
name	cexp.c	/^  struct name {U_CHAR *address; int length;} name;$/;"	m	union:
name	cexp.c	/^  struct name {U_CHAR *address; int length;} name;$/;"	s	file:	union:
name	collect2.c	/^  char *name;				\/* filename *\/$/;"	m	struct:file_info
name	collect2.c	/^  char *name;                 \/* Name of this list (used in config stuff) *\/$/;"	m	struct:path_prefix
name	collect2.c	/^  char name[1];$/;"	m	struct:id
name	cpphash.c	/^  U_CHAR *name;$/;"	m	struct:arglist
name	cpplib.c	/^  char *name;			\/* Name of directive *\/$/;"	m	struct:directive
name	dwarf2out.c	/^  char * name;$/;"	m	struct:pubname_struct
name	dwarfout.c	/^  char *	name;$/;"	m	struct:filename_entry
name	fix-header.c	/^  const char *name;$/;"	m	struct:std_include_entry
name	gcc.c	/^  char *name;			\/* name of the spec.  *\/$/;"	m	struct:spec_list
name	gcc.c	/^  char *name;$/;"	m	struct:spec_list_1
name	gcc.c	/^  const char *name;           \/* Name of this list (used in config stuff) *\/$/;"	m	struct:path_prefix
name	gcc.c	/^  const char *name;$/;"	m	struct:infile
name	gcc.c	/^  const char *name;$/;"	m	struct:option_map
name	gcc.c	/^  const char *name;$/;"	m	struct:temp_file
name	gcov.c	/^  char *name;$/;"	m	struct:sourcefile
name	genattr.c	/^  char *name;			\/* Function unit name.  *\/$/;"	m	struct:function_unit
name	genattrtab.c	/^  char *name;			\/* Function unit name.  *\/$/;"	m	struct:function_unit
name	genattrtab.c	/^  char *name;			\/* Name of attribute.  *\/$/;"	m	struct:attr_desc
name	gengenrtl.c	/^  const char *enumname, *name, *format;$/;"	m	struct:rtx_definition
name	genoutput.c	/^  char *name;$/;"	m	struct:data
name	genrecog.c	/^  const char *name;$/;"	m	struct:pred_table
name	mips-tfile.c	/^  char		*name;		\/* filename *\/$/;"	m	struct:efdr
name	mips-tfile.c	/^  const char *name;			\/* pseudo-op in ascii *\/$/;"	m	struct:_pseudo_ops
name	protoize.c	/^  char *name;$/;"	m	struct:string_list
name	sdbout.c	/^  char *name;$/;"	m	struct:sdb_file
name	toplev.c	/^  const char * name;$/;"	m	struct:
name_and_src_coords_attributes	dwarfout.c	/^name_and_src_coords_attributes (decl)$/;"	f	file:
name_attribute	dwarfout.c	/^name_attribute (name_string)$/;"	f	file:
name_for_index	genoutput.c	/^name_for_index (index)$/;"	f	file:
name_len	gcc.c	/^  int name_len;			\/* length of the name *\/$/;"	m	struct:spec_list
name_len	mips-tfile.c	/^  int		 name_len;	\/* length of the filename *\/$/;"	m	struct:efdr
name_map	cccp.c	/^    struct file_name_map *name_map;$/;"	m	struct:file_name_list
name_newline_fix	cccp.c	/^name_newline_fix (bp)$/;"	f	file:
named_labels	c-decl.c	/^  tree named_labels;$/;"	m	struct:c_function
named_labels	c-decl.c	/^static tree named_labels;$/;"	v	file:
named_section	varasm.c	/^named_section (decl, name, reloc)$/;"	f
namelist	fix-header.c	/^typedef const char *namelist;$/;"	t	file:
names	c-decl.c	/^    tree names;$/;"	m	struct:binding_level
names	fix-header.c	/^  namelist names;$/;"	m	struct:std_include_entry
names	fix-header.c	/^  namelist names;$/;"	m	struct:symbol_list
nargs	cccp.c	/^  int nargs;$/;"	m	struct:definition
nchars	cccp.c	/^    int nchars;			\/* Number of literal chars to copy before$/;"	m	struct:definition::reflist
ncounts	libgcc2.c	/^  long ncounts;$/;"	m	struct:bb
nedf2_libfunc	optabs.c	/^rtx nedf2_libfunc;$/;"	v
need_error_newline	toplev.c	/^static int need_error_newline;$/;"	v	file:
need_func_profiler	profile.c	/^static int need_func_profiler = 0;$/;"	v	file:
needs_blockage_function	genattrtab.c	/^  int needs_blockage_function;	\/* Nonzero if a blockage function required.  *\/$/;"	m	struct:function_unit
needs_conflict_function	genattrtab.c	/^  int needs_conflict_function;	\/* Nonzero if a conflict function required.  *\/$/;"	m	struct:function_unit
needs_range_function	genattrtab.c	/^  int needs_range_function;	\/* Nonzero if blockage range function needed.*\/$/;"	m	struct:function_unit
needs_to_be_converted	protoize.c	/^needs_to_be_converted (file_p)$/;"	f	file:
needs_warning	c-common.c	/^  int needs_warning;$/;"	m	struct:
neg_double	fold-const.c	/^neg_double (l1, h1, lv, hv)$/;"	f
neg_optab	optabs.c	/^optab neg_optab;$/;"	v
negate_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
negate_rtx	expmed.c	/^negate_rtx (mode, x)$/;"	f
negative_ok	genattrtab.c	/^  unsigned negative_ok	: 1;	\/* Allow negative numeric values.  *\/$/;"	m	struct:attr_desc
nehf2_libfunc	optabs.c	/^rtx nehf2_libfunc;$/;"	v
nesf2_libfunc	optabs.c	/^rtx nesf2_libfunc;$/;"	v
nested_scopes	mips-tfile.c	/^  int		 nested_scopes;	\/* # nested scopes *\/$/;"	m	struct:efdr
nesting	stmt.c	/^struct nesting$/;"	s	file:
nesting_depth	stmt.c	/^int nesting_depth;$/;"	v
nesting_stack	stmt.c	/^struct nesting *nesting_stack;$/;"	v
netf2_libfunc	optabs.c	/^rtx netf2_libfunc;$/;"	v
new	function.c	/^  rtx new;$/;"	m	struct:fixup_replacement
new_alias_set	tree.c	/^new_alias_set ()$/;"	f
new_asm_operands_vec	reload1.c	/^static struct rtvec_def *old_asm_operands_vec, *new_asm_operands_vec;$/;"	v	file:
new_basic_block	cse.c	/^new_basic_block ()$/;"	f	file:
new_block	final.c	/^static int new_block = 1;$/;"	v	file:
new_cfi	dwarf2out.c	/^new_cfi ()$/;"	f	file:
new_die	dwarf2out.c	/^new_die (tag_value, parent_die)$/;"	f	file:
new_edge	haifa-sched.c	/^new_edge (source, target)$/;"	f	file:
new_eh_context	libgcc2.c	/^new_eh_context ()$/;"	f	file:
new_eh_region_entry	except.c	/^new_eh_region_entry (note_eh_region, rethrow) $/;"	f	file:
new_include_prefix	cccp.c	/^new_include_prefix (prev_file_name, component, prefix, name)$/;"	f	file:
new_insn_chain	reload1.c	/^new_insn_chain ()$/;"	f
new_insn_dead_notes	haifa-sched.c	/^new_insn_dead_notes (pat, insn, last, orig_insn)$/;"	f	file:
new_insn_dead_notes	sched.c	/^new_insn_dead_notes (pat, insn, last, orig_insn)$/;"	f	file:
new_loc_descr	dwarf2out.c	/^new_loc_descr (op, oprnd1, oprnd2)$/;"	f	file:
new_reg_base_value	alias.c	/^rtx *new_reg_base_value;$/;"	v
new_sometimes_live	haifa-sched.c	/^new_sometimes_live (regs_sometimes_live, regno, sometimes_max)$/;"	f	file:
new_sometimes_live	sched.c	/^new_sometimes_live (regs_sometimes_live, regno, sometimes_max)$/;"	f	file:
new_spill_reg	reload1.c	/^new_spill_reg (chain, i, class, nongroup, dumpfile)$/;"	f	file:
newline_fix	cccp.c	/^newline_fix (bp)$/;"	f	file:
newlines	cccp.c	/^  char newlines;$/;"	m	struct:argdata
newlines	cpphash.c	/^  char newlines;$/;"	m	struct:argdata
newpat_used_regs	combine.c	/^static HARD_REG_SET newpat_used_regs;$/;"	v	file:
nexf2_libfunc	optabs.c	/^rtx nexf2_libfunc;$/;"	v
next	c-common.c	/^  struct function_format_info *next;  \/* next structure on the list *\/$/;"	m	struct:function_format_info
next	c-common.c	/^  struct international_format_info *next;  \/* next structure on the list *\/$/;"	m	struct:international_format_info
next	c-decl.c	/^  struct c_function *next;$/;"	m	struct:c_function
next	c-iterate.c	/^  struct iter_stack_node *next; \/* Next level iterator stack node  *\/$/;"	m	struct:iter_stack_node
next	c-iterate.c	/^  struct ixpansion *next;	\/* Next in the list *\/$/;"	m	struct:ixpansion
next	c-typeck.c	/^  struct constructor_stack *next;$/;"	m	struct:constructor_stack
next	c-typeck.c	/^  struct initializer_stack *next;$/;"	m	struct:initializer_stack
next	cccp.c	/^    struct file_name_list *next;$/;"	m	struct:file_name_list
next	cccp.c	/^    struct reflist *next;$/;"	m	struct:definition::reflist
next	cccp.c	/^  struct arglist *next;$/;"	m	struct:arglist
next	cccp.c	/^  struct assertion_hashnode *next;	\/* double links for easy deletion *\/$/;"	m	struct:assertion_hashnode
next	cccp.c	/^  struct hashnode *next;	\/* double links for easy deletion *\/$/;"	m	struct:hashnode
next	cccp.c	/^  struct if_stack *next;	\/* for chaining to the next stack frame *\/$/;"	m	struct:if_stack
next	cccp.c	/^  struct include_file *next; \/* for include_hashtab *\/$/;"	m	struct:include_file
next	cccp.c	/^  struct tokenlist_list *next;$/;"	m	struct:tokenlist_list
next	cexp.c	/^  struct arglist *next;$/;"	m	struct:arglist
next	collect2.c	/^  struct id *next;$/;"	m	struct:id
next	collect2.c	/^  struct prefix_list *next;   \/* Next in linked list.  *\/$/;"	m	struct:prefix_list
next	combine.c	/^  struct undo *next;$/;"	m	struct:undo
next	cpphash.c	/^  struct arglist *next;$/;"	m	struct:arglist
next	cppinit.c	/^  struct pending_option *next;$/;"	m	struct:pending_option
next	cse.c	/^    struct cse_reg_info* next;$/;"	m	union:cse_reg_info::<anonymous>
next	dbxout.c	/^  struct dbx_file *next;$/;"	m	struct:dbx_file
next	doschk.c	/^  struct ENT *next;$/;"	m	struct:ENT
next	dwarf2out.c	/^  struct limbo_die_struct *next;$/;"	m	struct:limbo_die_struct
next	final.c	/^  struct bb_list *next;		\/* pointer to next basic block *\/$/;"	m	struct:bb_list
next	final.c	/^  struct bb_str *next;		\/* pointer to next string *\/$/;"	m	struct:bb_str
next	fix-header.c	/^  struct partial_proto *next;$/;"	m	struct:partial_proto
next	function.c	/^  struct fixup_replacement *next;$/;"	m	struct:fixup_replacement
next	function.c	/^  struct temp_slot *next;$/;"	m	struct:temp_slot
next	gcc.c	/^  struct prefix_list *next;   \/* Next in linked list.  *\/$/;"	m	struct:prefix_list
next	gcc.c	/^  struct spec_list *next;	\/* Next spec in linked list.  *\/$/;"	m	struct:spec_list
next	gcc.c	/^  struct temp_file *next;$/;"	m	struct:temp_file
next	gcc.c	/^  struct temp_name *next;$/;"	m	struct:temp_name
next	gcc.c	/^  struct user_specs *next;$/;"	m	struct:user_specs
next	gcov.c	/^  struct arcdata *next;$/;"	m	struct:arcdata
next	gcov.c	/^  struct bb_info_list *next;$/;"	m	struct:bb_info_list
next	gcov.c	/^  struct sourcefile *next;$/;"	m	struct:sourcefile
next	gcse.c	/^  struct occr *next;$/;"	m	struct:occr
next	gcse.c	/^  struct reg_set *next;$/;"	m	struct:reg_set
next	genattr.c	/^  struct function_unit *next;	\/* Next function unit.  *\/$/;"	m	struct:function_unit
next	genattrtab.c	/^  struct attr_desc *next;	\/* Next attribute.  *\/$/;"	m	struct:attr_desc
next	genattrtab.c	/^  struct attr_hash *next;	\/* Next structure in the bucket.  *\/$/;"	m	struct:attr_hash
next	genattrtab.c	/^  struct attr_value *next;	\/* Next attribute value in chain.  *\/$/;"	m	struct:attr_value
next	genattrtab.c	/^  struct delay_desc *next;	\/* Next DEFINE_DELAY.  *\/$/;"	m	struct:delay_desc
next	genattrtab.c	/^  struct function_unit *next;	\/* Next function unit.  *\/$/;"	m	struct:function_unit
next	genattrtab.c	/^  struct function_unit_op *next; \/* Next operation for this function unit.  *\/$/;"	m	struct:function_unit_op
next	genattrtab.c	/^  struct insn_def *next;	\/* Next insn in chain.  *\/$/;"	m	struct:insn_def
next	genattrtab.c	/^  struct insn_ent *next;	\/* Next in chain.  *\/$/;"	m	struct:insn_ent
next	genemit.c	/^  struct clobber_ent *next;$/;"	m	struct:clobber_ent
next	genemit.c	/^  struct clobber_pat *next;$/;"	m	struct:clobber_pat
next	genextract.c	/^  struct code_ptr *next;$/;"	m	struct:code_ptr
next	genextract.c	/^  struct extraction *next;$/;"	m	struct:extraction
next	genoutput.c	/^  struct data *next;$/;"	m	struct:data
next	genpeep.c	/^  struct link *next;$/;"	m	struct:link
next	genrecog.c	/^  struct decision *next;	\/* Node to test on failure *\/$/;"	m	struct:decision
next	halfpic.c	/^  struct all_refs *next;	\/* next name created *\/$/;"	m	struct:all_refs
next	libgcc2.c	/^  struct bb *next;$/;"	m	struct:bb
next	libgcc2.c	/^  struct bb_edge *next;$/;"	m	struct:bb_edge
next	libgcc2.c	/^  struct bb_func *next;$/;"	m	struct:bb_func
next	loop.c	/^  struct movable *next;$/;"	m	struct:movable
next	mips-tfile.c	/^  struct forward *next;		\/* next forward reference *\/$/;"	m	struct:forward
next	mips-tfile.c	/^  struct shash	*next;		\/* next hash value *\/$/;"	m	struct:shash
next	mips-tfile.c	/^  struct thash	*next;		\/* next hash value *\/$/;"	m	struct:thash
next	mips-tfile.c	/^  struct vlinks *next;		\/* next set of pages *\/$/;"	m	struct:vlinks
next	print-tree.c	/^  struct bucket *next;$/;"	m	struct:bucket
next	protoize.c	/^  struct string_list *next;$/;"	m	struct:string_list
next	regclass.c	/^  struct reg_info_data *next;	\/* next set of reg_info structures *\/$/;"	m	struct:reg_info_data
next	resource.c	/^  struct target_info *next;	\/* Next info for same hash bucket.  *\/$/;"	m	struct:target_info
next	sdbout.c	/^  struct sdb_file *next;$/;"	m	struct:sdb_file
next	stmt.c	/^  struct goto_fixup *next;$/;"	m	struct:goto_fixup
next	stmt.c	/^  struct label_chain *next;$/;"	m	struct:label_chain
next	stmt.c	/^  struct nesting *next;$/;"	m	struct:nesting
next	tlink.c	/^  struct file_stack_entry *next;$/;"	m	struct:file_stack_entry
next	tlink.c	/^  struct symbol_stack_entry *next;$/;"	m	struct:symbol_stack_entry
next	tree.c	/^  struct obstack_stack *next;$/;"	m	struct:obstack_stack
next	tree.c	/^  struct type_hash *next;	\/* Next structure in the bucket.  *\/$/;"	m	struct:type_hash
next	varasm.c	/^  struct constant_descriptor *next;$/;"	m	struct:constant_descriptor
next	varasm.c	/^  struct deferred_constant *next;$/;"	m	struct:deferred_constant
next	varasm.c	/^  struct pool_constant *next;$/;"	m	struct:pool_constant
next	varasm.c	/^  struct pool_sym *next;$/;"	m	struct:pool_sym
next_active_insn	emit-rtl.c	/^next_active_insn (insn)$/;"	f
next_block_index	final.c	/^int next_block_index;$/;"	v
next_block_number	dbxout.c	/^static int next_block_number;$/;"	v	file:
next_block_number	dwarf2out.c	/^static unsigned next_block_number = 2;$/;"	v	file:
next_block_number	dwarfout.c	/^static unsigned next_block_number = 2;$/;"	v	file:
next_block_number	sdbout.c	/^static int next_block_number;$/;"	v	file:
next_block_number	xcoffout.c	/^static int next_block_number;$/;"	v	file:
next_cc0_user	emit-rtl.c	/^next_cc0_user (insn)$/;"	f
next_code_number	genoutput.c	/^static int next_code_number;$/;"	v	file:
next_comma_elt	genattrtab.c	/^next_comma_elt (pstr)$/;"	f	file:
next_decl_uid	tree.c	/^static int next_decl_uid;$/;"	v	file:
next_die_offset	dwarf2out.c	/^static unsigned long next_die_offset;$/;"	v	file:
next_fde	frame.c	/^next_fde (fde *p)$/;"	f	file:
next_file	mips-tfile.c	/^  struct efdr	*next_file;	\/* next file descriptor *\/$/;"	m	struct:efdr
next_file_number	dbxout.c	/^static int next_file_number;$/;"	v	file:
next_for_func	protoize.c	/^  const def_dec_info *	next_for_func;	\/* -> to rest of chain for func name *\/$/;"	m	struct:def_dec_info_struct
next_in	haifa-sched.c	/^    int next_in;$/;"	m	struct:
next_in_file	protoize.c	/^  const def_dec_info *	next_in_file;	\/* -> to rest of chain for file *\/$/;"	m	struct:def_dec_info_struct
next_index	gen-protos.c	/^int next_index;$/;"	v
next_index	genrecog.c	/^static int next_index;$/;"	v	file:
next_index_number	genoutput.c	/^static int next_index_number;$/;"	v	file:
next_ino	cccp.c	/^  struct include_file *next_ino; \/* for include_ino_hashtab *\/$/;"	m	struct:include_file
next_insn	emit-rtl.c	/^next_insn (insn)$/;"	f
next_insn_code	genrecog.c	/^static int next_insn_code;$/;"	v	file:
next_insn_in_loop	loop.c	/^next_insn_in_loop (insn, start, end, loop_top)$/;"	f	file:
next_insn_no_annul	resource.c	/^next_insn_no_annul (insn)$/;"	f	file:
next_insn_tests_no_inequality	recog.c	/^next_insn_tests_no_inequality (insn)$/;"	f
next_label	emit-rtl.c	/^next_label (insn)$/;"	f
next_label	stmt.c	/^	  rtx next_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
next_nondeleted_insn	jump.c	/^next_nondeleted_insn (insn)$/;"	f
next_nonnote_insn	emit-rtl.c	/^next_nonnote_insn (insn)$/;"	f
next_number	genrecog.c	/^static int next_number;$/;"	v	file:
next_out	haifa-sched.c	/^    int next_out;$/;"	m	struct:
next_pubname_number	dwarfout.c	/^static int next_pubname_number = 0;$/;"	v	file:
next_qty	cse.c	/^static int next_qty;$/;"	v	file:
next_qty	local-alloc.c	/^static int next_qty;$/;"	v	file:
next_real_insn	emit-rtl.c	/^next_real_insn (insn)$/;"	f
next_same_hash	cse.c	/^  struct table_elt *next_same_hash;$/;"	m	struct:table_elt
next_same_hash	gcse.c	/^  struct expr *next_same_hash;$/;"	m	struct:expr
next_same_value	cse.c	/^  struct table_elt *next_same_value;$/;"	m	struct:table_elt
next_set	gcse.c	/^next_set (regno, expr)$/;"	f	file:
next_stack_level	libgcc2.c	/^next_stack_level (void *pc, frame_state *udata, frame_state *caller_udata)$/;"	f	file:
next_subroutine_number	genrecog.c	/^static int next_subroutine_number;$/;"	v	file:
next_type_number	dbxout.c	/^  int next_type_number;$/;"	m	struct:dbx_file
next_type_number	dbxout.c	/^static int next_type_number;$/;"	v	file:
next_type_uid	tree.c	/^static int next_type_uid = 1;$/;"	v	file:
next_unused_dienum	dwarfout.c	/^static unsigned next_unused_dienum = 1;$/;"	v	file:
nextchar	c-lex.c	/^static int nextchar = -1;$/;"	v	file:
nm_file_name	collect2.c	/^static char *nm_file_name;		\/* pathname of nm *\/$/;"	v	file:
no_conflict_p	local-alloc.c	/^no_conflict_p (insn, r0, r1)$/;"	f	file:
no_equiv	local-alloc.c	/^no_equiv (reg, store)$/;"	f	file:
no_global_alloc_regs	global.c	/^static HARD_REG_SET no_global_alloc_regs;$/;"	v	file:
no_jumps_between_p	rtlanal.c	/^no_jumps_between_p (beg, end)$/;"	f
no_labels_between_p	rtlanal.c	/^no_labels_between_p (beg, end)$/;"	f
no_line_directives	cccp.c	/^static int no_line_directives;$/;"	v	file:
no_line_numbers	emit-rtl.c	/^static int no_line_numbers;$/;"	v	file:
no_new_pseudos	toplev.c	/^int no_new_pseudos;$/;"	v
no_output	cccp.c	/^static int no_output;$/;"	v	file:
no_precomp	cccp.c	/^static int no_precomp = 1;$/;"	v	file:
no_record_file	cccp.c	/^static int no_record_file;$/;"	v	file:
no_section	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	file:	enum:in_section
no_special	fix-header.c	/^  no_special,$/;"	e	file:	enum:special_file
no_trigraphs	cccp.c	/^static int no_trigraphs = 0;$/;"	v	file:
nochange_flag	protoize.c	/^static int nochange_flag = 0;		\/* Don't convert, just say what files$/;"	v	file:
node	print-tree.c	/^  tree node;$/;"	m	struct:bucket
node_data	graph.c	/^node_data (fp, tmp_rtx)$/;"	f	file:
node_has_high_bound	stmt.c	/^node_has_high_bound (node, index_type)$/;"	f	file:
node_has_low_bound	stmt.c	/^node_has_low_bound (node, index_type)$/;"	f	file:
node_is_bounded	stmt.c	/^node_is_bounded (node, index_type)$/;"	f	file:
node_type	cccp.c	/^enum node_type {$/;"	g	file:
nolen	c-common.c	/^  tree *nolen;$/;"	m	struct:
nominal_fname	cccp.c	/^  char *nominal_fname;$/;"	m	struct:file_buf
nominal_fname_len	cccp.c	/^  size_t nominal_fname_len;$/;"	m	struct:file_buf
nominal_type	stmt.c	/^	  tree nominal_type;$/;"	m	struct:nesting::<anonymous>::<anonymous>
non_lvalue	fold-const.c	/^non_lvalue (x)$/;"	f
nondefault_syscalls_dir	protoize.c	/^static const char *nondefault_syscalls_dir = 0; \/* Dir to look for$/;"	v	file:
nongcc_SI_type	libgcc1.c	208;"	d	file:
nongcc_word_type	libgcc1.c	213;"	d	file:
nonimmediate_operand	recog.c	/^nonimmediate_operand (op, mode)$/;"	f
nonlocal_goto_handler_labels	function.c	/^rtx nonlocal_goto_handler_labels;$/;"	v
nonlocal_goto_handler_slots	function.c	/^rtx nonlocal_goto_handler_slots;$/;"	v
nonlocal_goto_stack_level	function.c	/^rtx nonlocal_goto_stack_level;$/;"	v
nonlocal_labels	function.c	/^tree nonlocal_labels;$/;"	v
nonmemory_operand	recog.c	/^nonmemory_operand (op, mode)$/;"	f
nonzero_bits	combine.c	/^nonzero_bits (x, mode)$/;"	f	file:
nonzero_bits_mode	combine.c	/^static enum machine_mode nonzero_bits_mode;$/;"	v	file:
nonzero_sign_valid	combine.c	/^static int nonzero_sign_valid;$/;"	v	file:
noop_move_p	flow.c	/^noop_move_p (insn)$/;"	f	file:
normal_obstack	genflags.c	/^static struct obstack call_obstack, normal_obstack;$/;"	v	file:
nosave_flag	protoize.c	/^static int nosave_flag = 0;		\/* Don't save the old version.  *\/$/;"	v	file:
not_both_true	genrecog.c	/^not_both_true (d1, d2, toplevel)$/;"	f	file:
note_addr_stored	loop.c	/^note_addr_stored (x, y)$/;"	f	file:
note_delay_statistics	reorg.c	/^note_delay_statistics (slots_filled, index)$/;"	f	file:
note_insn	loop.c	/^static rtx note_insn;$/;"	v	file:
note_insn_name	rtl.c	/^char *note_insn_name[] = { 0                    , "NOTE_INSN_DELETED",$/;"	v
note_list	haifa-sched.c	/^static rtx note_list;$/;"	v	file:
note_list	sched.c	/^static rtx note_list;$/;"	v	file:
note_mem_written	cse.c	/^note_mem_written (addr)$/;"	f	file:
note_modified_parmregs	integrate.c	/^note_modified_parmregs (reg, x)$/;"	f	file:
note_set_pseudo_multiple_uses	loop.c	/^note_set_pseudo_multiple_uses (x, y)$/;"	f	file:
note_set_pseudo_multiple_uses_retval	loop.c	/^static int note_set_pseudo_multiple_uses_retval;$/;"	v	file:
note_stores	rtlanal.c	/^note_stores (x, fun)$/;"	f
notice	cccp.c	/^notice VPROTO ((const char * msgid, ...))$/;"	f	file:
notice	collect2.c	/^notice VPROTO((char *msgid, ...))$/;"	f
notice	gcc.c	/^notice VPROTO((const char *msgid, ...))$/;"	f	file:
notice	protoize.c	/^notice VPROTO ((const char *msgid, ...))$/;"	f	file:
notice	toplev.c	/^notice VPROTO((const char *msgid, ...))$/;"	f
notice_stack_pointer_modification	flow.c	/^notice_stack_pointer_modification (x, pat)$/;"	f	file:
notreg_cost	cse.c	/^notreg_cost (x)$/;"	f	file:
nr_edges	haifa-sched.c	/^static int nr_edges;$/;"	v	file:
nr_inter	haifa-sched.c	/^static int nr_inter, nr_spec;$/;"	v	file:
nr_members	haifa-sched.c	/^    int nr_members;		\/* the number of members of the bit list.     *\/$/;"	m	struct:
nr_regions	haifa-sched.c	/^static int nr_regions;$/;"	v	file:
nr_spec	haifa-sched.c	/^static int nr_inter, nr_spec;$/;"	v	file:
nreverse	tree.c	/^nreverse (t)$/;"	f
nsets	cse.c	/^  int nsets;$/;"	m	struct:cse_basic_block_data
null_cleanup	cpplib.c	/^null_cleanup (pbuf, pfile)$/;"	f	file:
null_pointer_node	c-decl.c	/^tree null_pointer_node;$/;"	v
null_underflow	cpplib.c	/^null_underflow (pfile)$/;"	f	file:
num	genattrtab.c	/^  int num;			\/* Number of DEFINE_DELAY, starting at 1.  *\/$/;"	m	struct:delay_desc
num	genattrtab.c	/^  int num;			\/* Ordinal for this operation type in unit.  *\/$/;"	m	struct:function_unit_op
num	genattrtab.c	/^  int num;			\/* Ordinal of this unit type.  *\/$/;"	m	struct:function_unit
num_allocated	mips-tfile.c	/^  unsigned long	 num_allocated;		\/* # objects allocated *\/$/;"	m	struct:varray
num_alternatives	genattrtab.c	/^  int num_alternatives;		\/* Number of alternatives.  *\/$/;"	m	struct:insn_def
num_blocks	gcov.c	/^  int num_blocks;$/;"	m	struct:bb_info_list
num_changes	recog.c	/^static int num_changes = 0;$/;"	v	file:
num_clobbers_to_add	genrecog.c	/^  int num_clobbers_to_add;	\/* Number of CLOBBERs to be added to pattern *\/$/;"	m	struct:decision
num_delays	genattrtab.c	/^static int num_delays;$/;"	v	file:
num_digits	libgcc2.c	/^\/* __inline__ *\/ static int num_digits (long value, int base)$/;"	f	file:
num_dims	mips-tfile.c	/^  int	      num_dims;			\/* # dimensions *\/$/;"	m	struct:type_info
num_dups	genoutput.c	/^static int num_dups;$/;"	v	file:
num_eliminable	reload1.c	/^static int num_eliminable;$/;"	v	file:
num_eliminable_invariants	reload1.c	/^static int num_eliminable_invariants;$/;"	v	file:
num_filled_delays	reorg.c	/^static int num_filled_delays[NUM_REORG_FUNCTIONS][MAX_DELAY_HISTOGRAM+1][MAX_REORG_PASSES];$/;"	v	file:
num_func_eh_entries	except.c	/^static int num_func_eh_entries = 0;$/;"	v	file:
num_insn_ents	genattrtab.c	/^static int num_insn_ents;$/;"	v	file:
num_insns	genattrtab.c	/^  int num_insns;		\/* Number of insns with this value.  *\/$/;"	m	struct:attr_value
num_insns_needing_delays	reorg.c	/^static int num_insns_needing_delays[NUM_REORG_FUNCTIONS][MAX_REORG_PASSES];$/;"	v	file:
num_labels	reload1.c	/^static int num_labels;$/;"	v	file:
num_mem_sets	loop.c	/^static int num_mem_sets;$/;"	v	file:
num_movables	loop.c	/^static int num_movables;$/;"	v	file:
num_not_at_initial_offset	reload1.c	/^int num_not_at_initial_offset;$/;"	v
num_opclasses	genattrtab.c	/^  int num_opclasses;		\/* Number of different operation types.  *\/$/;"	m	struct:function_unit
num_operands	genflags.c	/^num_operands (x)$/;"	f	file:
num_preds	gcse.c	/^static int *num_preds;$/;"	v	file:
num_ranges	stmt.c	/^	  int num_ranges;$/;"	m	struct:nesting::<anonymous>::<anonymous>
num_same_regs	jump.c	/^static int num_same_regs;$/;"	v	file:
num_sign_bit_copies	combine.c	/^num_sign_bit_copies (x, mode)$/;"	f	file:
num_sign_bit_copies	combine.c	7419;"	d	file:
num_sign_bit_copies	combine.c	7849;"	d	file:
num_sizes	mips-tfile.c	/^  int	      num_sizes;		\/* # sizes *\/$/;"	m	struct:type_info
num_succs	gcse.c	/^static int *num_succs;$/;"	v	file:
num_tq	mips-tfile.c	/^  int	      num_tq;			\/* # type qualifiers *\/$/;"	m	struct:type_info
num_unit_opclasses	genattrtab.c	/^static int num_units, num_unit_opclasses;$/;"	v	file:
num_units	genattrtab.c	/^static int num_units, num_unit_opclasses;$/;"	v	file:
num_validated_changes	recog.c	/^num_validated_changes ()$/;"	f
num_values	genattrtab.c	/^  int num_values;		\/* Length of the values list.  *\/$/;"	m	struct:dimension
number	collect2.c	/^  int number;$/;"	m	struct:head
number	dwarfout.c	/^  unsigned	number;$/;"	m	struct:filename_entry
number	genrecog.c	/^  int number;			\/* Node number, used for labels *\/$/;"	m	struct:decision
nwords	libgcc2.c	/^  long nwords;$/;"	m	struct:bb
o_file	collect2.c	/^static char *o_file;			\/* <xxx>.o for constructor\/destructor list.  *\/$/;"	v	file:
oballoc	genattrtab.c	459;"	d	file:
oballoc	tree.c	/^oballoc (size)$/;"	f
obey_regdecls	toplev.c	/^int obey_regdecls = 0;$/;"	v
obfree	tree.c	/^obfree (ptr)$/;"	f
obj_in_name	mips-tfile.c	/^static char    *obj_in_name	= (char *) 0;	\/* name of input object file *\/$/;"	v	file:
obj_in_stream	mips-tfile.c	/^static FILE    *obj_in_stream	= (FILE *) 0;	\/* file desc. to input .o *\/$/;"	v	file:
objc	cccp.c	/^static int objc;$/;"	v	file:
object	collect2.c	/^unsigned object;    	\/* address of memory mapped file *\/$/;"	v
object	recog.c	/^  rtx object;$/;"	m	struct:change_t
object_directory	gcov.c	/^static char *object_directory = 0;$/;"	v	file:
object_mutex	frame.c	/^static __gthread_mutex_t object_mutex = __GTHREAD_MUTEX_INIT;$/;"	v	file:
object_mutex	frame.c	/^static __gthread_mutex_t object_mutex;$/;"	v	file:
object_name	mips-tfile.c	/^static char    *object_name	= (char *) 0;	\/* tmp. name of object file *\/$/;"	v	file:
object_permanent_p	tree.c	/^object_permanent_p (obj)$/;"	f
object_size	mips-tfile.c	/^  unsigned short object_size;		\/* size in bytes of each object *\/$/;"	m	struct:varray
object_stream	mips-tfile.c	/^static FILE    *object_stream	= (FILE *) 0;	\/* file desc. to output .o *\/$/;"	v	file:
objects	frame.c	/^static struct object *objects;$/;"	v	file:
objects_last_page	mips-tfile.c	/^  unsigned short objects_last_page;	\/* # objects allocated on last page *\/$/;"	m	struct:varray
objects_per_page	mips-tfile.c	/^  unsigned short objects_per_page;	\/* # objects that can fit on a page *\/$/;"	m	struct:varray
objsize	collect2.c	/^unsigned objsize;    	\/* size of memory mapped to file *\/$/;"	v
obstack	gcc.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genattr.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genattrtab.c	/^static struct obstack obstack, obstack1, obstack2;$/;"	v	file:
obstack	gencodes.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genconfig.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genemit.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genextract.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genflags.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genopinit.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genoutput.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genpeep.c	/^static struct obstack obstack;$/;"	v	file:
obstack	genrecog.c	/^static struct obstack obstack;$/;"	v	file:
obstack	tree.c	/^  struct obstack *obstack;$/;"	m	struct:momentary_level
obstack1	genattrtab.c	/^static struct obstack obstack, obstack1, obstack2;$/;"	v	file:
obstack2	genattrtab.c	/^static struct obstack obstack, obstack1, obstack2;$/;"	v	file:
obstack_chunk_alloc	collect2.c	53;"	d	file:
obstack_chunk_alloc	fix-header.c	370;"	d	file:
obstack_chunk_alloc	flow.c	136;"	d	file:
obstack_chunk_alloc	gcc.c	85;"	d	file:
obstack_chunk_alloc	gcse.c	158;"	d	file:
obstack_chunk_alloc	genattr.c	31;"	d	file:
obstack_chunk_alloc	genattrtab.c	116;"	d	file:
obstack_chunk_alloc	gencodes.c	33;"	d	file:
obstack_chunk_alloc	genconfig.c	31;"	d	file:
obstack_chunk_alloc	genemit.c	30;"	d	file:
obstack_chunk_alloc	genextract.c	31;"	d	file:
obstack_chunk_alloc	genflags.c	33;"	d	file:
obstack_chunk_alloc	genopinit.c	30;"	d	file:
obstack_chunk_alloc	genoutput.c	107;"	d	file:
obstack_chunk_alloc	genpeep.c	30;"	d	file:
obstack_chunk_alloc	genrecog.c	60;"	d	file:
obstack_chunk_alloc	halfpic.c	40;"	d	file:
obstack_chunk_alloc	hash.c	29;"	d	file:
obstack_chunk_alloc	integrate.c	43;"	d	file:
obstack_chunk_alloc	loop.c	235;"	d	file:
obstack_chunk_alloc	reload1.c	279;"	d	file:
obstack_chunk_alloc	reorg.c	143;"	d	file:
obstack_chunk_alloc	rtl.c	29;"	d	file:
obstack_chunk_alloc	stmt.c	56;"	d	file:
obstack_chunk_alloc	tlink.c	34;"	d	file:
obstack_chunk_alloc	tree.c	45;"	d	file:
obstack_chunk_alloc	varasm.c	87;"	d	file:
obstack_chunk_free	collect2.c	54;"	d	file:
obstack_chunk_free	fix-header.c	371;"	d	file:
obstack_chunk_free	flow.c	137;"	d	file:
obstack_chunk_free	gcc.c	86;"	d	file:
obstack_chunk_free	gcse.c	159;"	d	file:
obstack_chunk_free	genattr.c	32;"	d	file:
obstack_chunk_free	genattrtab.c	117;"	d	file:
obstack_chunk_free	gencodes.c	34;"	d	file:
obstack_chunk_free	genconfig.c	32;"	d	file:
obstack_chunk_free	genemit.c	31;"	d	file:
obstack_chunk_free	genextract.c	32;"	d	file:
obstack_chunk_free	genflags.c	34;"	d	file:
obstack_chunk_free	genopinit.c	31;"	d	file:
obstack_chunk_free	genoutput.c	108;"	d	file:
obstack_chunk_free	genpeep.c	31;"	d	file:
obstack_chunk_free	genrecog.c	61;"	d	file:
obstack_chunk_free	halfpic.c	41;"	d	file:
obstack_chunk_free	hash.c	30;"	d	file:
obstack_chunk_free	integrate.c	44;"	d	file:
obstack_chunk_free	loop.c	236;"	d	file:
obstack_chunk_free	reload1.c	280;"	d	file:
obstack_chunk_free	reorg.c	144;"	d	file:
obstack_chunk_free	rtl.c	30;"	d	file:
obstack_chunk_free	stmt.c	57;"	d	file:
obstack_chunk_free	tlink.c	35;"	d	file:
obstack_chunk_free	tree.c	46;"	d	file:
obstack_fgets	tlink.c	/^obstack_fgets (stream, ob)$/;"	f	file:
obstack_stack	tree.c	/^struct obstack_stack *obstack_stack;$/;"	v
obstack_stack	tree.c	/^struct obstack_stack$/;"	s	file:
obstack_stack_obstack	tree.c	/^static struct obstack obstack_stack_obstack;$/;"	v	file:
oc	enquire.c	/^char co[4], oc[4]; \/* Comment starter and ender symbols *\/$/;"	v
occr	gcse.c	/^struct occr$/;"	s	file:
offset	c-typeck.c	/^  int offset;$/;"	m	struct:constructor_stack
offset	calls.c	/^  struct args_size offset;$/;"	m	struct:arg_data
offset	expr.c	/^  int offset;$/;"	m	struct:clear_by_pieces
offset	expr.c	/^  int offset;$/;"	m	struct:move_by_pieces
offset	reload1.c	/^    rtx offset;$/;"	m	struct:
offset	reload1.c	/^  int offset;			\/* Current offset between the two regs.  *\/$/;"	m	struct:elim_table
offset	varasm.c	/^  HOST_WIDE_INT offset;$/;"	m	struct:addr_const
offset	varasm.c	/^  int offset;$/;"	m	struct:pool_constant
offsets_at	reload1.c	/^static int (*offsets_at)[NUM_ELIMINABLE_REGS];$/;"	v	file:
offsets_known_at	reload1.c	/^static char *offsets_known_at;$/;"	v	file:
offsettable_address_p	recog.c	/^offsettable_address_p (strictp, mode, y)$/;"	f
offsettable_memref_p	recog.c	/^offsettable_memref_p (op)$/;"	f
offsettable_nonstrict_memref_p	recog.c	/^offsettable_nonstrict_memref_p (op)$/;"	f
ofile	mips-tfile.c	/^  FDR		ofile	[ PAGE_SIZE \/ sizeof (FDR)	 ];$/;"	m	union:page
old	function.c	/^  rtx old;$/;"	m	struct:fixup_replacement
old	recog.c	/^  rtx old;$/;"	m	struct:change_t
old_args_size	dwarf2out.c	/^static long old_args_size;$/;"	v	file:
old_asm_operands_vec	reload1.c	/^static struct rtvec_def *old_asm_operands_vec, *new_asm_operands_vec;$/;"	v	file:
old_code	recog.c	/^  int old_code;$/;"	m	struct:change_t
old_contents	combine.c	/^  union {rtx r; int i;} old_contents;$/;"	m	struct:undo
old_find_exception_handler	libgcc2.c	/^old_find_exception_handler (void *pc, old_exception_table *table)$/;"	f	file:
old_live_regs	haifa-sched.c	/^static regset old_live_regs;$/;"	v	file:
old_live_regs	sched.c	/^static regset old_live_regs;$/;"	v	file:
omit_one_operand	fold-const.c	/^omit_one_operand (type, result, omitted)$/;"	f	file:
on_tree	gcov.c	/^  unsigned int on_tree : 1;$/;"	m	struct:adj_list
on_tree	gcov.c	/^  unsigned int on_tree : 1;$/;"	m	struct:bb_info
on_tree	profile.c	/^  unsigned int on_tree : 1;$/;"	m	struct:adj_list
on_tree	profile.c	/^  unsigned int on_tree : 1;$/;"	m	struct:bb_info
on_value	toplev.c	/^  int    on_value;$/;"	m	struct:
one_classic_gcse_pass	gcse.c	/^one_classic_gcse_pass (pass)$/;"	f	file:
one_cmpl_optab	optabs.c	/^optab one_cmpl_optab;$/;"	v
one_cprop_pass	gcse.c	/^one_cprop_pass (pass, alter_jumps)$/;"	f	file:
one_fn	genattrtab.c	/^one_fn (exp)$/;"	f	file:
one_pre_gcse_pass	gcse.c	/^one_pre_gcse_pass (pass)$/;"	f	file:
only_leaf_regs_used	final.c	/^only_leaf_regs_used ()$/;"	f
op	cppexp.c	/^    short op;$/;"	m	struct:operation
op	expmed.c	/^  enum alg_code op[MAX_BITS_PER_WORD];$/;"	m	struct:algorithm
op0	cse.c	/^  rtx op0, op1;$/;"	m	struct:cfc_args
op0lt	cse.c	/^  int equal, op0lt, op1lt;$/;"	m	struct:cfc_args
op1	cse.c	/^  rtx op0, op1;$/;"	m	struct:cfc_args
op1lt	cse.c	/^  int equal, op0lt, op1lt;$/;"	m	struct:cfc_args
op_costs	regclass.c	/^static struct costs op_costs[MAX_RECOG_OPERANDS];$/;"	v	file:
op_count	genextract.c	/^  int op_count;$/;"	m	struct:extraction
op_count	genextract.c	/^static int op_count;$/;"	v	file:
op_id_kind	tree.c	/^  op_id_kind,$/;"	e	file:
op_n_alternatives	genoutput.c	/^  int op_n_alternatives[MAX_MAX_OPERANDS];$/;"	m	struct:data
op_n_alternatives	genoutput.c	/^static int op_n_alternatives[MAX_MAX_OPERANDS];$/;"	v	file:
open	cccp.c	11052;"	d	file:
open	cccp.c	71;"	d	file:
open_dump_file	toplev.c	/^open_dump_file (suffix, function_name)$/;"	f	file:
open_files	gcov.c	/^open_files ()$/;"	f	file:
open_include_file	cccp.c	/^open_include_file (filename, searchptr, importing, pinc)$/;"	f	file:
open_sym	mips-tdump.c	/^  ulong open_sym;		\/* symbol opening scope *\/$/;"	m	struct:scope
operand_equal_for_comparison_p	fold-const.c	/^operand_equal_for_comparison_p (arg0, arg1, other)$/;"	f	file:
operand_equal_p	fold-const.c	/^operand_equal_p (arg0, arg1, only_const)$/;"	f
operand_subword	emit-rtl.c	/^operand_subword (op, i, validate_address, mode)$/;"	f
operand_subword_force	emit-rtl.c	/^operand_subword_force (op, i, mode)$/;"	f
operands_match_p	reload.c	/^operands_match_p (x, y)$/;"	f
operate_exp	genattrtab.c	/^operate_exp (op, left, right)$/;"	f	file:
operation	cppexp.c	/^struct operation {$/;"	s	file:
operator	cexp.c	/^  const char *operator;$/;"	m	struct:token
operator	cppexp.c	/^  char *operator;$/;"	m	struct:token
operator	genattrtab.c	/^enum operator {PLUS_OP, MINUS_OP, POS_MINUS_OP, EQ_OP, OR_OP, ORX_OP, MAX_OP, MIN_OP, RANGE_OP};$/;"	g	file:
oplocs	genextract.c	/^  char *oplocs[MAX_RECOG_OPERANDS];$/;"	m	struct:extraction
oplocs	genextract.c	/^static char *oplocs[MAX_RECOG_OPERANDS];$/;"	v	file:
opno	genrecog.c	/^  int opno;			\/* Operand number, if >= 0 *\/$/;"	m	struct:decision
oprs_anticipatable_p	gcse.c	/^oprs_anticipatable_p (x, insn)$/;"	f	file:
oprs_available_p	gcse.c	/^oprs_available_p (x, insn)$/;"	f	file:
oprs_not_set_p	gcse.c	/^oprs_not_set_p (x, insn)$/;"	f	file:
oprs_unchanged_p	gcse.c	/^oprs_unchanged_p (x, insn, avail_p)$/;"	f	file:
ops	expmed.c	/^  short ops;$/;"	m	struct:algorithm
ops	genattrtab.c	/^  struct function_unit_op *ops;	\/* Pointer to first operation type.  *\/$/;"	m	struct:function_unit
opt_symbols	mips-tdump.c	/^OPTR	*opt_symbols;		\/* optimization symbols *\/$/;"	v
optabs	genopinit.c	/^const char *optabs[] =$/;"	v
optimize	genattrtab.c	/^int optimize = 0;$/;"	v
optimize	loop.c	/^  int optimize; \/* Nonzero if we can optimize access to this MEM.  *\/$/;"	m	struct:loop_mem_info
optimize	toplev.c	/^int optimize = 0;$/;"	v
optimize_attrs	genattrtab.c	/^optimize_attrs ()$/;"	f	file:
optimize_bit_field	function.c	/^optimize_bit_field (body, insn, equiv_mem)$/;"	f	file:
optimize_bit_field_compare	fold-const.c	/^optimize_bit_field_compare (code, compare_type, lhs, rhs)$/;"	f	file:
optimize_reg_copy_1	regmove.c	/^optimize_reg_copy_1 (insn, dest, src)$/;"	f	file:
optimize_reg_copy_2	regmove.c	/^optimize_reg_copy_2 (insn, dest, src)$/;"	f	file:
optimize_reg_copy_3	regmove.c	/^optimize_reg_copy_3 (insn, dest, src)$/;"	f	file:
optimize_save_area_alloca	explow.c	/^optimize_save_area_alloca (insns)$/;"	f
optimize_size	toplev.c	/^int optimize_size = 0;$/;"	v
optimize_skip	reorg.c	/^optimize_skip (insn)$/;"	f	file:
optimize_tail_recursion	stmt.c	/^optimize_tail_recursion (call_expr, last_insn)$/;"	f
option	toplev.c	/^  const char * option;$/;"	m	struct:lang_opt
option_map	gcc.c	/^struct option_map option_map[] =$/;"	v
option_map	gcc.c	/^struct option_map$/;"	s	file:
options	cppmain.c	/^cpp_options options;$/;"	v
or_attr_value	genattrtab.c	/^or_attr_value (exp, unknownp)$/;"	f	file:
order_regs_for_reload	reload1.c	/^order_regs_for_reload (chain)$/;"	f	file:
ordering_attribute	dwarfout.c	/^ordering_attribute (ordering)$/;"	f	file:
orig_asm_operands_vector	integrate.c	/^static rtvec orig_asm_operands_vector;$/;"	v	file:
orig_aux_syms	mips-tfile.c	/^static AUXU	*orig_aux_syms;			\/* auxiliary symbols *\/$/;"	v	file:
orig_dense	mips-tfile.c	/^static DNR	*orig_dense;			\/* dense numbers *\/$/;"	v	file:
orig_ext_strs	mips-tfile.c	/^static char	*orig_ext_strs;			\/* external strings *\/$/;"	v	file:
orig_ext_syms	mips-tfile.c	/^static EXTR	*orig_ext_syms;			\/* external symbols *\/$/;"	v	file:
orig_fdr	mips-tfile.c	/^  FDR		*orig_fdr;	\/* original file header *\/$/;"	m	struct:efdr
orig_file_header	mips-tfile.c	/^static struct filehdr orig_file_header;		\/* global object file header *\/$/;"	v	file:
orig_files	mips-tfile.c	/^static FDR	*orig_files;			\/* file descriptors *\/$/;"	v	file:
orig_linenum	mips-tfile.c	/^static char	*orig_linenum;			\/* line numbers *\/$/;"	v	file:
orig_local_strs	mips-tfile.c	/^static char	*orig_local_strs;		\/* local strings *\/$/;"	v	file:
orig_local_syms	mips-tfile.c	/^static SYMR	*orig_local_syms;		\/* local symbols *\/$/;"	v	file:
orig_opt_syms	mips-tfile.c	/^static OPTR	*orig_opt_syms;			\/* optimization symbols *\/$/;"	v	file:
orig_procs	mips-tfile.c	/^static PDR	*orig_procs;			\/* procedures *\/$/;"	v	file:
orig_rfds	mips-tfile.c	/^static symint_t	*orig_rfds;			\/* relative file desc's *\/$/;"	v	file:
orig_str_hash	mips-tfile.c	/^static shash_t	*orig_str_hash[SHASH_SIZE];$/;"	v	file:
orig_sym_hdr	mips-tfile.c	/^static HDRR	 orig_sym_hdr;			\/* symbolic header on input *\/$/;"	v	file:
orig_text_base	protoize.c	/^static const char *orig_text_base;$/;"	v	file:
orig_text_limit	protoize.c	/^static const char *orig_text_limit;$/;"	v	file:
orig_type	mips-tfile.c	/^  coff_type_t orig_type;		\/* original COFF-based type *\/$/;"	m	struct:type_info
other	recog.c	/^  int this, other;$/;"	m	struct:funny_match
other_insn	combine.c	/^  rtx other_insn;$/;"	m	struct:undobuf
other_var_style	protoize.c	/^static const char * const other_var_style = "stdarg";$/;"	v	file:
other_var_style	protoize.c	/^static const char * const other_var_style = "varargs";$/;"	v	file:
other_variable_style_function	protoize.c	/^other_variable_style_function (ansi_header)$/;"	f	file:
out_arg_offset	function.c	/^static int out_arg_offset;$/;"	v	file:
out_edges	haifa-sched.c	/^static int *out_edges;$/;"	v	file:
out_fname	cccp.c	/^static char *out_fname;$/;"	v	file:
out_of_bounds	mips-tfile.c	/^out_of_bounds (indx, max, str, prog_line)$/;"	f	file:
outbuf	cccp.c	/^static FILE_BUF outbuf;$/;"	v	file:
outer	c-typeck.c	/^  char outer;$/;"	m	struct:constructor_stack
outer_cleanups	stmt.c	/^	  tree outer_cleanups;$/;"	m	struct:nesting::<anonymous>::<anonymous>
outer_context_label_stack	except.c	/^struct label_node *outer_context_label_stack = NULL;$/;"	v
outer_function_chain	function.c	/^struct function *outer_function_chain;$/;"	v
outf	fix-header.c	/^FILE *outf;$/;"	v
outfile	print-rtl.c	/^static FILE *outfile;$/;"	v	file:
outfiles	gcc.c	/^static const char **outfiles;$/;"	v	file:
outfun	genoutput.c	/^  char outfun;			\/* Nonzero means this has an output function *\/$/;"	m	struct:data
output_abbrev_section	dwarf2out.c	/^output_abbrev_section ()$/;"	f	file:
output_add_clobbers	genemit.c	/^output_add_clobbers ()$/;"	f	file:
output_addr_const	final.c	/^output_addr_const (file, x)$/;"	f
output_address	final.c	/^output_address (x)$/;"	f
output_addressed_constants	varasm.c	/^output_addressed_constants (exp)$/;"	f	file:
output_after_function_constants	varasm.c	/^output_after_function_constants ()$/;"	f	file:
output_aranges	dwarf2out.c	/^output_aranges ()$/;"	f	file:
output_arc_profiler	profile.c	/^output_arc_profiler (arcno, insert_after)$/;"	f	file:
output_array_type_die	dwarfout.c	/^output_array_type_die (arg)$/;"	f	file:
output_asm_insn	final.c	/^output_asm_insn (template, operands)$/;"	f
output_asm_label	final.c	/^output_asm_label (x)$/;"	f
output_asm_name	final.c	/^output_asm_name ()$/;"	f	file:
output_block	dwarfout.c	/^output_block (stmt, depth)$/;"	f	file:
output_bound_representation	dwarfout.c	/^output_bound_representation (bound, dim_num, u_or_l)$/;"	f	file:
output_branch_probs	gcov.c	/^static int output_branch_probs = 0;$/;"	v	file:
output_bytes	protoize.c	/^output_bytes (str, len)$/;"	f	file:
output_call_frame_info	dwarf2out.c	/^output_call_frame_info (for_eh)$/;"	f	file:
output_cfi	dwarf2out.c	/^output_cfi (cfi, fde)$/;"	f	file:
output_compilation_unit_header	dwarf2out.c	/^output_compilation_unit_header ()$/;"	f	file:
output_compile_unit_die	dwarfout.c	/^output_compile_unit_die (arg)$/;"	f	file:
output_conditionals	cccp.c	/^static int output_conditionals;$/;"	v	file:
output_constant	varasm.c	/^output_constant (exp, size)$/;"	f
output_constant_def	varasm.c	/^output_constant_def (exp)$/;"	f
output_constant_def_contents	varasm.c	/^output_constant_def_contents (exp, reloc, labelno)$/;"	f	file:
output_constant_pool	varasm.c	/^output_constant_pool (fnname, fndecl)$/;"	f
output_constructor	varasm.c	/^output_constructor (exp, size)$/;"	f	file:
output_data	gcov.c	/^output_data ()$/;"	f	file:
output_decl	dwarfout.c	/^output_decl (decl, containing_scope)$/;"	f	file:
output_decls_for_scope	dwarfout.c	/^output_decls_for_scope (stmt, depth)$/;"	f	file:
output_deferred_addressed_constants	varasm.c	/^output_deferred_addressed_constants ()$/;"	f
output_dependence	alias.c	/^output_dependence (mem, x)$/;"	f
output_die	dwarf2out.c	/^output_die (die)$/;"	f	file:
output_die	dwarfout.c	/^output_die (die_specific_output_function, param)$/;"	f	file:
output_enumeral_list	dwarfout.c	/^output_enumeral_list (link)$/;"	f	file:
output_enumeration_type_die	dwarfout.c	/^output_enumeration_type_die (arg)$/;"	f	file:
output_epilogue	genoutput.c	/^output_epilogue ()$/;"	f	file:
output_exception_table	except.c	/^output_exception_table ()$/;"	f
output_exception_table_entry	except.c	/^output_exception_table_entry (file, n)$/;"	f	file:
output_file	collect2.c	/^static char *output_file;		\/* Output file for ld.  *\/$/;"	v	file:
output_file_directive	toplev.c	/^output_file_directive (asm_file, input_name)$/;"	f
output_formal_parameter_die	dwarfout.c	/^output_formal_parameter_die (arg)$/;"	f	file:
output_formal_types	dwarfout.c	/^output_formal_types (function_or_method_type)$/;"	f	file:
output_func_start_profiler	profile.c	/^output_func_start_profiler ()$/;"	f
output_function_summary	gcov.c	/^static int output_function_summary = 0;$/;"	v	file:
output_gcov_file	gcov.c	/^static int output_gcov_file = 1;$/;"	v	file:
output_gcov_string	profile.c	/^output_gcov_string (string, delimiter)$/;"	f	file:
output_global_subroutine_die	dwarfout.c	/^output_global_subroutine_die (arg)$/;"	f	file:
output_global_variable_die	dwarfout.c	/^output_global_variable_die (arg)$/;"	f	file:
output_inheritance_die	dwarfout.c	/^output_inheritance_die (arg)$/;"	f	file:
output_init_element	c-typeck.c	/^output_init_element (value, type, field, pending)$/;"	f	file:
output_init_mov_optab	genemit.c	/^output_init_mov_optab ()$/;"	f	file:
output_inline_function	integrate.c	/^output_inline_function (fndecl)$/;"	f
output_inlined_enumeration_type_die	dwarfout.c	/^output_inlined_enumeration_type_die (arg)$/;"	f	file:
output_inlined_structure_type_die	dwarfout.c	/^output_inlined_structure_type_die (arg)$/;"	f	file:
output_inlined_subroutine_die	dwarfout.c	/^output_inlined_subroutine_die (arg)$/;"	f	file:
output_inlined_union_type_die	dwarfout.c	/^output_inlined_union_type_die (arg)$/;"	f	file:
output_label_die	dwarfout.c	/^output_label_die (arg)$/;"	f	file:
output_lang_identify	toplev.c	/^output_lang_identify (asm_out_file)$/;"	f	file:
output_lexical_block_die	dwarfout.c	/^output_lexical_block_die (arg)$/;"	f	file:
output_line_command	cpplib.c	/^output_line_command (pfile, file_change)$/;"	f
output_line_directive	cccp.c	/^output_line_directive (ip, op, conditional, file_change)$/;"	f	file:
output_line_info	dwarf2out.c	/^output_line_info ()$/;"	f	file:
output_loc_descriptor	dwarfout.c	/^output_loc_descriptor (rtl)$/;"	f	file:
output_loc_operands	dwarf2out.c	/^output_loc_operands (loc)$/;"	f	file:
output_local_subroutine_die	dwarfout.c	/^output_local_subroutine_die (arg)$/;"	f	file:
output_local_variable_die	dwarfout.c	/^output_local_variable_die (arg)$/;"	f	file:
output_long_names	gcov.c	/^static int output_long_names = 0;$/;"	v	file:
output_mem_loc_descriptor	dwarfout.c	/^output_mem_loc_descriptor (rtl)$/;"	f	file:
output_member_die	dwarfout.c	/^output_member_die (arg)$/;"	f	file:
output_operand	final.c	/^output_operand (x, code)$/;"	f	file:
output_operand_lossage	final.c	/^output_operand_lossage (msgid)$/;"	f
output_padded_null_die	dwarfout.c	/^output_padded_null_die (arg)$/;"	f	file:
output_pending_init_elements	c-typeck.c	/^output_pending_init_elements (all)$/;"	f	file:
output_pending_types_for_scope	dwarf2out.c	/^output_pending_types_for_scope (context_die)$/;"	f	file:
output_pending_types_for_scope	dwarfout.c	/^output_pending_types_for_scope (containing_scope)$/;"	f	file:
output_prologue	genoutput.c	/^output_prologue ()$/;"	f	file:
output_ptr_to_mbr_type_die	dwarfout.c	/^output_ptr_to_mbr_type_die (arg)$/;"	f	file:
output_pubnames	dwarf2out.c	/^output_pubnames ()$/;"	f	file:
output_quoted_string	toplev.c	/^output_quoted_string (asm_file, string)$/;"	f
output_reg_number	dwarfout.c	/^output_reg_number (rtl)$/;"	f	file:
output_reloadnum	reload.c	/^static int output_reloadnum;$/;"	v	file:
output_set_type_die	dwarfout.c	/^output_set_type_die (arg)$/;"	f	file:
output_sleb128	dwarf2out.c	/^output_sleb128 (value)$/;"	f	file:
output_source_line	final.c	/^output_source_line (file, insn)$/;"	f	file:
output_string	protoize.c	/^output_string (str)$/;"	f	file:
output_string_type_die	dwarfout.c	/^output_string_type_die (arg)$/;"	f	file:
output_structure_type_die	dwarfout.c	/^output_structure_type_die (arg)$/;"	f	file:
output_subroutine_type_die	dwarfout.c	/^output_subroutine_type_die (arg)$/;"	f	file:
output_tagged_type_instantiation	dwarfout.c	/^output_tagged_type_instantiation (type)$/;"	f	file:
output_type	dwarfout.c	/^output_type (type, containing_scope)$/;"	f	file:
output_typedef_die	dwarfout.c	/^output_typedef_die (arg)$/;"	f	file:
output_uleb128	dwarf2out.c	/^output_uleb128 (value)$/;"	f	file:
output_union_type_die	dwarfout.c	/^output_union_type_die (arg)$/;"	f	file:
output_unspecified_parameters_die	dwarfout.c	/^output_unspecified_parameters_die (arg)$/;"	f	file:
output_up_to	protoize.c	/^output_up_to (p)$/;"	f	file:
output_value_format	dwarf2out.c	/^output_value_format (v)$/;"	f	file:
overflow	enquire.c	/^	Procedure overflow(sig) int sig; { \/* what to do on over\/underflow *\/$/;"	f
overflow_sum_sign	cexp.c	127;"	d	file:
overflow_sum_sign	fold-const.c	109;"	d	file:
overflow_warning	c-common.c	/^overflow_warning (value)$/;"	f
own_thread_p	reorg.c	/^own_thread_p (thread, label, allow_fallthrough)$/;"	f	file:
p	c-lex.c	/^  char * p;$/;"	m	struct:pf_args
p	frame.c	/^  void *p;$/;"	m	union:unaligned
pad_below	function.c	/^pad_below (offset_ptr, passed_mode, sizetree)$/;"	f	file:
pad_to_arg_alignment	function.c	/^pad_to_arg_alignment (offset_ptr, boundary)$/;"	f	file:
page	mips-tfile.c	/^typedef union page {$/;"	u	file:
page_t	mips-tfile.c	/^} page_t;$/;"	t	file:
pages_left	mips-tfile.c	/^static unsigned	 pages_left	= 0;$/;"	v	file:
parent	c-typeck.c	/^  struct init_node *parent;$/;"	m	struct:init_node
parent	stmt.c	/^  struct case_node	*parent; \/* Parent of node in binary tree *\/$/;"	m	struct:case_node
parm_birth_insn	function.c	/^static rtx parm_birth_insn;$/;"	v	file:
parm_flag	c-decl.c	/^    char parm_flag;$/;"	m	struct:binding_level
parm_order	c-decl.c	/^    tree parm_order;$/;"	m	struct:binding_level
parm_reg_stack_loc	function.c	/^rtx *parm_reg_stack_loc;$/;"	v
parmdecl_map	integrate.c	/^static tree *parmdecl_map;$/;"	v	file:
parmlist_tags_warning	c-decl.c	/^parmlist_tags_warning ()$/;"	f
parse_assertion	cpplib.c	/^parse_assertion (pfile)$/;"	f	file:
parse_begin	mips-tfile.c	/^parse_begin (start)$/;"	f
parse_bend	mips-tfile.c	/^parse_bend (start)$/;"	f
parse_c_expression	cexp.c	/^parse_c_expression (string, warn_undefined)$/;"	f
parse_charconst	cppexp.c	/^parse_charconst (pfile, start, end)$/;"	f	file:
parse_clear_mark	cpplib.c	/^parse_clear_mark (pfile)$/;"	f
parse_def	mips-tfile.c	/^parse_def (name_start)$/;"	f
parse_end	mips-tfile.c	/^parse_end (start)$/;"	f
parse_ent	mips-tfile.c	/^parse_ent (start)$/;"	f
parse_escape	cexp.c	/^parse_escape (string_ptr, result_mask)$/;"	f
parse_file	mips-tfile.c	/^parse_file (start)$/;"	f
parse_float	c-lex.c	/^parse_float (data)$/;"	f	file:
parse_fn_proto	gen-protos.c	/^parse_fn_proto (start, end, fn)$/;"	f	file:
parse_goto_mark	cpplib.c	/^parse_goto_mark (pfile)$/;"	f
parse_in	c-common.c	/^cpp_reader  parse_in;$/;"	v
parse_in	cppmain.c	/^cpp_reader parse_in;$/;"	v
parse_input	mips-tfile.c	/^parse_input __proto((void))$/;"	f
parse_name	cpplib.c	/^parse_name (pfile, c)$/;"	f	file:
parse_number	cexp.c	/^parse_number (olen)$/;"	f	file:
parse_number	cppexp.c	/^parse_number (pfile, start, end)$/;"	f	file:
parse_options	c-common.c	/^cpp_options parse_options;$/;"	v
parse_return_error	cexp.c	/^static jmp_buf parse_return_error;$/;"	v	file:
parse_set_mark	cpplib.c	/^parse_set_mark (pfile)$/;"	f
parse_stabn	mips-tfile.c	/^parse_stabn (start)$/;"	f
parse_stabs	mips-tfile.c	/^parse_stabs (start)$/;"	f
parse_stabs_common	mips-tfile.c	/^parse_stabs_common (string_start, string_end, rest)$/;"	f
parse_string	cpplib.c	/^parse_string (pfile, c)$/;"	f	file:
parse_time	toplev.c	/^int parse_time;$/;"	v
parser_build_binary_op	c-typeck.c	/^parser_build_binary_op (code, arg1, arg2)$/;"	f
part1	gcc.c	/^  const char *part1;$/;"	m	struct:switchstr
partial	calls.c	/^  int partial;$/;"	m	struct:arg_data
partial	loop.c	/^  unsigned int partial : 1;	\/* 1 means this reg is used for zero-extending.$/;"	m	struct:movable
partial_count	fix-header.c	/^int partial_count = 0;$/;"	v
partial_proto	fix-header.c	/^struct partial_proto$/;"	s	file:
partial_proto_list	fix-header.c	/^struct partial_proto *partial_proto_list = NULL;$/;"	v
pass	collect2.c	/^enum pass {$/;"	g	file:
pass	function.c	/^  int pass;$/;"	m	struct:insns_for_mem_walk_info
pass_on_stack	calls.c	/^  int pass_on_stack;$/;"	m	struct:arg_data
pass_thru_directive	cccp.c	/^pass_thru_directive (buf, limit, op, keyword)$/;"	f	file:
pass_thru_directive	cpplib.c	/^pass_thru_directive (buf, len, pfile, keyword)$/;"	f	file:
path	collect2.c	/^static struct path_prefix cpath, path;$/;"	v	file:
path	cse.c	/^  } path[PATHLENGTH];$/;"	m	struct:cse_basic_block_data
path	doschk.c	/^  char *path;$/;"	m	struct:ENT
path_include	cccp.c	/^path_include (path)$/;"	f	file:
path_include	cppinit.c	/^path_include (pfile, pend, list, path)$/;"	f	file:
path_prefix	collect2.c	/^struct path_prefix$/;"	s	file:
path_prefix	gcc.c	/^struct path_prefix$/;"	s	file:
path_size	cse.c	/^  int path_size;$/;"	m	struct:cse_basic_block_data
pattern	cccp.c	/^  } *pattern;$/;"	m	struct:definition
pattern	genemit.c	/^  rtx pattern;$/;"	m	struct:clobber_pat
pc_begin	frame.c	/^  void* pc_begin;$/;"	m	struct:dwarf_fde
pc_range	frame.c	/^  uaddr pc_range;$/;"	m	struct:dwarf_fde
pcfinclude	cccp.c	/^pcfinclude (buf, name, op)$/;"	f	file:
pcp_inside_if	cccp.c	/^static int pcp_inside_if;$/;"	v	file:
pcp_outfile	cccp.c	/^static FILE *pcp_outfile;$/;"	v	file:
pcstring_used	cccp.c	/^pcstring_used (hp)$/;"	f	file:
pedantic	cccp.c	/^int pedantic;$/;"	v
pedantic	cexp.c	/^int pedantic;$/;"	v
pedantic	toplev.c	/^int pedantic = 0;$/;"	v
pedantic_errors	cccp.c	/^static int pedantic_errors;$/;"	v	file:
pedantic_lvalue_warning	c-typeck.c	/^pedantic_lvalue_warning (code)$/;"	f	file:
pedantic_lvalues	fold-const.c	/^int pedantic_lvalues;$/;"	v
pedantic_non_lvalue	fold-const.c	/^pedantic_non_lvalue (x)$/;"	f
pedantic_omit_one_operand	fold-const.c	/^pedantic_omit_one_operand (type, result, omitted)$/;"	f	file:
pedwarn	cccp.c	/^pedwarn VPROTO ((const char * msgid, ...))$/;"	f
pedwarn	cexp.c	/^pedwarn VPROTO ((char * msgid, ...))$/;"	f
pedwarn	toplev.c	/^pedwarn VPROTO((const char *msgid, ...))$/;"	f
pedwarn_init	c-typeck.c	/^pedwarn_init (msgid)$/;"	f
pedwarn_strange_white_space	cccp.c	/^pedwarn_strange_white_space (ch)$/;"	f	file:
pedwarn_with_decl	toplev.c	/^pedwarn_with_decl VPROTO((tree decl, const char *msgid, ...))$/;"	f
pedwarn_with_file_and_line	cccp.c	/^pedwarn_with_file_and_line VPROTO ((const char *file, size_t file_len, int line,$/;"	f	file:
pedwarn_with_file_and_line	toplev.c	/^pedwarn_with_file_and_line VPROTO((const char *file, int line,$/;"	f
pedwarn_with_line	cccp.c	/^pedwarn_with_line VPROTO ((int line, const char * msgid, ...))$/;"	f
peepholes	genextract.c	/^static struct code_ptr *peepholes;$/;"	v	file:
pend_type	dwarf2out.c	/^pend_type (type)$/;"	f	file:
pend_type	dwarfout.c	/^pend_type (type)$/;"	f	file:
pending_blocks	final.c	/^static int *pending_blocks;$/;"	v	file:
pending_chain	expr.c	/^static rtx pending_chain;$/;"	v	file:
pending_dead_regs	resource.c	/^static HARD_REG_SET pending_dead_regs;$/;"	v	file:
pending_elts	c-typeck.c	/^  struct init_node *pending_elts;$/;"	m	struct:constructor_stack
pending_init_member	c-typeck.c	/^pending_init_member (field)$/;"	f	file:
pending_invalid_xref	c-decl.c	/^tree pending_invalid_xref;$/;"	v
pending_invalid_xref_file	c-decl.c	/^char *pending_invalid_xref_file;$/;"	v
pending_invalid_xref_line	c-decl.c	/^int pending_invalid_xref_line;$/;"	v
pending_lists_length	haifa-sched.c	/^static int pending_lists_length;$/;"	v	file:
pending_lists_length	sched.c	/^static int pending_lists_length;$/;"	v	file:
pending_option	cppinit.c	/^struct pending_option$/;"	s	file:
pending_read_insns	haifa-sched.c	/^static rtx pending_read_insns;$/;"	v	file:
pending_read_insns	sched.c	/^static rtx pending_read_insns;$/;"	v	file:
pending_read_mems	haifa-sched.c	/^static rtx pending_read_mems;$/;"	v	file:
pending_read_mems	sched.c	/^static rtx pending_read_mems;$/;"	v	file:
pending_sibling_stack	dwarfout.c	/^static unsigned *pending_sibling_stack;$/;"	v	file:
pending_siblings	dwarfout.c	/^static unsigned pending_siblings;$/;"	v	file:
pending_siblings_allocated	dwarfout.c	/^static unsigned pending_siblings_allocated;$/;"	v	file:
pending_sizes	stor-layout.c	/^static tree pending_sizes;$/;"	v	file:
pending_stack_adjust	expr.c	/^int pending_stack_adjust;$/;"	v
pending_types	dwarf2out.c	/^static unsigned pending_types;$/;"	v	file:
pending_types	dwarfout.c	/^static unsigned pending_types;$/;"	v	file:
pending_types_allocated	dwarf2out.c	/^static unsigned pending_types_allocated;$/;"	v	file:
pending_types_allocated	dwarfout.c	/^static unsigned pending_types_allocated;$/;"	v	file:
pending_types_list	dwarf2out.c	/^static tree *pending_types_list;$/;"	v	file:
pending_types_list	dwarfout.c	/^static tree *pending_types_list;$/;"	v	file:
pending_write_insns	haifa-sched.c	/^static rtx pending_write_insns;$/;"	v	file:
pending_write_insns	sched.c	/^static rtx pending_write_insns;$/;"	v	file:
pending_write_mems	haifa-sched.c	/^static rtx pending_write_mems;$/;"	v	file:
pending_write_mems	sched.c	/^static rtx pending_write_mems;$/;"	v	file:
pending_xref_error	c-decl.c	/^pending_xref_error ()$/;"	f
perform_adddf3	libgcc1.c	89;"	d	file:
perform_addsf3	libgcc1.c	105;"	d	file:
perform_ashlsi3	libgcc1.c	85;"	d	file:
perform_ashrsi3	libgcc1.c	81;"	d	file:
perform_divdf3	libgcc1.c	101;"	d	file:
perform_divsf3	libgcc1.c	117;"	d	file:
perform_divsi3	libgcc1.c	61;"	d	file:
perform_eqdf2	libgcc1.c	158;"	d	file:
perform_eqsf2	libgcc1.c	182;"	d	file:
perform_extendsfdf2	libgcc1.c	145;"	d	file:
perform_fixdfsi	libgcc1.c	129;"	d	file:
perform_fixsfsi	libgcc1.c	133;"	d	file:
perform_floatsidf	libgcc1.c	137;"	d	file:
perform_floatsisf	libgcc1.c	141;"	d	file:
perform_gedf2	libgcc1.c	170;"	d	file:
perform_gesf2	libgcc1.c	194;"	d	file:
perform_gtdf2	libgcc1.c	166;"	d	file:
perform_gtsf2	libgcc1.c	190;"	d	file:
perform_ledf2	libgcc1.c	178;"	d	file:
perform_lesf2	libgcc1.c	202;"	d	file:
perform_lshrsi3	libgcc1.c	77;"	d	file:
perform_ltdf2	libgcc1.c	174;"	d	file:
perform_ltsf2	libgcc1.c	198;"	d	file:
perform_modsi3	libgcc1.c	69;"	d	file:
perform_muldf3	libgcc1.c	97;"	d	file:
perform_mulsf3	libgcc1.c	113;"	d	file:
perform_mulsi3	libgcc1.c	57;"	d	file:
perform_nedf2	libgcc1.c	162;"	d	file:
perform_negdf2	libgcc1.c	121;"	d	file:
perform_negsf2	libgcc1.c	125;"	d	file:
perform_nesf2	libgcc1.c	186;"	d	file:
perform_subdf3	libgcc1.c	93;"	d	file:
perform_subsf3	libgcc1.c	109;"	d	file:
perform_truncdfsf2	libgcc1.c	149;"	d	file:
perform_udivsi3	libgcc1.c	65;"	d	file:
perform_umodsi3	libgcc1.c	73;"	d	file:
perm_calloc	tree.c	/^perm_calloc (nelem, size)$/;"	f
perm_list_kind	tree.c	/^  perm_list_kind,$/;"	e	file:
perm_tree_cons	tree.c	/^perm_tree_cons (purpose, value, chain)$/;"	f
permalloc	tree.c	/^permalloc (size)$/;"	f
permanent_allocation	tree.c	/^permanent_allocation (function_end)$/;"	f
permanent_obstack	collect2.c	/^struct obstack permanent_obstack;$/;"	v
permanent_obstack	tree.c	/^struct obstack permanent_obstack;$/;"	v
permitted_reg_in_leaf_functions	final.c	/^static char permitted_reg_in_leaf_functions[] = LEAF_REGISTERS;$/;"	v	file:
perror_with_name	cccp.c	/^perror_with_name (name)$/;"	f	file:
perror_with_name	gcc.c	/^perror_with_name (name)$/;"	f	file:
pexecute_pid	collect2.c	/^int pexecute_pid;$/;"	v
pf_args	c-lex.c	/^struct pf_args$/;"	s	file:
pfatal_pexecute	gcc.c	/^pfatal_pexecute (errmsg_fmt, errmsg_arg)$/;"	f	file:
pfatal_with_name	cccp.c	/^pfatal_with_name (name)$/;"	f	file:
pfatal_with_name	gcc.c	/^pfatal_with_name (name)$/;"	f	file:
pfatal_with_name	mips-tfile.c	/^pfatal_with_name (msg)$/;"	f
pfatal_with_name	toplev.c	/^pfatal_with_name (name)$/;"	f
pfgets	tlink.c	/^pfgets (stream)$/;"	f	file:
pic_offset_table_rtx	emit-rtl.c	/^rtx pic_offset_table_rtx;	\/* (REG:Pmode PIC_OFFSET_TABLE_REGNUM) *\/$/;"	v
pic_offset_table_rtx	genattrtab.c	/^rtx pic_offset_table_rtx;$/;"	v
pil	c-iterate.c	/^pil (head)$/;"	f
pipe_closed	cccp.c	/^pipe_closed (signo)$/;"	f	file:
pipe_closed	toplev.c	/^pipe_closed (signo)$/;"	f	file:
pis	c-iterate.c	/^pis ()$/;"	f
pixl	c-iterate.c	/^pixl (head)$/;"	f
pkg	collect2.c	/^  package_command_t		pkg;	\/* package load command *\/$/;"	m	union:load_union
plain_type	sdbout.c	/^plain_type (type)$/;"	f	file:
plain_type_1	sdbout.c	/^plain_type_1 (type, level)$/;"	f	file:
plist	collect2.c	/^  struct prefix_list *plist;  \/* List of prefixes to try *\/$/;"	m	struct:path_prefix
plist	gcc.c	/^  struct prefix_list *plist;  \/* List of prefixes to try *\/$/;"	m	struct:path_prefix
plus_constant_for_output_wide	explow.c	/^plus_constant_for_output_wide (x, c)$/;"	f
plus_constant_wide	explow.c	/^plus_constant_wide (x, c)$/;"	f
pname	protoize.c	/^static const char *pname;$/;"	v	file:
pointer_count	c-common.c	/^  int pointer_count;$/;"	m	struct:
pointer_diff	c-typeck.c	/^pointer_diff (op0, op1)$/;"	f	file:
pointer_int_sum	c-typeck.c	/^pointer_int_sum (resultcode, ptrop, intop)$/;"	f	file:
pointer_p	halfpic.c	/^  int		   pointer_p;	\/* pointer created.  *\/$/;"	m	struct:all_refs
pointer_type	protoize.c	/^typedef PTR pointer_type;$/;"	t	file:
pool	varasm.c	/^  struct pool_constant *pool;$/;"	m	struct:pool_sym
pool_constant	varasm.c	/^struct pool_constant$/;"	s	file:
pool_offset	varasm.c	/^static int pool_offset;$/;"	v	file:
pool_sym	varasm.c	/^struct pool_sym$/;"	s	file:
pop_alignment	c-pragma.c	/^pop_alignment (alignment, id)$/;"	f	file:
pop_c_function_context	c-decl.c	/^pop_c_function_context ()$/;"	f
pop_decl_scope	dwarf2out.c	/^pop_decl_scope ()$/;"	f	file:
pop_eh_entry	except.c	/^pop_eh_entry (stack)$/;"	f	file:
pop_float_handler	toplev.c	/^pop_float_handler (handled, handler)$/;"	f
pop_function_context	function.c	/^void pop_function_context ()$/;"	f
pop_function_context_from	function.c	/^pop_function_context_from (context)$/;"	f
pop_init_level	c-typeck.c	/^pop_init_level (implicit)$/;"	f
pop_iterator_stack	c-iterate.c	/^pop_iterator_stack ()$/;"	f
pop_label_entry	except.c	/^pop_label_entry (stack)$/;"	f
pop_label_level	c-decl.c	/^pop_label_level ()$/;"	f
pop_momentary	tree.c	/^pop_momentary ()$/;"	f
pop_momentary_nofree	tree.c	/^pop_momentary_nofree ()$/;"	f
pop_obstacks	tree.c	/^pop_obstacks ()$/;"	f
pop_operand	recog.c	/^pop_operand (op, mode)$/;"	f
pop_stack	reg-stack.c	/^pop_stack (regstack, regno)$/;"	f	file:
pop_temp_slots	function.c	/^pop_temp_slots ()$/;"	f
pop_topmost_sequence	emit-rtl.c	/^pop_topmost_sequence ()$/;"	f
poplevel	c-decl.c	/^poplevel (keep, reverse, functionbody)$/;"	f
pos	genpeep.c	/^  int pos;$/;"	m	struct:link
position	genrecog.c	/^  char *position;		\/* String denoting position in pattern *\/$/;"	m	struct:decision
position_after_white_space	c-lex.c	/^position_after_white_space ()$/;"	f
position_merit	genrecog.c	/^position_merit (p, mode, code)$/;"	f	file:
possible_group_p	reload1.c	/^possible_group_p (chain, regno)$/;"	f	file:
possible_sum_sign	cppexp.c	77;"	d	file:
post_mark_life	local-alloc.c	/^post_mark_life (regno, mode, life, birth, death)$/;"	f	file:
pot_split	haifa-sched.c	/^static edgeset *pot_split;$/;"	v	file:
potential_hazard	haifa-sched.c	/^potential_hazard (unit, insn, cost)$/;"	f	file:
potential_hazard	sched.c	/^potential_hazard (unit, insn, cost)$/;"	f	file:
potential_reload_regs	reload1.c	/^static short potential_reload_regs[FIRST_PSEUDO_REGISTER];$/;"	v	file:
pragma_getc	c-lex.c	/^pragma_getc ()$/;"	f	file:
pragma_ungetc	c-lex.c	/^pragma_ungetc (arg)$/;"	f	file:
prdecl	c-iterate.c	/^prdecl (d)$/;"	f
pre_delete	gcse.c	/^pre_delete ()$/;"	f	file:
pre_expr_reaches_here_p	gcse.c	/^pre_expr_reaches_here_p (occr_bb, expr, bb, check_pre_comp, visited)$/;"	f	file:
pre_gcse	gcse.c	/^pre_gcse ()$/;"	f	file:
pre_insert	gcse.c	/^pre_insert (index_map)$/;"	f	file:
pre_insert_copies	gcse.c	/^pre_insert_copies ()$/;"	f	file:
pre_insert_copy_insn	gcse.c	/^pre_insert_copy_insn (expr, insn)$/;"	f	file:
pre_lcm	lcm.c	/^pre_lcm (n_blocks, n_exprs, s_preds, s_succs, transp,$/;"	f
pre_optimal	gcse.c	/^static sbitmap *pre_optimal;$/;"	v	file:
pre_redundant	gcse.c	/^static sbitmap *pre_redundant;$/;"	v	file:
pre_redundant_insns	gcse.c	/^static sbitmap pre_redundant_insns;$/;"	v	file:
pre_rev_lcm	lcm.c	/^pre_rev_lcm (n_blocks, n_exprs, s_preds, s_succs, transp,$/;"	f
precompute_arguments	calls.c	/^precompute_arguments (is_const, must_preallocate, num_actuals, args, args_size)$/;"	f	file:
precompute_register_parameters	calls.c	/^precompute_register_parameters (num_actuals, args, reg_parm_seen)$/;"	f	file:
precondition_loop_p	unroll.c	/^precondition_loop_p (loop_start, loop_info,$/;"	f
pred	gcov.c	/^  struct adj_list *pred;$/;"	m	struct:bb_info
pred	genrecog.c	/^  int pred;			\/* `preds' index of predicate or -1 *\/$/;"	m	struct:decision
pred	profile.c	/^  struct adj_list *pred;$/;"	m	struct:bb_info
pred_count	gcov.c	/^  int pred_count;$/;"	m	struct:bb_info
pred_count	profile.c	/^  int pred_count;$/;"	m	struct:bb_info
pred_int_list_blocks	flow.c	/^static int_list_block *pred_int_list_blocks;$/;"	v	file:
pred_next	gcov.c	/^  struct adj_list *pred_next;$/;"	m	struct:adj_list
pred_next	profile.c	/^  struct adj_list *pred_next;$/;"	m	struct:adj_list
pred_table	genrecog.c	/^static struct pred_table$/;"	s	file:
predefined	cccp.c	/^  int predefined;		\/* True if the macro was builtin or *\/$/;"	m	struct:definition
predicates	genoutput.c	/^  char *predicates[MAX_MAX_OPERANDS];$/;"	m	struct:data
predicates	genoutput.c	/^static const char *predicates[MAX_MAX_OPERANDS];$/;"	v	file:
preds	genrecog.c	/^} preds[]$/;"	v	file:
preexpand_calls	expr.c	/^preexpand_calls (exp)$/;"	f	file:
prefclass	regclass.c	/^static char *prefclass;$/;"	v	file:
prefclass_buffer	regclass.c	/^static char *prefclass_buffer;$/;"	v	file:
prefix	collect2.c	/^  char *prefix;               \/* String to prepend to the path.  *\/$/;"	m	struct:prefix_list
prefix	gcc.c	/^  char *prefix;               \/* String to prepend to the path.  *\/$/;"	m	struct:prefix_list
prefix	toplev.c	/^  const char *  prefix;$/;"	m	struct:
prefix_attributes	c-parse.c	/^static tree prefix_attributes = NULL_TREE;$/;"	v	file:
prefix_from_env	collect2.c	/^prefix_from_env (env, pprefix)$/;"	f	file:
prefix_from_string	collect2.c	/^prefix_from_string (p, pprefix)$/;"	f	file:
prefix_list	collect2.c	/^struct prefix_list$/;"	s	file:
prefix_list	gcc.c	/^struct prefix_list$/;"	s	file:
prepare_call_address	calls.c	/^prepare_call_address (funexp, fndecl, call_fusage, reg_parm_seen)$/;"	f
prepare_unit	sched.c	/^prepare_unit (unit)$/;"	f	file:
preprocess_constraints	recog.c	/^preprocess_constraints ()$/;"	f
preprocessor_options	gcc.c	/^static char **preprocessor_options;$/;"	v	file:
prescan_loop	loop.c	/^prescan_loop (start, end)$/;"	f	file:
preserve_data	tree.c	/^preserve_data ()$/;"	f
preserve_initializer	tree.c	/^preserve_initializer ()$/;"	f
preserve_momentary	tree.c	/^preserve_momentary ()$/;"	f
preserve_rtl_expr_result	function.c	/^preserve_rtl_expr_result (x)$/;"	f
preserve_subexpressions_p	stmt.c	/^preserve_subexpressions_p ()$/;"	f
preserve_temp_slots	function.c	/^preserve_temp_slots (x)$/;"	f
prev	c-pragma.c	/^  struct align_stack * prev;$/;"	m	struct:align_stack
prev	cccp.c	/^  struct assertion_hashnode *prev;$/;"	m	struct:assertion_hashnode
prev	cccp.c	/^  struct hashnode *prev;$/;"	m	struct:hashnode
prev	genrecog.c	/^  struct decision *prev;	\/* Node whose failure tests us *\/$/;"	m	struct:decision
prev	mips-tdump.c	/^  struct scope *prev;		\/* previous scope *\/$/;"	m	struct:scope
prev	mips-tfile.c	/^  struct scope	*prev;		\/* previous scope level *\/$/;"	m	struct:scope
prev	mips-tfile.c	/^  struct thead	*prev;		\/* previous block *\/$/;"	m	struct:thead
prev	mips-tfile.c	/^  struct vlinks	*prev;		\/* previous set of pages *\/$/;"	m	struct:vlinks
prev	tree.c	/^  struct momentary_level *prev;$/;"	m	struct:momentary_level
prev_active_insn	emit-rtl.c	/^prev_active_insn (insn)$/;"	f
prev_cc0_setter	emit-rtl.c	/^prev_cc0_setter (insn)$/;"	f
prev_insn	cse.c	/^static rtx prev_insn;$/;"	v	file:
prev_insn_cc0	cse.c	/^static rtx prev_insn_cc0;$/;"	v	file:
prev_insn_cc0_mode	cse.c	/^static enum machine_mode prev_insn_cc0_mode;$/;"	v	file:
prev_label	emit-rtl.c	/^prev_label (insn)$/;"	f
prev_nonnote_insn	emit-rtl.c	/^prev_nonnote_insn (insn)$/;"	f
prev_real_insn	emit-rtl.c	/^prev_real_insn (insn)$/;"	f
prev_same_hash	cse.c	/^  struct table_elt *prev_same_hash;$/;"	m	struct:table_elt
prev_same_value	cse.c	/^  struct table_elt *prev_same_value;$/;"	m	struct:table_elt
previous	dwarf2out.c	/^  int previous;$/;"	m	struct:decl_scope_struct
previous_insn	emit-rtl.c	/^previous_insn (insn)$/;"	f
previous_offset	reload1.c	/^  int previous_offset;		\/* Offset at end of previous insn.  *\/$/;"	m	struct:elim_table
previous_undos	combine.c	/^  struct undo *previous_undos;$/;"	m	struct:undobuf
primary_filename	dwarf2out.c	/^static char *primary_filename;$/;"	v	file:
primary_filename	dwarfout.c	/^static char *primary_filename;$/;"	v	file:
print_aux	mips-tdump.c	/^print_aux (u, auxi, used)$/;"	f
print_block_visualization	haifa-sched.c	/^print_block_visualization (b, s)$/;"	f	file:
print_blocks	reg-stack.c	/^print_blocks (file, insn, pat)$/;"	f	file:
print_char_table	c-common.c	/^static format_char_info print_char_table[] = {$/;"	v	file:
print_code	genemit.c	/^print_code (code)$/;"	f	file:
print_code	genpeep.c	/^print_code (code)$/;"	f	file:
print_code	genrecog.c	/^print_code (code)$/;"	f	file:
print_containing_files	cccp.c	/^print_containing_files ()$/;"	f	file:
print_deps	cccp.c	/^static int print_deps = 0;$/;"	v	file:
print_deps_missing_files	cccp.c	/^static int print_deps_missing_files = 0;$/;"	v	file:
print_die	dwarf2out.c	/^print_die (die, outfile)$/;"	f	file:
print_dwarf_line_table	dwarf2out.c	/^print_dwarf_line_table (outfile)$/;"	f	file:
print_error_function	toplev.c	/^void (*print_error_function) PROTO((const char *)) =$/;"	v
print_exp	haifa-sched.c	/^print_exp (buf, x, verbose)$/;"	f	file:
print_file_desc	mips-tdump.c	/^print_file_desc (fdp, number)$/;"	f
print_file_name	gcc.c	/^static const char *print_file_name = NULL;$/;"	v	file:
print_global_hdr	mips-tdump.c	/^print_global_hdr (ptr)$/;"	f
print_header	collect2.c	/^print_header (hdr_ptr)$/;"	f	file:
print_help	cccp.c	/^print_help ()$/;"	f	file:
print_help	cppinit.c	/^print_help ()$/;"	f	file:
print_help_list	gcc.c	/^static int print_help_list;$/;"	v	file:
print_include_names	cccp.c	/^static int print_include_names = 0;$/;"	v	file:
print_indent	dwarf2out.c	/^static int print_indent;$/;"	v	file:
print_inline_obstack_statistics	tree.c	/^print_inline_obstack_statistics ()$/;"	f
print_inline_rtx	print-rtl.c	/^print_inline_rtx (outf, x, ind)$/;"	f
print_insn	haifa-sched.c	/^print_insn (buf, x, verbose)$/;"	f	file:
print_int_cst_octal	dbxout.c	/^print_int_cst_octal (c)$/;"	f	file:
print_lang_decl	c-decl.c	/^print_lang_decl (file, node, indent)$/;"	f
print_lang_identifier	c-decl.c	/^print_lang_identifier (file, node, indent)$/;"	f
print_lang_statistics	c-lang.c	/^print_lang_statistics ()$/;"	f
print_lang_type	c-decl.c	/^print_lang_type (file, node, indent)$/;"	f
print_load_command	collect2.c	/^print_load_command (load_hdr, offset, number)$/;"	f	file:
print_multi_directory	gcc.c	/^static int print_multi_directory;$/;"	v	file:
print_multi_lib	gcc.c	/^static int print_multi_lib;$/;"	v	file:
print_multilib_info	gcc.c	/^print_multilib_info ()$/;"	f	file:
print_node	print-tree.c	/^print_node (file, prefix, node, indent)$/;"	f
print_node_brief	print-tree.c	/^print_node_brief (file, prefix, node, indent)$/;"	f
print_obstack_name	tree.c	/^print_obstack_name (object, file, prefix)$/;"	f
print_obstack_statistics	tree.c	/^print_obstack_statistics (str, o)$/;"	f
print_octal	dbxout.c	/^print_octal (value, digits)$/;"	f	file:
print_path	genextract.c	/^print_path (path)$/;"	f	file:
print_path	genpeep.c	/^print_path (path)$/;"	f	file:
print_pattern	haifa-sched.c	/^print_pattern (buf, x, verbose)$/;"	f	file:
print_prog_name	gcc.c	/^static const char *print_prog_name = NULL;$/;"	v	file:
print_rtl	print-rtl.c	/^print_rtl (outf, rtx_first)$/;"	f
print_rtl_graph_with_bb	graph.c	/^print_rtl_graph_with_bb (base, suffix, rtx_first)$/;"	f
print_rtl_single	print-rtl.c	/^print_rtl_single (outf, x)$/;"	f
print_rtl_with_bb	flow.c	/^print_rtl_with_bb (outf, rtx_first)$/;"	f
print_rtx	print-rtl.c	/^print_rtx (in_rtx)$/;"	f	file:
print_search_dirs	gcc.c	/^static int print_search_dirs;$/;"	v	file:
print_single_switch	toplev.c	/^print_single_switch (file, pos, max, indent, sep, term, type, name)$/;"	f	file:
print_spaces	dwarf2out.c	/^print_spaces (outfile)$/;"	f	file:
print_spelling	c-typeck.c	/^print_spelling (buffer)$/;"	f	file:
print_switch_values	toplev.c	/^print_switch_values (file, pos, max, indent, sep, term)$/;"	f	file:
print_sym_hdr	mips-tdump.c	/^print_sym_hdr (sym_ptr)$/;"	f
print_symbol	mips-tdump.c	/^print_symbol (sym_ptr, number, strbase, aux_base, ifd, fdp)$/;"	f
print_time	toplev.c	/^print_time (str, total)$/;"	f
print_unsigned_host_widest_int	cexp.c	/^print_unsigned_host_widest_int (u)$/;"	f	file:
print_usage	gcov.c	/^print_usage ()$/;"	f	file:
print_value	haifa-sched.c	/^print_value (buf, x, verbose)$/;"	f	file:
print_version	toplev.c	/^print_version (file, indent)$/;"	f	file:
printf_format_type	c-common.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	e	file:	enum:format_type
printmode	enquire.c	/^printmode(new) unsigned new; {$/;"	f
printname	stmt.c	/^	  const char *printname;$/;"	m	struct:nesting::<anonymous>::<anonymous>
priority	haifa-sched.c	/^priority (insn)$/;"	f	file:
priority	sched.c	/^priority (insn)$/;"	f	file:
prob	gcov.c	/^  int prob;$/;"	m	struct:arcdata
prob	haifa-sched.c	/^static float *prob;$/;"	v	file:
probe_stack_range	explow.c	/^probe_stack_range (first, size)$/;"	f
proc	mips-tfile.c	/^  PDR		proc	[ PAGE_SIZE \/ sizeof (PDR)	 ];$/;"	m	union:page
proc_desc	mips-tdump.c	/^PDR	*proc_desc;		\/* procedure tables *\/$/;"	v
proc_ptr	mips-tfile.c	/^  PDR		*proc_ptr;	\/* procedure descriptor pointer *\/$/;"	m	struct:shash
process_args	gcov.c	/^process_args (argc, argv)$/;"	f	file:
process_aux_info_file	protoize.c	/^process_aux_info_file (base_source_filename, keep_it, is_syscalls)$/;"	f	file:
process_command	gcc.c	/^process_command (argc, argv)$/;"	f	file:
process_init_element	c-typeck.c	/^process_init_element (value)$/;"	f
process_reg_param	integrate.c	/^process_reg_param (map, loc, copy)$/;"	f	file:
process_template	genoutput.c	/^process_template (d, template)$/;"	f	file:
procs	mips-tfile.c	/^  varray_t	 procs;		\/* procedures *\/$/;"	m	struct:efdr
producer_attribute	dwarfout.c	/^producer_attribute (producer)$/;"	f	file:
product_cheap_p	loop.c	/^product_cheap_p (a, b)$/;"	f	file:
profile_after_prologue	final.c	/^profile_after_prologue (file)$/;"	f	file:
profile_arc_flag	toplev.c	/^int profile_arc_flag = 0;$/;"	v
profile_block_flag	toplev.c	/^int profile_block_flag;$/;"	v
profile_flag	toplev.c	/^int profile_flag = 0;$/;"	v
profile_function	final.c	/^profile_function (file)$/;"	f	file:
profile_function_entry_libfunc	optabs.c	/^rtx profile_function_entry_libfunc;$/;"	v
profile_function_exit_libfunc	optabs.c	/^rtx profile_function_exit_libfunc;$/;"	v
profile_label_no	final.c	/^int profile_label_no;$/;"	v
profiler_label	profile.c	/^static rtx profiler_label;$/;"	v	file:
profiling	gmon.c	/^static int		profiling = 3;$/;"	v	file:
progname	cccp.c	/^static char *progname;$/;"	v	file:
progname	cppmain.c	/^char *progname;$/;"	v
progname	fix-header.c	/^char *progname = "fix-header";$/;"	v
progname	gen-protos.c	/^char *progname;$/;"	v
progname	mips-tfile.c	/^static char    *progname	= (char *) 0;	\/* program name for errors *\/$/;"	v	file:
progname	mips-tfile.c	/^static const char *progname;$/;"	v	file:
progname	toplev.c	/^char *progname;$/;"	v
programname	gcc.c	/^static const char *programname;$/;"	v	file:
prologue	function.c	/^static int *prologue;$/;"	v	file:
promote_mode	explow.c	/^promote_mode (type, mode, punsignedp, for_call)$/;"	f
promoted_input_arg	function.c	/^promoted_input_arg (regno, pmode, punsignedp)$/;"	f
promotions	enquire.c	/^int promotions() {$/;"	f
propagate_block	flow.c	/^propagate_block (old, first, last, final, significant, bnum, remove_dead_code)$/;"	f	file:
protect_cleanup_actions_with_terminate	except.c	/^int protect_cleanup_actions_with_terminate;$/;"	v
protect_from_queue	expr.c	/^protect_from_queue (x, modify)$/;"	f
protect_list	except.c	/^static tree protect_list;$/;"	v	file:
protect_with_terminate	except.c	/^protect_with_terminate (e)$/;"	f
prototyped	protoize.c	/^  char			prototyped;	\/* = 0 means already prototyped *\/$/;"	m	struct:def_dec_info_struct
prototyped_attribute	dwarfout.c	/^prototyped_attribute (func_type)$/;"	f	file:
prune_preferences	global.c	/^prune_preferences ()$/;"	f	file:
pseudo_forbidden_regs	reload1.c	/^static HARD_REG_SET *pseudo_forbidden_regs;$/;"	v	file:
pseudo_ops	mips-tfile.c	/^static pseudo_ops_t pseudo_ops[] = {$/;"	v	file:
pseudo_ops_t	mips-tfile.c	/^} pseudo_ops_t;$/;"	t	file:
pseudo_previous_regs	reload1.c	/^static HARD_REG_SET *pseudo_previous_regs;$/;"	v	file:
pseudos_counted	reload1.c	/^static regset pseudos_counted;$/;"	v	file:
ptr	gcc.c	/^  char *ptr;			\/* available ptr if no static pointer *\/$/;"	m	struct:spec_list
ptr	gcc.c	/^  char *ptr;$/;"	m	struct:spec_list_1
ptr_half_pic_address_p	halfpic.c	/^int (*ptr_half_pic_address_p)() = half_pic_address_p;$/;"	v
ptr_mode	emit-rtl.c	/^enum machine_mode ptr_mode;	\/* Mode whose width is POINTER_SIZE.  *\/$/;"	v
ptr_spec	gcc.c	/^  char **ptr_spec;		\/* pointer to the spec itself.  *\/$/;"	m	struct:spec_list
ptr_type	libgcc2.c	/^typedef int ptr_type __attribute__ ((mode (pointer)));$/;"	t	file:
ptr_type_node	c-decl.c	/^tree ptr_type_node, const_ptr_type_node;$/;"	v
ptrdiff_t	mips-tdump.c	87;"	d	file:
ptrdiff_type_node	c-decl.c	/^tree ptrdiff_type_node;$/;"	v
pubname_entry	dwarf2out.c	/^pubname_entry;$/;"	t	file:
pubname_ref	dwarf2out.c	/^typedef struct pubname_struct *pubname_ref;$/;"	t	file:
pubname_struct	dwarf2out.c	/^typedef struct pubname_struct$/;"	s	file:
pubname_table	dwarf2out.c	/^static pubname_ref pubname_table;$/;"	v	file:
pubname_table_allocated	dwarf2out.c	/^static unsigned pubname_table_allocated;$/;"	v	file:
pubname_table_in_use	dwarf2out.c	/^static unsigned pubname_table_in_use;$/;"	v	file:
pure_or_virtual_attribute	dwarfout.c	/^pure_or_virtual_attribute (func_decl)$/;"	f	file:
purge_addressof	function.c	/^purge_addressof (insns)$/;"	f
purge_addressof_1	function.c	/^purge_addressof_1 (loc, insn, force, store, ht)$/;"	f	file:
purge_addressof_replacements	function.c	/^static rtx purge_addressof_replacements;$/;"	v	file:
purge_bitfield_addressof_replacements	function.c	/^static rtx purge_bitfield_addressof_replacements;$/;"	v	file:
purpose	c-typeck.c	/^  tree purpose;$/;"	m	struct:init_node
purpose_member	tree.c	/^purpose_member (elem, list)$/;"	f
push_alignment	c-pragma.c	/^push_alignment (alignment, id)$/;"	f	file:
push_array_bounds	c-typeck.c	/^push_array_bounds (bounds)$/;"	f	file:
push_block	expr.c	/^push_block (size, extra, below)$/;"	f
push_c_function_context	c-decl.c	/^push_c_function_context ()$/;"	f
push_decl_scope	dwarf2out.c	/^push_decl_scope (scope)$/;"	f	file:
push_eh_entry	except.c	/^push_eh_entry (stack)$/;"	f	file:
push_entry	except.c	/^push_entry (stack, entry)$/;"	f	file:
push_float_handler	toplev.c	/^push_float_handler (handler, old_handler)$/;"	f
push_function_context	function.c	/^push_function_context ()$/;"	f
push_function_context_to	function.c	/^push_function_context_to (context)$/;"	f
push_init_level	c-typeck.c	/^push_init_level (implicit)$/;"	f
push_iterator_stack	c-iterate.c	/^push_iterator_stack ()$/;"	f
push_label_entry	except.c	/^push_label_entry (stack, rlabel, tlabel)$/;"	f
push_label_level	c-decl.c	/^push_label_level ()$/;"	f
push_macro_expansion	cpphash.c	/^push_macro_expansion (pfile, xbuf, xbuf_len, hp)$/;"	f	file:
push_member_name	c-typeck.c	/^push_member_name (decl)$/;"	f	file:
push_momentary	tree.c	/^push_momentary ()$/;"	f
push_obstacks	tree.c	/^push_obstacks (current, saveable)$/;"	f
push_obstacks_nochange	tree.c	/^push_obstacks_nochange ()$/;"	f
push_operand	recog.c	/^push_operand (op, mode)$/;"	f
push_parm_decl	c-decl.c	/^push_parm_decl (parm)$/;"	f
push_reload	reload.c	/^push_reload (in, out, inloc, outloc, class,$/;"	f	file:
push_replacement	reload.c	/^push_replacement (loc, reloadnum, mode)$/;"	f	file:
push_secondary_reload	reload.c	/^push_secondary_reload (in_p, x, opnum, optional, reload_class, reload_mode,$/;"	f	file:
push_string	c-typeck.c	/^push_string (string)$/;"	f	file:
push_temp_slots	function.c	/^push_temp_slots ()$/;"	f
push_temp_slots_for_block	function.c	/^push_temp_slots_for_block ()$/;"	f
push_temp_slots_for_target	function.c	/^push_temp_slots_for_target ()$/;"	f
push_to_sequence	emit-rtl.c	/^push_to_sequence (first)$/;"	f
push_topmost_sequence	emit-rtl.c	/^push_topmost_sequence ()$/;"	f
pushcase	stmt.c	/^pushcase (value, converter, label, duplicate)$/;"	f
pushcase_range	stmt.c	/^pushcase_range (value1, value2, converter, label, duplicate)$/;"	f
pushdecl	c-decl.c	/^pushdecl (x)$/;"	f
pushdecl_top_level	c-decl.c	/^pushdecl_top_level (x)$/;"	f
pushlevel	c-decl.c	/^pushlevel (tag_transparent)$/;"	f
pushtag	c-decl.c	/^pushtag (name, type)$/;"	f
put_addressof_into_stack	function.c	/^put_addressof_into_stack (r, ht)$/;"	f	file:
put_out_comments	cccp.c	/^static int put_out_comments = 0;$/;"	v	file:
put_pending_sizes	stor-layout.c	/^put_pending_sizes (chain)$/;"	f
put_reg	libgcc2.c	/^put_reg (unsigned reg, void *val, frame_state *udata)$/;"	f	file:
put_reg_into_stack	function.c	/^put_reg_into_stack (function, reg, type, promoted_mode, decl_mode, volatile_p,$/;"	f	file:
put_return_addr	libgcc2.c	/^put_return_addr (void *val, frame_state *udata)$/;"	f	file:
put_var_into_stack	function.c	/^put_var_into_stack (decl)$/;"	f
putenv	collect2.c	/^putenv (str)$/;"	f
putenv	gcc.c	/^putenv (str)$/;"	f
putenv_from_prefixes	gcc.c	/^putenv_from_prefixes (paths, env_var)$/;"	f	file:
q_ptr	haifa-sched.c	/^static int q_ptr = 0;$/;"	v	file:
q_ptr	sched.c	/^static int q_ptr = 0;$/;"	v	file:
q_size	haifa-sched.c	/^static int q_size = 0;$/;"	v	file:
q_size	sched.c	/^static int q_size = 0;$/;"	v	file:
qlen	c-common.c	/^  tree *qlen;$/;"	m	struct:
qty_alternate_class	local-alloc.c	/^static enum reg_class *qty_alternate_class;$/;"	v	file:
qty_birth	local-alloc.c	/^static int *qty_birth;$/;"	v	file:
qty_changes_size	local-alloc.c	/^static char *qty_changes_size;$/;"	v	file:
qty_compare	local-alloc.c	/^qty_compare (q1, q2)$/;"	f	file:
qty_compare_1	local-alloc.c	/^qty_compare_1 (q1p, q2p)$/;"	f	file:
qty_comparison_code	cse.c	/^static enum rtx_code *qty_comparison_code;$/;"	v	file:
qty_comparison_const	cse.c	/^static rtx *qty_comparison_const;$/;"	v	file:
qty_comparison_qty	cse.c	/^static int *qty_comparison_qty;$/;"	v	file:
qty_const	cse.c	/^static rtx *qty_const;$/;"	v	file:
qty_const_insn	cse.c	/^static rtx *qty_const_insn;$/;"	v	file:
qty_death	local-alloc.c	/^static int *qty_death;$/;"	v	file:
qty_first_reg	cse.c	/^static int *qty_first_reg;$/;"	v	file:
qty_first_reg	local-alloc.c	/^static int *qty_first_reg;$/;"	v	file:
qty_last_reg	cse.c	/^static int *qty_last_reg;$/;"	v	file:
qty_min_class	local-alloc.c	/^static enum reg_class *qty_min_class;$/;"	v	file:
qty_mode	cse.c	/^static enum machine_mode *qty_mode;$/;"	v	file:
qty_mode	local-alloc.c	/^static enum machine_mode *qty_mode;$/;"	v	file:
qty_n_calls_crossed	local-alloc.c	/^static int *qty_n_calls_crossed;$/;"	v	file:
qty_n_refs	local-alloc.c	/^static int *qty_n_refs;$/;"	v	file:
qty_phys_copy_sugg	local-alloc.c	/^static HARD_REG_SET *qty_phys_copy_sugg;$/;"	v	file:
qty_phys_num_copy_sugg	local-alloc.c	/^static short *qty_phys_num_copy_sugg;$/;"	v	file:
qty_phys_num_sugg	local-alloc.c	/^static short *qty_phys_num_sugg;$/;"	v	file:
qty_phys_reg	local-alloc.c	/^static short *qty_phys_reg;$/;"	v	file:
qty_phys_sugg	local-alloc.c	/^static HARD_REG_SET *qty_phys_sugg;$/;"	v	file:
qty_size	local-alloc.c	/^static int *qty_size;$/;"	v	file:
qty_sugg_compare	local-alloc.c	/^qty_sugg_compare (q1, q2)$/;"	f	file:
qty_sugg_compare_1	local-alloc.c	/^qty_sugg_compare_1 (q1p, q2p)$/;"	f	file:
qualify_type	c-typeck.c	/^qualify_type (type, like)$/;"	f	file:
queue_insn	haifa-sched.c	/^queue_insn (insn, n_cycles)$/;"	f	file:
queue_insn	sched.c	/^queue_insn (insn, n_cycles)$/;"	f	file:
queue_to_ready	haifa-sched.c	/^queue_to_ready (ready, n_ready)$/;"	f	file:
queued_subexp_p	expr.c	/^queued_subexp_p (x)$/;"	f
quiet_flag	protoize.c	/^static int quiet_flag = 0;		\/* Don't print messages normally.  *\/$/;"	v	file:
quiet_flag	toplev.c	/^int quiet_flag = 0;$/;"	v
quote_string	cccp.c	/^quote_string (dst, src, srclen)$/;"	f	file:
quote_string	cpplib.c	/^quote_string (pfile, src)$/;"	f
quote_string_for_make	cccp.c	/^quote_string_for_make (dst, src)$/;"	f	file:
r	combine.c	/^  union {rtx *r; int *i;} where;$/;"	m	union:undo::<anonymous>
r	combine.c	/^  union {rtx r; int i;} old_contents;$/;"	m	union:undo::<anonymous>
r	loop.c	/^  rtx r;$/;"	m	struct:rtx_and_int
r1	loop.c	/^  rtx r1;$/;"	m	struct:rtx_pair
r2	loop.c	/^  rtx r2;$/;"	m	struct:rtx_pair
r_kind	tree.c	/^  r_kind,$/;"	e	file:
ra_regno	frame.c	/^  unsigned ra_regno;$/;"	m	struct:cie_info
range	genattr.c	/^struct range$/;"	s	file:
range	genattrtab.c	/^struct range$/;"	s	file:
range_binop	fold-const.c	/^range_binop (code, type, arg0, upper0_p, arg1, upper1_p)$/;"	f	file:
range_end	c-typeck.c	/^  tree range_end;$/;"	m	struct:constructor_stack
range_number	except.c	/^  int range_number;   \/* EH region number from EH NOTE insn's *\/$/;"	m	struct:func_eh_entry
rank_for_schedule	haifa-sched.c	/^rank_for_schedule (x, y)$/;"	f	file:
rank_for_schedule	sched.c	/^rank_for_schedule (x, y)$/;"	f	file:
rare_destination	reorg.c	/^rare_destination (insn)$/;"	f	file:
raw	cccp.c	/^  U_CHAR *raw, *expanded;$/;"	m	struct:argdata
raw	cpphash.c	/^  long raw, expanded, stringified;$/;"	m	struct:argdata
raw_after	cccp.c	/^    enum sharp_token_type raw_after;	\/* set if a ## operator after arg *\/$/;"	m	struct:definition::reflist
raw_before	cccp.c	/^    enum sharp_token_type raw_before;	\/* set if a ## operator before arg *\/$/;"	m	struct:definition::reflist
raw_length	cccp.c	/^  int raw_length, expand_length;$/;"	m	struct:argdata
raw_length	cpphash.c	/^  int raw_length, expand_length;$/;"	m	struct:argdata
rbit	real.c	/^static unsigned EMUSHORT rbit[NI];$/;"	v	file:
rbrac_line	fix-header.c	/^int lbrac_line, rbrac_line;$/;"	v
rd_gen	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
rd_kill	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
rd_out	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
re	real.c	/^static int re = 0;$/;"	v	file:
reaching_defs	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
reaching_reg	gcse.c	/^  rtx reaching_reg;$/;"	m	struct:expr
read_1byte	frame.c	/^read_1byte (void *p)$/;"	f	file:
read_2byte	frame.c	/^read_2byte (void *p)$/;"	f	file:
read_4byte	frame.c	/^read_4byte (void *p)$/;"	f	file:
read_8byte	frame.c	/^read_8byte (void *p)$/;"	f	file:
read_and_prescan	cppfiles.c	/^read_and_prescan (pfile, fp, desc, len)$/;"	f	file:
read_dependence	alias.c	/^read_dependence (mem, x)$/;"	f
read_file	collect2.c	/^read_file (name, fd, rw)$/;"	f	file:
read_filename_string	cccp.c	/^read_filename_string (ch, f)$/;"	f	file:
read_filename_string	cppfiles.c	/^read_filename_string (ch, f)$/;"	f	file:
read_files	gcov.c	/^read_files ()$/;"	f	file:
read_integral_parameter	toplev.c	/^read_integral_parameter (p, pname, defval)$/;"	f
read_line	mips-tfile.c	/^read_line __proto((void))$/;"	f
read_name	rtl.c	/^read_name (str, infile)$/;"	f	file:
read_name_map	cccp.c	/^read_name_map (dirname)$/;"	f	file:
read_name_map	cppfiles.c	/^read_name_map (pfile, dirname)$/;"	f	file:
read_pointer	frame.c	/^read_pointer (void *p)$/;"	f	file:
read_repo_file	tlink.c	/^read_repo_file (f)$/;"	f	file:
read_repo_files	tlink.c	/^read_repo_files (object_lst)$/;"	f	file:
read_rtx	rtl.c	/^read_rtx (infile)$/;"	f
read_scan_file	fix-header.c	/^read_scan_file (in_fname, argc, argv)$/;"	f
read_seek	mips-tdump.c	/^read_seek (ptr, size, offset, context)$/;"	f
read_seek	mips-tfile.c	/^read_seek (size, offset, str)$/;"	f
read_skip_spaces	rtl.c	/^read_skip_spaces (infile)$/;"	f
read_specs	gcc.c	/^read_specs (filename, main_p)$/;"	f	file:
read_tfile	mips-tdump.c	/^read_tfile __proto((void))$/;"	f
read_token_list	cccp.c	/^read_token_list (bpp, limit, error_flag)$/;"	f	file:
read_upto	scan.c	/^read_upto (fp, str, delim)$/;"	f
readescape	c-lex.c	/^readescape (ignore_ptr)$/;"	f	file:
readonly_data_section	varasm.c	/^readonly_data_section ()$/;"	f
readonly_warning	c-typeck.c	/^readonly_warning (arg, msgid)$/;"	f
ready	genattrtab.c	/^  int ready;			\/* Cost until data is ready.  *\/$/;"	m	struct:function_unit_op
ready_cost	genattr.c	/^  struct range ready_cost;	\/* Range of ready cost values.  *\/$/;"	m	struct:function_unit
real_hex_to_f	fold-const.c	/^real_hex_to_f (s, mode)$/;"	f
real_len	halfpic.c	/^  int		   real_len;	\/* strlen (real_name) *\/$/;"	m	struct:all_refs
real_name	halfpic.c	/^  char		  *real_name;	\/* real function\/data name *\/$/;"	m	struct:all_refs
real_onep	tree.c	/^real_onep (expr)$/;"	f
real_twop	tree.c	/^real_twop (expr)$/;"	f
real_value_from_int_cst	tree.c	/^real_value_from_int_cst (type, i)$/;"	f
real_value_truncate	fold-const.c	/^real_value_truncate (mode, arg)$/;"	f
real_value_truncate	real.c	/^real_value_truncate (mode, arg)$/;"	f
real_zerop	tree.c	/^real_zerop (expr)$/;"	f
really_constant_p	tree.c	/^really_constant_p (exp)$/;"	f
really_start_incremental_init	c-typeck.c	/^really_start_incremental_init (type)$/;"	f
rebit	real.c	/^static unsigned EMUSHORT rebit = 0;$/;"	v	file:
rebuild_jump_labels	jump.c	/^rebuild_jump_labels (f)$/;"	f
receive_exception_label	except.c	/^receive_exception_label (handler_label)$/;"	f	file:
recog_constraints	recog.c	/^const char *recog_constraints[MAX_RECOG_OPERANDS];$/;"	v
recog_dup_loc	recog.c	/^rtx *recog_dup_loc[MAX_RECOG_OPERANDS];$/;"	v
recog_dup_num	recog.c	/^char recog_dup_num[MAX_RECOG_OPERANDS];$/;"	v
recog_for_combine	combine.c	/^recog_for_combine (pnewpat, insn, pnotes)$/;"	f	file:
recog_memoized	recog.c	/^recog_memoized (insn)$/;"	f
recog_n_alternatives	recog.c	/^int recog_n_alternatives;$/;"	v
recog_n_dups	recog.c	/^int recog_n_dups;$/;"	v
recog_n_operands	recog.c	/^int recog_n_operands;$/;"	v
recog_op_alt	recog.c	/^struct operand_alternative recog_op_alt[MAX_RECOG_OPERANDS][MAX_RECOG_ALTERNATIVES];$/;"	v
recog_op_type	recog.c	/^enum op_type recog_op_type[MAX_RECOG_OPERANDS];$/;"	v
recog_operand	recog.c	/^rtx recog_operand[MAX_RECOG_OPERANDS];$/;"	v
recog_operand_address_p	recog.c	/^char recog_operand_address_p[MAX_RECOG_OPERANDS];$/;"	v
recog_operand_loc	recog.c	/^rtx *recog_operand_loc[MAX_RECOG_OPERANDS];$/;"	v
recog_operand_mode	recog.c	/^enum machine_mode recog_operand_mode[MAX_RECOG_OPERANDS];$/;"	v
recognize_objc_keyword	c-lang.c	/^recognize_objc_keyword ()$/;"	f
recognized_extern	fix-header.c	/^recognized_extern (name, name_length, type, type_length)$/;"	f
recognized_function	fix-header.c	/^recognized_function (fname, fname_length,$/;"	f
recognized_macro	fix-header.c	/^recognized_macro (fname)$/;"	f
recombine_givs	loop.c	/^recombine_givs (bl, loop_start, loop_end, unroll_p)$/;"	f	file:
recombine_givs_stats	loop.c	/^struct recombine_givs_stats$/;"	s	file:
recompile_files	tlink.c	/^recompile_files ()$/;"	f	file:
recompute_reg_usage	flow.c	/^recompute_reg_usage (f, loop_step)$/;"	f
record_address_regs	regclass.c	/^record_address_regs (x, class, scale)$/;"	f	file:
record_alias_subset	alias.c	/^record_alias_subset (superset, subset)$/;"	f
record_asm_reg_life	reg-stack.c	/^record_asm_reg_life (insn, regstack)$/;"	f	file:
record_base_value	alias.c	/^record_base_value (regno, val, invariant)$/;"	f
record_biv	loop.c	/^record_biv (v, insn, dest_reg, inc_val, mult_val, location,$/;"	f	file:
record_conflicts	global.c	/^record_conflicts (allocno_vec, len)$/;"	f	file:
record_constant	varasm.c	/^record_constant (exp)$/;"	f	file:
record_constant_1	varasm.c	/^record_constant_1 (exp)$/;"	f	file:
record_constant_rtx	varasm.c	/^record_constant_rtx (mode, x)$/;"	f	file:
record_control_macro	cccp.c	/^record_control_macro (inc, macro_name)$/;"	f	file:
record_dead_and_set_regs	combine.c	/^record_dead_and_set_regs (insn)$/;"	f	file:
record_dead_and_set_regs_1	combine.c	/^record_dead_and_set_regs_1 (dest, setter)$/;"	f	file:
record_dead_insn	combine.c	/^static rtx record_dead_insn;$/;"	v	file:
record_excess_regs	loop.c	/^record_excess_regs (in_this, not_in_this, output)$/;"	f
record_function_format	c-common.c	/^record_function_format (name, assembler_name, format_type,$/;"	f	file:
record_giv	loop.c	/^record_giv (v, insn, src_reg, dest_reg, mult_val, add_val, benefit,$/;"	f	file:
record_initial	loop.c	/^record_initial (dest, set)$/;"	f	file:
record_insns	function.c	/^record_insns (insns)$/;"	f	file:
record_international_format	c-common.c	/^record_international_format (name, assembler_name, format_num)$/;"	f	file:
record_jump_cond	cse.c	/^record_jump_cond (code, mode, op0, op1, reversed_nonequality)$/;"	f	file:
record_jump_equiv	cse.c	/^record_jump_equiv (insn, taken)$/;"	f	file:
record_label_references	reg-stack.c	/^record_label_references (insn, pat)$/;"	f	file:
record_last_mem_set_info	gcse.c	/^record_last_mem_set_info (insn)$/;"	f	file:
record_last_reg_set_info	gcse.c	/^record_last_reg_set_info (insn, regno)$/;"	f	file:
record_last_set_info	gcse.c	/^record_last_set_info (dest, setter)$/;"	f	file:
record_one_conflict	global.c	/^record_one_conflict (regno)$/;"	f	file:
record_one_set	gcse.c	/^record_one_set (regno, insn)$/;"	f	file:
record_reg_classes	regclass.c	/^record_reg_classes (n_alts, n_ops, ops, modes, subreg_changes_size,$/;"	f	file:
record_reg_life	reg-stack.c	/^record_reg_life (insn, block, regstack)$/;"	f	file:
record_reg_life_pat	reg-stack.c	/^record_reg_life_pat (pat, src, dest, douse)$/;"	f	file:
record_set	alias.c	/^record_set (dest, set)$/;"	f	file:
record_set_info	gcse.c	/^record_set_info (dest, setter)$/;"	f	file:
record_set_insn	gcse.c	/^static rtx record_set_insn;$/;"	v	file:
record_temp_file	gcc.c	/^record_temp_file (filename, always_delete, fail_delete)$/;"	f	file:
record_value_for_reg	combine.c	/^record_value_for_reg (reg, insn, value)$/;"	f	file:
record_volatile_insns	flow.c	/^record_volatile_insns (f)$/;"	f	file:
recorded_label_ref	cse.c	/^static int recorded_label_ref;$/;"	v	file:
recorded_label_ref	local-alloc.c	/^static int recorded_label_ref;$/;"	v	file:
redeclaration_error_message	c-decl.c	/^redeclaration_error_message (newdecl, olddecl)$/;"	f	file:
redirect_exp	jump.c	/^redirect_exp (loc, olabel, nlabel, insn)$/;"	f
redirect_jump	jump.c	/^redirect_jump (jump, nlabel)$/;"	f
redirect_tablejump	jump.c	/^redirect_tablejump (jump, nlabel)$/;"	f	file:
redirect_with_delay_list_safe_p	reorg.c	/^redirect_with_delay_list_safe_p (jump, newlabel, delay_list)$/;"	f	file:
redirect_with_delay_slots_safe_p	reorg.c	/^redirect_with_delay_slots_safe_p (jump, newlabel, seq)$/;"	f	file:
redundant_include_p	cppfiles.c	/^redundant_include_p (pfile, ihash, ilist)$/;"	f	file:
redundant_insn	reorg.c	/^redundant_insn (insn, target, delay_list)$/;"	f	file:
reemit_notes	haifa-sched.c	/^reemit_notes (insn, last)$/;"	f	file:
reemit_notes	sched.c	/^reemit_notes (insn, last)$/;"	f	file:
ref_len	halfpic.c	/^  int		   ref_len;	\/* reference name length *\/$/;"	m	struct:all_refs
ref_name	halfpic.c	/^  char		  *ref_name;	\/* reference name to ptr to real_name *\/$/;"	m	struct:all_refs
ref_outside_mem	reload1.c	/^  int ref_outside_mem;		\/* "to" has been referenced outside a MEM.  *\/$/;"	m	struct:elim_table
referenced_file_is_newer	protoize.c	/^referenced_file_is_newer (l, aux_info_mtime)$/;"	f	file:
referenced_regs	caller-save.c	/^static HARD_REG_SET referenced_regs;$/;"	v	file:
refers_to_mem_for_reload_p	reload.c	/^refers_to_mem_for_reload_p (x)$/;"	f
refers_to_p	cse.c	/^refers_to_p (x, y)$/;"	f	file:
refers_to_regno_for_reload_p	reload.c	/^refers_to_regno_for_reload_p (regno, endregno, x, loc)$/;"	f
refers_to_regno_p	rtlanal.c	/^refers_to_regno_p (regno, endregno, x, loc)$/;"	f
reflist	cccp.c	/^  struct reflist {$/;"	s	file:	struct:definition
reg	calls.c	/^  rtx reg;$/;"	m	struct:arg_data
reg	loop.c	/^  rtx reg;      \/* Corresponding pseudo, if any.  *\/$/;"	m	struct:loop_mem_info
reg	reg-stack.c	/^  char reg[REG_STACK_SIZE];	\/* register - stack mapping *\/$/;"	m	struct:stack_def
reg_address_cost	loop.c	/^static int reg_address_cost;$/;"	v	file:
reg_alloc_order	regclass.c	/^int reg_alloc_order[FIRST_PSEUDO_REGISTER] = REG_ALLOC_ORDER;$/;"	v
reg_allocno	global.c	/^static int *reg_allocno;$/;"	v	file:
reg_alternate_class	regclass.c	/^reg_alternate_class (regno)$/;"	f
reg_base_reg	reload1.c	/^static int reg_base_reg[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_base_value	alias.c	/^rtx *reg_base_value;$/;"	v
reg_base_value_size	alias.c	/^unsigned int reg_base_value_size;	\/* size of reg_base_value array *\/$/;"	v
reg_becomes_live	global.c	/^reg_becomes_live (reg, setter)$/;"	f	file:
reg_bitfield_target_p	combine.c	/^reg_bitfield_target_p (x, body)$/;"	f	file:
reg_biv_class	loop.c	/^struct iv_class **reg_biv_class;$/;"	v
reg_class_contents	regclass.c	/^HARD_REG_SET reg_class_contents[N_REG_CLASSES];$/;"	v
reg_class_names	reload.c	/^static char *reg_class_names[] = REG_CLASS_NAMES;$/;"	v	file:
reg_class_size	regclass.c	/^int reg_class_size[N_REG_CLASSES];$/;"	v
reg_class_subclasses	regclass.c	/^enum reg_class reg_class_subclasses[N_REG_CLASSES][N_REG_CLASSES];$/;"	v
reg_class_subset_p	regclass.c	/^reg_class_subset_p (c1, c2)$/;"	f
reg_class_subunion	regclass.c	/^enum reg_class reg_class_subunion[N_REG_CLASSES][N_REG_CLASSES];$/;"	v
reg_class_superclasses	regclass.c	/^enum reg_class reg_class_superclasses[N_REG_CLASSES][N_REG_CLASSES];$/;"	v
reg_class_superunion	regclass.c	/^enum reg_class reg_class_superunion[N_REG_CLASSES][N_REG_CLASSES];$/;"	v
reg_classes_intersect_p	regclass.c	/^reg_classes_intersect_p (c1, c2)$/;"	f
reg_dead_after_loop	unroll.c	/^reg_dead_after_loop (reg, loop_start, loop_end)$/;"	f	file:
reg_dead_at_p	combine.c	/^reg_dead_at_p (reg, insn)$/;"	f	file:
reg_dead_at_p_1	combine.c	/^reg_dead_at_p_1 (dest, x)$/;"	f	file:
reg_dead_endregno	combine.c	/^static int reg_dead_regno, reg_dead_endregno;$/;"	v	file:
reg_dead_flag	combine.c	/^static int reg_dead_flag;$/;"	v	file:
reg_dead_regno	combine.c	/^static int reg_dead_regno, reg_dead_endregno;$/;"	v	file:
reg_dies	global.c	/^reg_dies (regno, mode)$/;"	f	file:
reg_eliminate	reload1.c	/^static struct elim_table * reg_eliminate = 0;$/;"	v	file:
reg_eliminate_1	reload1.c	/^} reg_eliminate_1[] =$/;"	v	file:
reg_equiv_address	reload1.c	/^rtx *reg_equiv_address;$/;"	v
reg_equiv_constant	reload1.c	/^rtx *reg_equiv_constant;$/;"	v
reg_equiv_init	reload1.c	/^static rtx *reg_equiv_init;$/;"	v	file:
reg_equiv_init_insns	local-alloc.c	/^static rtx *reg_equiv_init_insns;$/;"	v	file:
reg_equiv_mem	reload1.c	/^rtx *reg_equiv_mem;$/;"	v
reg_equiv_memory_loc	reload1.c	/^rtx *reg_equiv_memory_loc;$/;"	v
reg_equiv_replacement	local-alloc.c	/^static rtx *reg_equiv_replacement;$/;"	v	file:
reg_first_set	gcse.c	/^static int *reg_first_set;$/;"	v	file:
reg_fits_class_p	recog.c	/^reg_fits_class_p (operand, class, offset, mode)$/;"	f
reg_flag	reload.c	/^  int reg_flag;		\/* Nonzero if referencing a register.  *\/$/;"	m	struct:decomposition
reg_has_output_reload	reload1.c	/^static char *reg_has_output_reload;$/;"	v	file:
reg_in_basic_block_p	loop.c	/^reg_in_basic_block_p (insn, reg)$/;"	f	file:
reg_in_table	cse.c	/^  int reg_in_table;$/;"	m	struct:cse_reg_info
reg_info_data	regclass.c	/^struct reg_info_data {$/;"	s	file:
reg_info_head	regclass.c	/^static struct reg_info_data *reg_info_head;$/;"	v	file:
reg_is_born	local-alloc.c	/^reg_is_born (reg, birth)$/;"	f	file:
reg_is_output_reload	reload1.c	/^static HARD_REG_SET reg_is_output_reload;$/;"	v	file:
reg_is_remote_constant_p	regmove.c	/^reg_is_remote_constant_p (reg, insn, first)$/;"	f	file:
reg_is_set	local-alloc.c	/^reg_is_set (reg, setter)$/;"	f	file:
reg_iv_info	loop.c	/^varray_type reg_iv_info;$/;"	v
reg_iv_type	loop.c	/^varray_type reg_iv_type;$/;"	v
reg_key	prefix.c	/^static HKEY reg_key = (HKEY) INVALID_HANDLE_VALUE;$/;"	v	file:
reg_known_equiv_p	alias.c	/^char *reg_known_equiv_p;$/;"	v
reg_known_value	alias.c	/^rtx *reg_known_value;$/;"	v
reg_known_value_size	alias.c	/^static int reg_known_value_size;$/;"	v	file:
reg_last_clobbers	haifa-sched.c	/^static rtx *reg_last_clobbers;$/;"	v	file:
reg_last_death	combine.c	/^static rtx *reg_last_death;$/;"	v	file:
reg_last_reload_reg	reload1.c	/^static rtx *reg_last_reload_reg;$/;"	v	file:
reg_last_set	combine.c	/^static rtx *reg_last_set;$/;"	v	file:
reg_last_set	gcse.c	/^static int *reg_last_set;$/;"	v	file:
reg_last_set_invalid	combine.c	/^static char *reg_last_set_invalid;$/;"	v	file:
reg_last_set_label	combine.c	/^static int *reg_last_set_label;$/;"	v	file:
reg_last_set_mode	combine.c	/^static enum machine_mode *reg_last_set_mode;$/;"	v	file:
reg_last_set_nonzero_bits	combine.c	/^static unsigned HOST_WIDE_INT *reg_last_set_nonzero_bits;$/;"	v	file:
reg_last_set_sign_bit_copies	combine.c	/^static char *reg_last_set_sign_bit_copies;$/;"	v	file:
reg_last_set_table_tick	combine.c	/^static int *reg_last_set_table_tick;$/;"	v	file:
reg_last_set_value	combine.c	/^static rtx *reg_last_set_value;$/;"	v	file:
reg_last_sets	haifa-sched.c	/^static rtx *reg_last_sets;$/;"	v	file:
reg_last_sets	sched.c	/^static rtx *reg_last_sets;$/;"	v	file:
reg_last_uses	haifa-sched.c	/^static rtx *reg_last_uses;$/;"	v	file:
reg_last_uses	sched.c	/^static rtx *reg_last_uses;$/;"	v	file:
reg_loc_descriptor	dwarf2out.c	/^reg_loc_descriptor (rtl)$/;"	f	file:
reg_map	integrate.c	/^static rtx *reg_map;$/;"	v	file:
reg_max_ref_width	reload1.c	/^static int *reg_max_ref_width;$/;"	v	file:
reg_may_share	global.c	/^static int *reg_may_share;$/;"	v	file:
reg_meets_class_p	local-alloc.c	/^reg_meets_class_p (reg, class)$/;"	f	file:
reg_mentioned_p	rtlanal.c	/^reg_mentioned_p (reg, in)$/;"	f
reg_mode	reload1.c	/^static enum machine_mode reg_mode[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_n_info	flow.c	/^varray_type reg_n_info;$/;"	v
reg_n_max	flow.c	/^unsigned int reg_n_max;$/;"	v
reg_names	print-rtl.c	/^static char *reg_names[] = DEBUG_REGISTER_NAMES;$/;"	v	file:
reg_names	print-rtl.c	/^static char *reg_names[] = REGISTER_NAMES;$/;"	v	file:
reg_names	regclass.c	/^char *reg_names[] = REGISTER_NAMES;$/;"	v
reg_next_eqv	cse.c	/^static int *reg_next_eqv;$/;"	v	file:
reg_next_in_qty	local-alloc.c	/^static int *reg_next_in_qty;$/;"	v	file:
reg_next_use	flow.c	/^static rtx *reg_next_use;$/;"	v	file:
reg_nonzero_bits	combine.c	/^static unsigned HOST_WIDE_INT *reg_nonzero_bits;$/;"	v	file:
reg_note_name	rtl.c	/^char *reg_note_name[] = { "", "REG_DEAD", "REG_INC", "REG_EQUIV", "REG_WAS_0",$/;"	v
reg_number	dwarf2out.c	/^reg_number (rtl)$/;"	f	file:
reg_offset	local-alloc.c	/^static char *reg_offset;$/;"	v	file:
reg_offset	reload1.c	/^static rtx reg_offset[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_old_renumber	reload1.c	/^static short *reg_old_renumber;$/;"	v	file:
reg_order	stupid.c	/^static int *reg_order;$/;"	v	file:
reg_overlap_mentioned_for_reload_p	reload.c	/^reg_overlap_mentioned_for_reload_p (x, in)$/;"	f
reg_overlap_mentioned_p	rtlanal.c	/^reg_overlap_mentioned_p (x, in)$/;"	f
reg_pending_clobbers	haifa-sched.c	/^static regset reg_pending_clobbers;$/;"	v	file:
reg_pending_sets	haifa-sched.c	/^static regset reg_pending_sets;$/;"	v	file:
reg_pending_sets	sched.c	/^static regset reg_pending_sets;$/;"	v	file:
reg_pending_sets_all	haifa-sched.c	/^static int reg_pending_sets_all;$/;"	v	file:
reg_pending_sets_all	sched.c	/^static int reg_pending_sets_all;$/;"	v	file:
reg_preferred_class	regclass.c	/^reg_preferred_class (regno)$/;"	f
reg_prev_eqv	cse.c	/^static int *reg_prev_eqv;$/;"	v	file:
reg_qty	cse.c	/^  int reg_qty;$/;"	m	struct:cse_reg_info
reg_qty	local-alloc.c	/^static int *reg_qty;$/;"	v	file:
reg_raw_mode	regclass.c	/^enum machine_mode reg_raw_mode[FIRST_PSEUDO_REGISTER];$/;"	v
reg_referenced_between_p	rtlanal.c	/^reg_referenced_between_p (reg, from_insn, to_insn)$/;"	f
reg_referenced_p	rtlanal.c	/^reg_referenced_p (x, body)$/;"	f
reg_reloaded_contents	reload1.c	/^static int reg_reloaded_contents[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_reloaded_dead	reload1.c	/^static HARD_REG_SET reg_reloaded_dead;$/;"	v	file:
reg_reloaded_insn	reload1.c	/^static rtx reg_reloaded_insn[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_reloaded_valid	reload1.c	/^static HARD_REG_SET reg_reloaded_valid;$/;"	v	file:
reg_renumber	local-alloc.c	/^short *reg_renumber;$/;"	v
reg_restore_code	caller-save.c	/^  reg_restore_code[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	file:
reg_rtx	gcse.c	/^  rtx reg_rtx;$/;"	m	struct:reg_use
reg_rtx_no	emit-rtl.c	/^int reg_rtx_no = LAST_VIRTUAL_REGISTER + 1;$/;"	v
reg_save	dwarf2out.c	/^reg_save (label, reg, sreg, offset)$/;"	f	file:
reg_save_code	caller-save.c	/^  reg_save_code[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	file:
reg_scan	regclass.c	/^reg_scan (f, nregs, repeat)$/;"	f
reg_scan_mark_refs	regclass.c	/^reg_scan_mark_refs (x, insn, note_flag, min_regno)$/;"	f	file:
reg_scan_update	regclass.c	/^reg_scan_update(first, last, old_max_regno)$/;"	f
reg_seen	alias.c	/^static char *reg_seen;$/;"	v	file:
reg_set	gcse.c	/^typedef struct reg_set {$/;"	s	file:
reg_set	gcse.c	/^} reg_set;$/;"	t	file:
reg_set	reg-stack.c	/^  HARD_REG_SET reg_set;		\/* set of live registers *\/$/;"	m	struct:stack_def
reg_set_between_p	rtlanal.c	/^reg_set_between_p (reg, from_insn, to_insn)$/;"	f
reg_set_bitmap	gcse.c	/^static sbitmap reg_set_bitmap;$/;"	v	file:
reg_set_flag	rtlanal.c	/^static int reg_set_flag;$/;"	v	file:
reg_set_in_block	gcse.c	/^static sbitmap *reg_set_in_block;$/;"	v	file:
reg_set_last	rtlanal.c	/^reg_set_last (x, insn)$/;"	f
reg_set_last_1	rtlanal.c	/^reg_set_last_1 (x, pat)$/;"	f	file:
reg_set_last_first_regno	rtlanal.c	/^static int reg_set_last_first_regno, reg_set_last_last_regno;$/;"	v	file:
reg_set_last_last_regno	rtlanal.c	/^static int reg_set_last_first_regno, reg_set_last_last_regno;$/;"	v	file:
reg_set_last_unknown	rtlanal.c	/^static int reg_set_last_unknown;$/;"	v	file:
reg_set_last_value	rtlanal.c	/^static rtx reg_set_last_value;$/;"	v	file:
reg_set_luid	reload1.c	/^static int reg_set_luid[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_set_obstack	gcse.c	/^static struct obstack reg_set_obstack;$/;"	v	file:
reg_set_p	rtlanal.c	/^reg_set_p (reg, insn)$/;"	f
reg_set_p_1	rtlanal.c	/^reg_set_p_1 (x, pat)$/;"	f	file:
reg_set_reg	rtlanal.c	/^static rtx reg_set_reg;$/;"	v	file:
reg_set_table	gcse.c	/^static reg_set **reg_set_table;$/;"	v	file:
reg_set_table_size	gcse.c	/^static int reg_set_table_size;$/;"	v	file:
reg_sign_bit_copies	combine.c	/^static char *reg_sign_bit_copies;$/;"	v	file:
reg_single_usage	loop.c	/^static varray_type reg_single_usage;$/;"	v	file:
reg_size_range	dwarf2out.c	/^struct reg_size_range$/;"	s	file:
reg_state	reload1.c	/^  } reg_state[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_tick	cse.c	/^    int reg_tick;$/;"	m	union:cse_reg_info::<anonymous>
reg_to_stack	reg-stack.c	/^reg_to_stack (first, file)$/;"	f
reg_use	gcse.c	/^struct reg_use {$/;"	s	file:
reg_use	reload1.c	/^    struct reg_use reg_use[RELOAD_COMBINE_MAX_USES];$/;"	m	struct:
reg_use	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	s	file:
reg_use_count	gcse.c	/^static int reg_use_count;$/;"	v	file:
reg_use_table	gcse.c	/^static struct reg_use reg_use_table[MAX_USES];$/;"	v	file:
reg_used_between_p	rtlanal.c	/^reg_used_between_p (reg, from_insn, to_insn)$/;"	f
reg_used_in_insn	reload1.c	/^static HARD_REG_SET reg_used_in_insn;$/;"	v	file:
reg_values	reload1.c	/^static rtx *reg_values;$/;"	v	file:
reg_where_born_clobber	stupid.c	/^static int *reg_where_born_clobber;$/;"	v	file:
reg_where_born_exact	stupid.c	/^static int *reg_where_born_exact;$/;"	v	file:
reg_where_dead	stupid.c	/^static int *reg_where_dead;$/;"	v	file:
reg_where_dead_chain	stupid.c	/^static struct insn_chain **reg_where_dead_chain;$/;"	v	file:
regclass	regclass.c	/^regclass (f, nregs)$/;"	f
regclass_compatible_p	regmove.c	/^regclass_compatible_p (class0, class1)$/;"	f	file:
regclass_init	regclass.c	/^regclass_init ()$/;"	f
region	collect2.c	/^  region_command_t		region;	\/* region load command *\/$/;"	m	union:load_union
region	haifa-sched.c	/^region;$/;"	t	file:
register_constraint_flag	genconfig.c	/^static int register_constraint_flag;$/;"	v	file:
register_constraints	genemit.c	/^static int register_constraints;$/;"	v	file:
register_operand	recog.c	/^register_operand (op, mode)$/;"	f
regmove_bb_head	regmove.c	/^static int *regmove_bb_head;$/;"	v	file:
regmove_dump	toplev.c	/^int regmove_dump = 0;$/;"	v
regmove_optimize	regmove.c	/^regmove_optimize (f, nregs, regmove_dump_file)$/;"	f
regmove_profitable_p	regmove.c	/^regmove_profitable_p ()$/;"	f
regmove_time	toplev.c	/^int regmove_time;$/;"	v
regno	haifa-sched.c	/^    int regno;$/;"	m	struct:sometimes
regno	loop.c	/^  int regno;			\/* The register it sets *\/$/;"	m	struct:movable
regno	reload1.c	/^  int regno;$/;"	m	struct:hard_reg_n_uses
regno	sched.c	/^  int regno;$/;"	m	struct:sometimes
regno_allocated	regclass.c	/^static size_t regno_allocated = 0;$/;"	v	file:
regno_clobbered_at_setjmp	flow.c	/^regno_clobbered_at_setjmp (regno)$/;"	f
regno_clobbered_p	reload.c	/^regno_clobbered_p (regno, insn)$/;"	f
regno_pointer_align	emit-rtl.c	/^char *regno_pointer_align;$/;"	v
regno_pointer_flag	emit-rtl.c	/^char *regno_pointer_flag;$/;"	v
regno_pointer_flag_length	emit-rtl.c	/^int regno_pointer_flag_length;$/;"	v
regno_reg_rtx	emit-rtl.c	/^rtx *regno_reg_rtx;$/;"	v
regno_save_mem	caller-save.c	/^  regno_save_mem[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	file:
regno_save_mode	caller-save.c	/^  regno_save_mode[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	file:
regno_src_regno	regmove.c	/^static int *regno_src_regno;$/;"	v	file:
regno_uninitialized	flow.c	/^regno_uninitialized (regno)$/;"	f
regno_use_in	rtlanal.c	/^regno_use_in (regno, x)$/;"	f
regs_change_size	stupid.c	/^static char *regs_change_size;$/;"	v	file:
regs_crosses_setjmp	stupid.c	/^static char *regs_crosses_setjmp;$/;"	v	file:
regs_ever_live	final.c	/^char regs_ever_live[FIRST_PSEUDO_REGISTER];$/;"	v
regs_invalidated_by_call	cse.c	/^static HARD_REG_SET regs_invalidated_by_call;$/;"	v	file:
regs_live	local-alloc.c	/^static HARD_REG_SET regs_live;$/;"	v	file:
regs_live	stupid.c	/^static char *regs_live;$/;"	v	file:
regs_live_at	local-alloc.c	/^static HARD_REG_SET *regs_live_at;$/;"	v	file:
regs_live_at_setjmp	flow.c	/^regset regs_live_at_setjmp;$/;"	v
regs_match_p	loop.c	/^regs_match_p (x, y, movables)$/;"	f	file:
regs_may_share	flow.c	/^rtx regs_may_share;$/;"	v
regs_set	global.c	/^static rtx *regs_set;$/;"	v	file:
regs_set_between_p	rtlanal.c	/^regs_set_between_p (x, start, end)$/;"	f
regs_someone_prefers	global.c	/^static HARD_REG_SET *regs_someone_prefers;$/;"	v	file:
regs_used_so_far	global.c	/^static HARD_REG_SET regs_used_so_far;$/;"	v	file:
regset_bytes	flow.c	/^int regset_bytes;$/;"	v
regset_release_memory	regclass.c	/^regset_release_memory ()$/;"	f
regset_size	flow.c	/^int regset_size;$/;"	v
rehash_using_reg	cse.c	/^rehash_using_reg (x)$/;"	f	file:
reinit_parse_for_function	c-lex.c	/^reinit_parse_for_function ()$/;"	f
related_value	cse.c	/^  struct table_elt *related_value;$/;"	m	struct:table_elt
relax_delay_slots	reorg.c	/^relax_delay_slots (first)$/;"	f	file:
reload	reload1.c	/^reload (first, global, dumpfile)$/;"	f
reload_as_needed	reload1.c	/^reload_as_needed (live_known)$/;"	f	file:
reload_combine	reload1.c	/^reload_combine ()$/;"	f	file:
reload_combine_note_store	reload1.c	/^reload_combine_note_store (dst, set)$/;"	f	file:
reload_combine_note_use	reload1.c	/^reload_combine_note_use (xp, insn)$/;"	f	file:
reload_combine_ruid	reload1.c	/^static int reload_combine_ruid;$/;"	v	file:
reload_completed	genattrtab.c	/^int reload_completed = 0;$/;"	v
reload_completed	recog.c	/^int reload_completed;$/;"	v
reload_cse_check_clobber	reload1.c	/^reload_cse_check_clobber (dest, ignore)$/;"	f	file:
reload_cse_check_clobbered	reload1.c	/^static int reload_cse_check_clobbered;$/;"	v	file:
reload_cse_check_src	reload1.c	/^static rtx reload_cse_check_src;$/;"	v	file:
reload_cse_invalidate_mem	reload1.c	/^reload_cse_invalidate_mem (mem_rtx)$/;"	f	file:
reload_cse_invalidate_regno	reload1.c	/^reload_cse_invalidate_regno (regno, mode, clobber)$/;"	f	file:
reload_cse_invalidate_rtx	reload1.c	/^reload_cse_invalidate_rtx (dest, ignore)$/;"	f	file:
reload_cse_mem_conflict_p	reload1.c	/^reload_cse_mem_conflict_p (mem_base, val)$/;"	f	file:
reload_cse_move2add	reload1.c	/^reload_cse_move2add (first)$/;"	f	file:
reload_cse_noop_set_p	reload1.c	/^reload_cse_noop_set_p (set, insn)$/;"	f	file:
reload_cse_record_set	reload1.c	/^reload_cse_record_set (set, body)$/;"	f	file:
reload_cse_regno_equal_p	reload1.c	/^reload_cse_regno_equal_p (regno, val, mode)$/;"	f	file:
reload_cse_regs	reload1.c	/^reload_cse_regs (first)$/;"	f
reload_cse_regs_1	reload1.c	/^reload_cse_regs_1 (first)$/;"	f	file:
reload_cse_simplify_operands	reload1.c	/^reload_cse_simplify_operands (insn)$/;"	f	file:
reload_cse_simplify_set	reload1.c	/^reload_cse_simplify_set (set, insn)$/;"	f	file:
reload_earlyclobbers	reload.c	/^rtx reload_earlyclobbers[MAX_RECOG_OPERANDS];$/;"	v
reload_first_uid	reload1.c	/^int reload_first_uid;$/;"	v
reload_firstobj	reload1.c	/^char *reload_firstobj;$/;"	v
reload_in	reload.c	/^rtx reload_in[MAX_RELOADS];$/;"	v
reload_in_optab	reload1.c	/^enum insn_code reload_in_optab[NUM_MACHINE_MODES];$/;"	v
reload_in_progress	reload1.c	/^int reload_in_progress = 0;$/;"	v
reload_in_reg	reload.c	/^rtx reload_in_reg[MAX_RELOADS];$/;"	v
reload_inc	reload.c	/^int reload_inc[MAX_RELOADS];$/;"	v
reload_inheritance_insn	reload1.c	/^rtx reload_inheritance_insn[MAX_RELOADS];$/;"	v
reload_inherited	reload1.c	/^char reload_inherited[MAX_RELOADS];$/;"	v
reload_inmode	reload.c	/^enum machine_mode reload_inmode[MAX_RELOADS];$/;"	v
reload_insn_chain	reload1.c	/^struct insn_chain *reload_insn_chain;$/;"	v
reload_mode	reload1.c	/^static enum machine_mode reload_mode[MAX_RELOADS];$/;"	v	file:
reload_n_operands	reload.c	/^int reload_n_operands;$/;"	v
reload_nocombine	reload.c	/^char reload_nocombine[MAX_RELOADS];$/;"	v
reload_nongroup	reload.c	/^char reload_nongroup[MAX_RELOADS];$/;"	v
reload_nregs	reload1.c	/^static int reload_nregs[MAX_RELOADS];$/;"	v	file:
reload_obstack	reload1.c	/^struct obstack reload_obstack;$/;"	v
reload_opnum	reload.c	/^int reload_opnum[MAX_RELOADS];$/;"	v
reload_optional	reload.c	/^char reload_optional[MAX_RELOADS];$/;"	v
reload_order	reload1.c	/^short reload_order[MAX_RELOADS];$/;"	v
reload_out	reload.c	/^rtx reload_out[MAX_RELOADS];$/;"	v
reload_out_optab	reload1.c	/^enum insn_code reload_out_optab[NUM_MACHINE_MODES];$/;"	v
reload_out_reg	reload.c	/^rtx reload_out_reg[MAX_RELOADS];$/;"	v
reload_outmode	reload.c	/^enum machine_mode reload_outmode[MAX_RELOADS];$/;"	v
reload_override_in	reload1.c	/^rtx reload_override_in[MAX_RELOADS];$/;"	v
reload_reg_class	reload.c	/^enum reg_class reload_reg_class[MAX_RELOADS];$/;"	v
reload_reg_class_lower	reload1.c	/^reload_reg_class_lower (r1p, r2p)$/;"	f	file:
reload_reg_free_for_value_p	reload1.c	/^reload_reg_free_for_value_p (regno, opnum, type, value, out, reloadnum,$/;"	f	file:
reload_reg_free_p	reload1.c	/^reload_reg_free_p (regno, opnum, type)$/;"	f	file:
reload_reg_reaches_end_p	reload1.c	/^reload_reg_reaches_end_p (regno, opnum, type)$/;"	f	file:
reload_reg_rtx	reload.c	/^rtx reload_reg_rtx[MAX_RELOADS];$/;"	v
reload_reg_used	reload1.c	/^static HARD_REG_SET reload_reg_used;$/;"	v	file:
reload_reg_used_at_all	reload1.c	/^static HARD_REG_SET reload_reg_used_at_all;$/;"	v	file:
reload_reg_used_for_inherit	reload1.c	/^static HARD_REG_SET reload_reg_used_for_inherit;$/;"	v	file:
reload_reg_used_in_inpaddr_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_inpaddr_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_input	reload1.c	/^static HARD_REG_SET reload_reg_used_in_input[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_input_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_input_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_insn	reload1.c	/^static HARD_REG_SET reload_reg_used_in_insn;$/;"	v	file:
reload_reg_used_in_op_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_op_addr;$/;"	v	file:
reload_reg_used_in_op_addr_reload	reload1.c	/^static HARD_REG_SET reload_reg_used_in_op_addr_reload;$/;"	v	file:
reload_reg_used_in_other_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_other_addr;$/;"	v	file:
reload_reg_used_in_outaddr_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_outaddr_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_output	reload1.c	/^static HARD_REG_SET reload_reg_used_in_output[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_output_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_output_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_secondary_in_icode	reload.c	/^enum insn_code reload_secondary_in_icode[MAX_RELOADS];$/;"	v
reload_secondary_in_reload	reload.c	/^int reload_secondary_in_reload[MAX_RELOADS];$/;"	v
reload_secondary_out_icode	reload.c	/^enum insn_code reload_secondary_out_icode[MAX_RELOADS];$/;"	v
reload_secondary_out_reload	reload.c	/^int reload_secondary_out_reload[MAX_RELOADS];$/;"	v
reload_secondary_p	reload.c	/^int reload_secondary_p[MAX_RELOADS];$/;"	v
reload_spill_index	reload1.c	/^int reload_spill_index[MAX_RELOADS];$/;"	v
reload_startobj	reload1.c	/^char *reload_startobj;$/;"	v
reload_when_needed	reload.c	/^enum reload_type reload_when_needed[MAX_RELOADS];$/;"	v
reload_when_needed_name	reload.c	/^static char *reload_when_needed_name[] =$/;"	v	file:
reloads_conflict	reload1.c	/^reloads_conflict (r1, r2)$/;"	f
reloc	collect2.c	/^  reloc_command_t		reloc;	\/* relocation section *\/$/;"	m	union:load_union
reloc	varasm.c	/^  int reloc;$/;"	m	struct:deferred_constant
remap	cccp.c	/^static int remap;$/;"	v	file:
remap_filename	cppfiles.c	/^remap_filename (pfile, name, loc)$/;"	f	file:
remap_include_file	cccp.c	/^remap_include_file (filename, searchptr)$/;"	f	file:
remap_split_bivs	unroll.c	/^remap_split_bivs (x)$/;"	f	file:
remember_end_note	stmt.c	/^remember_end_note (block)$/;"	f
remember_protocol_qualifiers	c-lex.c	/^remember_protocol_qualifiers ()$/;"	f
remove_AT	dwarf2out.c	/^remove_AT (die, attr_kind)$/;"	f	file:
remove_address_replacements	reload.c	/^remove_address_replacements (in_rtx)$/;"	f
remove_children	dwarf2out.c	/^remove_children (die)$/;"	f	file:
remove_death	combine.c	/^remove_death (regno, insn)$/;"	f
remove_dependence	haifa-sched.c	/^remove_dependence (insn, elem)$/;"	f	file:
remove_dependence	sched.c	/^remove_dependence (insn, elem)$/;"	f	file:
remove_from_pending_weak_list	varasm.c	/^remove_from_pending_weak_list (name)$/;"	f	file:
remove_from_table	cse.c	/^remove_from_table (elt, hash)$/;"	f	file:
remove_handler	except.c	/^void remove_handler (removing_label)$/;"	f
remove_insn	emit-rtl.c	/^remove_insn (insn)$/;"	f
remove_insn_ent	genattrtab.c	/^remove_insn_ent (av, ie)$/;"	f	file:
remove_invalid_refs	cse.c	/^remove_invalid_refs (regno)$/;"	f	file:
remove_invalid_subreg_refs	cse.c	/^remove_invalid_subreg_refs (regno, word, mode)$/;"	f	file:
remove_node_from_expr_list	rtlanal.c	/^remove_node_from_expr_list (node, listp)$/;"	f
remove_note	rtlanal.c	/^remove_note (insn, note)$/;"	f
remove_regno_note	reg-stack.c	/^remove_regno_note (insn, note, regno)$/;"	f	file:
rename_c_file	protoize.c	/^rename_c_file (hp)$/;"	f	file:
rename_output	mips-tfile.c	/^static int	rename_output	= 0;		\/* != 0 if rename output file*\/$/;"	v	file:
renumber	regclass.c	/^static short *renumber = (short *)0;$/;"	v	file:
reorder_blocks	function.c	/^reorder_blocks (block_vector, block, insns)$/;"	f
reorder_insns	emit-rtl.c	/^reorder_insns (from, to, after)$/;"	f
reorder_insns_with_line_notes	emit-rtl.c	/^reorder_insns_with_line_notes (from, to, after)$/;"	f
reorg_pass_number	reorg.c	/^static int reorg_pass_number;$/;"	v	file:
reorg_redirect_jump	reorg.c	/^reorg_redirect_jump (jump, nlabel)$/;"	f	file:
repl_text_base	protoize.c	/^static char *repl_text_base;$/;"	v	file:
repl_text_limit	protoize.c	/^static char *repl_text_limit;$/;"	v	file:
repl_write_ptr	protoize.c	/^static char * repl_write_ptr;$/;"	v	file:
replace_label	loop.c	/^replace_label (x, data)$/;"	f	file:
replace_loop_mem	loop.c	/^replace_loop_mem (mem, data)$/;"	f	file:
replace_reg	reg-stack.c	/^replace_reg (reg, regno)$/;"	f	file:
replace_regs	rtlanal.c	/^replace_regs (x, reg_map, nregs, replace_dest)$/;"	f
replace_reloads	reload.c	/^static int replace_reloads;$/;"	v	file:
replace_rtx	rtlanal.c	/^replace_rtx (x, from, to)$/;"	f
replacement	reload.c	/^struct replacement$/;"	s	file:
replacement_quality	regmove.c	/^replacement_quality(reg)$/;"	f
replacement_value	c-typeck.c	/^  tree replacement_value;$/;"	m	struct:constructor_stack
replacements	reload.c	/^static struct replacement replacements[MAX_RECOG_OPERANDS * ((MAX_REGS_PER_ADDRESS * 2) + 1)];$/;"	v	file:
report_error_function	toplev.c	/^report_error_function (file)$/;"	f
report_file_and_line	toplev.c	/^report_file_and_line (file, line, warn)$/;"	f	file:
reported	libgcc2.c	/^static int reported = 0;$/;"	v	file:
reposition_prologue_and_epilogue_notes	function.c	/^reposition_prologue_and_epilogue_notes (f)$/;"	f
require_complete_type	c-typeck.c	/^require_complete_type (value)$/;"	f
require_constant_elements	c-typeck.c	/^  char require_constant_elements;$/;"	m	struct:initializer_stack
require_constant_elements	c-typeck.c	/^static int require_constant_elements;$/;"	v	file:
require_constant_value	c-typeck.c	/^  char require_constant_value;$/;"	m	struct:initializer_stack
require_constant_value	c-typeck.c	/^static int require_constant_value;$/;"	v	file:
require_machine_suffix	gcc.c	/^  int require_machine_suffix; \/* Don't use without machine_suffix.  *\/$/;"	m	struct:prefix_list
required_dummy_proto	fix-header.c	/^struct partial_proto required_dummy_proto, seen_dummy_proto;$/;"	v
required_other	fix-header.c	/^int required_other = 0;$/;"	v
required_unseen_count	fix-header.c	/^int required_unseen_count = 0;$/;"	v
requires_inout	local-alloc.c	/^requires_inout (p)$/;"	f	file:
rescan	cccp.c	/^rescan (op, output_marks)$/;"	f	file:
reset_opr_set_tables	gcse.c	/^reset_opr_set_tables ()$/;"	f	file:
reset_used_flags	emit-rtl.c	/^reset_used_flags (x)$/;"	f
resolve_lib_name	collect2.c	/^resolve_lib_name (name)$/;"	f	file:
resource_conflicts_p	reorg.c	/^resource_conflicts_p (res1, res2)$/;"	f	file:
rest_args	cccp.c	/^    char rest_args;		\/* Nonzero if this arg. absorbs the rest *\/$/;"	m	struct:definition::reflist
rest_args	cccp.c	/^  char rest_args;		\/* Nonzero if last arg. absorbs the rest *\/$/;"	m	struct:definition
rest_args	cccp.c	/^  char rest_args;$/;"	m	struct:arglist
rest_args	cpphash.c	/^  char rest_args;$/;"	m	struct:arglist
rest_extension	cccp.c	/^static char rest_extension[] = "...";$/;"	v	file:
rest_extension	cpphash.c	/^static char rest_extension[] = "...";$/;"	v	file:
rest_of_compilation	toplev.c	/^rest_of_compilation (decl)$/;"	f
rest_of_decl_compilation	toplev.c	/^rest_of_decl_compilation (decl, asmspec, top_level, at_end)$/;"	f
rest_of_type_compilation	toplev.c	/^rest_of_type_compilation (type, toplev)$/;"	f
restore_constants	integrate.c	/^restore_constants (px)$/;"	f	file:
restore_eh_status	except.c	/^restore_eh_status (p)$/;"	f
restore_emit_status	emit-rtl.c	/^restore_emit_status (p)$/;"	f
restore_expr_status	expr.c	/^restore_expr_status (p)$/;"	f
restore_fixed_argument_area	calls.c	/^restore_fixed_argument_area (save_area, argblock, high_to_save, low_to_save)$/;"	f	file:
restore_line_notes	haifa-sched.c	/^restore_line_notes (bb)$/;"	f	file:
restore_line_number_status	emit-rtl.c	/^restore_line_number_status (old_value)$/;"	f
restore_machine_status	function.c	/^void (*restore_machine_status) PROTO((struct function *));$/;"	v
restore_pointers	protoize.c	/^restore_pointers ()$/;"	f
restore_stmt_status	stmt.c	/^restore_stmt_status (p)$/;"	f
restore_storage_status	stor-layout.c	/^restore_storage_status (p)$/;"	f
restore_tree_status	tree.c	/^restore_tree_status (p, context)$/;"	f
restore_varasm_status	varasm.c	/^restore_varasm_status (p)$/;"	f
result_vector	expr.c	/^result_vector (savep, result)$/;"	f	file:
resume_momentary	tree.c	/^resume_momentary (yes)$/;"	f
resume_temporary_allocation	tree.c	/^resume_temporary_allocation ()$/;"	f
retest_code	genrecog.c	/^  char retest_code, retest_mode; \/* See write_tree_1 *\/$/;"	m	struct:decision
retest_mode	genrecog.c	/^  char retest_code, retest_mode; \/* See write_tree_1 *\/$/;"	m	struct:decision
rethrow_label	except.c	/^  rtx rethrow_label;  \/* Label for rethrow *\/$/;"	m	struct:func_eh_entry
rethrow_libfunc	optabs.c	/^rtx rethrow_libfunc;$/;"	v
rethrow_symbol_map	except.c	/^rethrow_symbol_map (sym, map)$/;"	f
rethrow_used	except.c	/^rethrow_used (region)$/;"	f
retry_global_alloc	global.c	/^retry_global_alloc (regno, forbidden_regs)$/;"	f
retry_incomplete_types	dwarf2out.c	/^retry_incomplete_types ()$/;"	f	file:
retry_incomplete_types	dwarfout.c	/^retry_incomplete_types ()$/;"	f	file:
return_address_pointer_rtx	emit-rtl.c	/^rtx return_address_pointer_rtx;	\/* (REG:Pmode RETURN_ADDRESS_POINTER_REGNUM) *\/$/;"	v
return_label	function.c	/^rtx return_label;$/;"	v
return_label_execution_count	profile.c	/^int return_label_execution_count;$/;"	v
returnjump_p	jump.c	/^returnjump_p (insn)$/;"	f
returnjump_p_1	jump.c	/^returnjump_p_1 (loc, data)$/;"	f	file:
returns_null	c-decl.c	/^  int returns_null;$/;"	m	struct:c_function
returns_value	c-decl.c	/^  int returns_value;$/;"	m	struct:c_function
reverse	expr.c	/^  int reverse;$/;"	m	struct:clear_by_pieces
reverse	expr.c	/^  int reverse;$/;"	m	struct:move_by_pieces
reverse_arcs	gcov.c	/^reverse_arcs (arcptr)$/;"	f	file:
reverse_comparison	emit-rtl.c	/^reverse_comparison (insn)$/;"	f
reverse_condition	jump.c	/^reverse_condition (code)$/;"	f
reverse_def_dec_list	protoize.c	/^reverse_def_dec_list (hp)$/;"	f	file:
reversible_comparison_p	combine.c	/^reversible_comparison_p (x)$/;"	f	file:
rfile_desc	mips-tdump.c	/^ulong	*rfile_desc;		\/* relative file tables *\/$/;"	v
rflag	collect2.c	/^static int rflag;			\/* true if -r *\/$/;"	v	file:
rgn_bb_table	haifa-sched.c	/^static int *rgn_bb_table;$/;"	v	file:
rgn_blocks	haifa-sched.c	/^    int rgn_blocks;		\/* blocks in the region (actually index in rgn_bb_table) *\/$/;"	m	struct:
rgn_edges	haifa-sched.c	/^static int *rgn_edges;$/;"	v	file:
rgn_nr_blocks	haifa-sched.c	/^    int rgn_nr_blocks;		\/* number of blocks in region *\/$/;"	m	struct:
rgn_nr_edges	haifa-sched.c	/^static int rgn_nr_edges;$/;"	v	file:
rgn_table	haifa-sched.c	/^static region *rgn_table;$/;"	v	file:
ridpointers	c-lex.c	/^tree ridpointers[(int) RID_MAX];$/;"	v
right	c-typeck.c	/^  struct init_node *left, *right;$/;"	m	struct:init_node
right	stmt.c	/^  struct case_node	*right;	\/* Right son in binary tree; also node chain *\/$/;"	m	struct:case_node
right_shift	cexp.c	/^right_shift (a, b)$/;"	f	file:
right_shift	cppexp.c	/^right_shift (pfile, a, unsignedp, b)$/;"	f	file:
rindex	mips-tdump.c	28;"	d	file:
rindex	mips-tfile.c	665;"	d	file:
rlast	real.c	/^static int rlast = -1;$/;"	v	file:
rm_line_notes	haifa-sched.c	/^rm_line_notes (bb)$/;"	f	file:
rm_other_notes	haifa-sched.c	/^rm_other_notes (head, tail)$/;"	f	file:
rm_redundant_line_notes	haifa-sched.c	/^rm_redundant_line_notes ()$/;"	f	file:
rmbit	real.c	/^static unsigned EMUSHORT rmbit = 0;$/;"	v	file:
rmsk	real.c	/^static unsigned EMUSHORT rmsk = 0;$/;"	v	file:
rndprc	real.c	/^int rndprc = NBITS;$/;"	v
root	tlink.c	/^  struct hash_entry root;$/;"	m	struct:demangled_hash_entry
root	tlink.c	/^  struct hash_entry root;$/;"	m	struct:file_hash_entry
root	tlink.c	/^  struct hash_entry root;$/;"	m	struct:symbol_hash_entry
root_type	dwarf2out.c	/^root_type (type)$/;"	f	file:
root_type	dwarfout.c	/^root_type (type)$/;"	f	file:
root_type_1	dwarfout.c	/^root_type_1 (type, count)$/;"	f	file:
rotl_optab	optabs.c	/^optab rotl_optab;$/;"	v
rotr_optab	optabs.c	/^optab rotr_optab;$/;"	v
round_down	function.c	/^round_down (value, divisor)$/;"	f	file:
round_push	explow.c	/^round_push (size)$/;"	f
round_trampoline_addr	function.c	/^round_trampoline_addr (tramp)$/;"	f	file:
round_up	stor-layout.c	/^round_up (value, divisor)$/;"	f
rounded_size	collect2.c	/^  long  rounded_size;			\/* size rounded to page boundary *\/$/;"	m	struct:file_info
routine_type	genrecog.c	/^enum routine_type {RECOG, SPLIT};$/;"	g	file:
rprio	cppexp.c	/^    char rprio; \/* Priority of op (relative to it right operand).  *\/$/;"	m	struct:operation
rrotate_double	fold-const.c	/^rrotate_double (l1, h1, count, prec, lv, hv)$/;"	f
rshift_double	fold-const.c	/^rshift_double (l1, h1, count, prec, lv, hv, arith)$/;"	f
rtl	cse.c	/^  rtx rtl;$/;"	m	struct:set
rtl	genattrtab.c	/^      rtx rtl;			\/* or the RTL recorded here.  *\/$/;"	m	union:attr_hash::<anonymous>
rtl	tree.c	/^  struct obstack *rtl;$/;"	m	struct:obstack_stack
rtl_dump	toplev.c	/^int rtl_dump = 0;$/;"	v
rtl_dump_and_exit	toplev.c	/^int rtl_dump_and_exit = 0;$/;"	v
rtl_dump_file	toplev.c	/^FILE *rtl_dump_file = NULL;$/;"	v
rtl_expr	function.c	/^  tree rtl_expr;$/;"	m	struct:temp_slot
rtl_expr_chain	function.c	/^tree rtl_expr_chain;$/;"	v
rtl_in_current_obstack	tree.c	/^rtl_in_current_obstack ()$/;"	f
rtl_in_saveable_obstack	tree.c	/^rtl_in_saveable_obstack ()$/;"	f
rtl_obstack	genattr.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genattrtab.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	gencodes.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genconfig.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genemit.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genextract.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genflags.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genopinit.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genoutput.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genpeep.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	genrecog.c	/^struct obstack *rtl_obstack = &obstack;$/;"	v
rtl_obstack	tree.c	/^struct obstack *rtl_obstack;$/;"	v
rtvec_alloc	rtl.c	/^rtvec_alloc (n)$/;"	f
rtx_addr_can_trap_p	rtlanal.c	/^rtx_addr_can_trap_p (x)$/;"	f	file:
rtx_addr_varies_p	rtlanal.c	/^rtx_addr_varies_p (x)$/;"	f
rtx_alloc	rtl.c	/^rtx_alloc (code)$/;"	f
rtx_and_int	loop.c	/^typedef struct rtx_and_int {$/;"	s	file:
rtx_and_int	loop.c	/^} rtx_and_int;$/;"	t	file:
rtx_class	rtl.c	/^char rtx_class[] = {$/;"	v
rtx_const	varasm.c	/^struct rtx_const$/;"	s	file:
rtx_cost	cse.c	/^rtx_cost (x, outer_code)$/;"	f
rtx_definition	gengenrtl.c	/^struct rtx_definition $/;"	s	file:
rtx_equal_for_field_assignment_p	combine.c	/^rtx_equal_for_field_assignment_p (x, y)$/;"	f	file:
rtx_equal_for_loop_p	loop.c	/^rtx_equal_for_loop_p (x, y, movables)$/;"	f	file:
rtx_equal_for_memref_p	alias.c	/^rtx_equal_for_memref_p (x, y)$/;"	f	file:
rtx_equal_for_thread_p	jump.c	/^rtx_equal_for_thread_p (x, y, yinsn)$/;"	f
rtx_equal_function_value_matters	rtlanal.c	/^int rtx_equal_function_value_matters;$/;"	v
rtx_equal_p	rtlanal.c	/^rtx_equal_p (x, y)$/;"	f
rtx_for_function_call	calls.c	/^rtx_for_function_call (fndecl, exp)$/;"	f	file:
rtx_format	rtl.c	/^char *rtx_format[] = {$/;"	v
rtx_free	rtl.c	/^rtx_free (x)$/;"	f
rtx_length	rtl.c	/^int rtx_length[NUM_RTX_CODE + 1];$/;"	v
rtx_name	rtl.c	/^char *rtx_name[] = {$/;"	v
rtx_pair	loop.c	/^typedef struct rtx_pair {$/;"	s	file:
rtx_pair	loop.c	/^} rtx_pair;$/;"	t	file:
rtx_renumbered_equal_p	jump.c	/^rtx_renumbered_equal_p (x, y)$/;"	f
rtx_to_tree_code	explow.c	/^rtx_to_tree_code (code)$/;"	f
rtx_unstable_p	rtlanal.c	/^rtx_unstable_p (x)$/;"	f
rtx_varies_p	rtlanal.c	/^rtx_varies_p (x)$/;"	f
rtype	fix-header.c	/^  char *rtype;	\/* return type *\/$/;"	m	struct:partial_proto
run_jump_opt_after_gcse	gcse.c	/^static int run_jump_opt_after_gcse;$/;"	v	file:
rw	collect2.c	/^  int	rw;				\/* != 0 if opened read\/write *\/$/;"	m	struct:file_info
rw	real.c	/^static int rw = 0;$/;"	v	file:
s	c-typeck.c	/^      const char *s;$/;"	m	union:spelling::<anonymous>
s	frame.c	/^  struct frame_state s;$/;"	m	struct:frame_state_internal
s	libgcc2.c	/^  struct DIstruct s;$/;"	m	union:
s_highpc	gmon.c	/^static char		*s_highpc = 0;$/;"	v	file:
s_kind	tree.c	/^  s_kind,$/;"	e	file:
s_lowpc	gmon.c	/^static char		*s_lowpc = 0;$/;"	v	file:
s_preds	gcse.c	/^static int_list_ptr *s_preds;$/;"	v	file:
s_scale	gmon.c	/^static int	s_scale;$/;"	v	file:
s_succs	gcse.c	/^static int_list_ptr *s_succs;$/;"	v	file:
s_textsize	gmon.c	/^static unsigned long	s_textsize = 0;$/;"	v	file:
saber_stop	mips-tfile.c	606;"	d	file:
saddr	frame.c	/^typedef          int  saddr __attribute__ ((mode (pointer)));$/;"	t	file:
safe	reload.c	/^  int safe;		\/* Nonzero if this can't conflict with anything.  *\/$/;"	m	struct:decomposition
safe_concat	haifa-sched.c	/^safe_concat (buf, cur, str)$/;"	f	file:
safe_from_earlyclobber	reload.c	/^safe_from_earlyclobber (op, clobber)$/;"	f
safe_from_p	expr.c	/^safe_from_p (x, exp, top_p)$/;"	f	file:
safe_hash	cse.c	/^safe_hash (x, mode)$/;"	f	file:
safe_read	cccp.c	/^safe_read (desc, ptr, len)$/;"	f	file:
safe_read	protoize.c	/^safe_read (desc, ptr, len)$/;"	f	file:
safe_write	cccp.c	/^safe_write (desc, ptr, len)$/;"	f	file:
safe_write	protoize.c	/^safe_write (desc, ptr, len, out_fname)$/;"	f	file:
same_block	mips-tfile.c	/^  struct tag	 *same_block;	\/* next tag defined in the same block.  *\/$/;"	m	struct:tag
same_codes	genrecog.c	/^same_codes (p, code)$/;"	f	file:
same_file	cccp.c	/^enum file_change_code {same_file, enter_file, leave_file};$/;"	e	file:	enum:file_change_code
same_modes	genrecog.c	/^same_modes (p, mode)$/;"	f	file:
same_name	mips-tfile.c	/^  struct tag	 *same_name;	\/* tag with same name in outer scope *\/$/;"	m	struct:tag
same_regs	jump.c	/^static int *same_regs;$/;"	v	file:
save_area	calls.c	/^  rtx save_area;$/;"	m	struct:arg_data
save_argc	toplev.c	/^int save_argc;$/;"	v
save_argv	toplev.c	/^char **save_argv;$/;"	v
save_call_clobbered_regs	caller-save.c	/^save_call_clobbered_regs ()$/;"	f
save_constants	integrate.c	/^save_constants (px)$/;"	f	file:
save_constants_in_decl_trees	integrate.c	/^save_constants_in_decl_trees (let)$/;"	f	file:
save_def_or_dec	protoize.c	/^save_def_or_dec (l, is_syscalls)$/;"	f	file:
save_eh_status	except.c	/^save_eh_status (p)$/;"	f
save_emit_status	emit-rtl.c	/^save_emit_status (p)$/;"	f
save_expr	tree.c	/^save_expr (expr)$/;"	f
save_expr_regs	function.c	/^rtx save_expr_regs;$/;"	v
save_expr_status	expr.c	/^save_expr_status (p)$/;"	f
save_exprs	c-iterate.c	/^static tree save_exprs;$/;"	v	file:
save_fixed_argument_area	calls.c	/^save_fixed_argument_area (reg_parm_stack_space, argblock,$/;"	f	file:
save_for_inline_copying	integrate.c	/^save_for_inline_copying (fndecl)$/;"	f
save_for_inline_eh_labelmap	integrate.c	/^save_for_inline_eh_labelmap (label)$/;"	f	file:
save_for_inline_nocopy	integrate.c	/^save_for_inline_nocopy (fndecl)$/;"	f
save_line_notes	haifa-sched.c	/^save_line_notes (bb)$/;"	f	file:
save_machine_status	function.c	/^void (*save_machine_status) PROTO((struct function *));$/;"	v
save_noncopied_parts	expr.c	/^save_noncopied_parts (lhs, list)$/;"	f	file:
save_pointers	protoize.c	/^save_pointers ()$/;"	f
save_stmt_status	stmt.c	/^save_stmt_status (p)$/;"	f
save_storage_status	stor-layout.c	/^save_storage_status (p)$/;"	f
save_string	gcc.c	/^save_string (s, len)$/;"	f	file:
save_string	prefix.c	/^save_string (s, len)$/;"	f	file:
save_suffix	protoize.c	/^static const char * const save_suffix = SAVE_SUFFIX;$/;"	v	file:
save_temps_flag	gcc.c	/^static int save_temps_flag;$/;"	v	file:
save_tree_status	tree.c	/^save_tree_status (p, context)$/;"	f
save_varasm_status	varasm.c	/^save_varasm_status (p, context)$/;"	f
saveable	tree.c	/^  struct obstack *saveable;$/;"	m	struct:obstack_stack
saveable_allocation	tree.c	/^saveable_allocation ()$/;"	f
saveable_obstack	tree.c	/^struct obstack *saveable_obstack;$/;"	v
saveable_tree_cons	tree.c	/^saveable_tree_cons (purpose, value, chain)$/;"	f
savealloc	tree.c	/^savealloc (size)$/;"	f
saved_clean_read_ptr	protoize.c	/^static const char * saved_clean_read_ptr;$/;"	v	file:
saved_repl_write_ptr	protoize.c	/^static char * saved_repl_write_ptr;$/;"	v	file:
saved_state	frame.c	/^  struct frame_state_internal *saved_state;$/;"	m	struct:frame_state_internal
savemode	loop.c	/^  enum machine_mode savemode;   \/* Nonzero means it is a mode for a low part$/;"	m	struct:movable
saveregs_value	expr.c	/^static rtx saveregs_value;$/;"	v	file:
savestring	protoize.c	/^savestring (input, size)$/;"	f	file:
savestring2	protoize.c	/^savestring2 (input1, size1, input2, size2)$/;"	f	file:
savings	loop.c	/^  short savings;		\/* Number of insns we can move for this reg,$/;"	m	struct:movable
sawclose	print-rtl.c	/^static int sawclose = 0;$/;"	v	file:
sbb_head	final.c	/^static struct bb_str *sbb_head	= 0;		\/* Head of string list.  *\/$/;"	v	file:
sbb_label_num	final.c	/^static int sbb_label_num	= 0;		\/* Last label used *\/$/;"	v	file:
sbb_tail	final.c	/^static struct bb_str **sbb_tail	= &sbb_head;	\/* Ptr to store next bb str *\/$/;"	v	file:
sbitmap_a_and_b	sbitmap.c	/^sbitmap_a_and_b (dst, a, b)$/;"	f
sbitmap_a_and_b_or_c	sbitmap.c	/^sbitmap_a_and_b_or_c (dst, a, b, c)$/;"	f
sbitmap_a_or_b	sbitmap.c	/^sbitmap_a_or_b (dst, a, b)$/;"	f
sbitmap_a_or_b_and_c	sbitmap.c	/^sbitmap_a_or_b_and_c (dst, a, b, c)$/;"	f
sbitmap_alloc	sbitmap.c	/^sbitmap_alloc (n_elms)$/;"	f
sbitmap_copy	sbitmap.c	/^sbitmap_copy (dst, src)$/;"	f
sbitmap_difference	sbitmap.c	/^sbitmap_difference (dst, a, b)$/;"	f
sbitmap_intersect_of_predsucc	sbitmap.c	/^sbitmap_intersect_of_predsucc (dst, src, bb, pred_succ)$/;"	f
sbitmap_not	sbitmap.c	/^sbitmap_not (dst, src)$/;"	f
sbitmap_ones	sbitmap.c	/^sbitmap_ones (bmap)$/;"	f
sbitmap_union_of_diff	sbitmap.c	/^sbitmap_union_of_diff (dst, a, b, c)$/;"	f
sbitmap_union_of_predsucc	sbitmap.c	/^sbitmap_union_of_predsucc (dst, src, bb, pred_succ)$/;"	f
sbitmap_vector_alloc	sbitmap.c	/^sbitmap_vector_alloc (n_vecs, n_elms)$/;"	f
sbitmap_vector_ones	sbitmap.c	/^sbitmap_vector_ones (bmap, n_vecs)$/;"	f
sbitmap_vector_zero	sbitmap.c	/^sbitmap_vector_zero (bmap, n_vecs)$/;"	f
sbitmap_zero	sbitmap.c	/^sbitmap_zero (bmap)$/;"	f
sbuf	gmon.c	/^static char	*sbuf;$/;"	v	file:
sc	fp-test.c	/^volatile signed char sc;$/;"	v
sc	mips-tdump.c	/^  sc_t sc;			\/* storage class *\/$/;"	m	struct:scope
sc	mips-tdump.c	/^typedef enum sc {$/;"	g	file:
sc	mips-tfile.c	/^typedef enum sc {$/;"	g	file:
sc_Abs	mips-tdump.c	/^  sc_Abs	 = scAbs,	  \/* value of symbol is absolute *\/$/;"	e	file:	enum:sc
sc_Abs	mips-tfile.c	/^  sc_Abs	 = scAbs,	  \/* value of symbol is absolute *\/$/;"	e	file:	enum:sc
sc_Bits	mips-tdump.c	/^  sc_Bits	 = scBits,	  \/* this is a bit field *\/$/;"	e	file:	enum:sc
sc_Bits	mips-tfile.c	/^  sc_Bits	 = scBits,	  \/* this is a bit field *\/$/;"	e	file:	enum:sc
sc_Bss	mips-tdump.c	/^  sc_Bss	 = scBss,	  \/* un-initialized data symbol *\/$/;"	e	file:	enum:sc
sc_Bss	mips-tfile.c	/^  sc_Bss	 = scBss,	  \/* un-initialized data symbol *\/$/;"	e	file:	enum:sc
sc_CdbLocal	mips-tdump.c	/^  sc_CdbLocal	 = scCdbLocal,	  \/* variable's value is IN se->va.?? *\/$/;"	e	file:	enum:sc
sc_CdbLocal	mips-tfile.c	/^  sc_CdbLocal	 = scCdbLocal,	  \/* variable's value is IN se->va.?? *\/$/;"	e	file:	enum:sc
sc_CdbSystem	mips-tdump.c	/^  sc_CdbSystem	 = scCdbSystem,	  \/* var's value is IN CDB's address space *\/$/;"	e	file:	enum:sc
sc_CdbSystem	mips-tfile.c	/^  sc_CdbSystem	 = scCdbSystem,	  \/* value is IN CDB's address space *\/$/;"	e	file:	enum:sc
sc_Common	mips-tdump.c	/^  sc_Common	 = scCommon,	  \/* common variable *\/$/;"	e	file:	enum:sc
sc_Common	mips-tfile.c	/^  sc_Common	 = scCommon,	  \/* common variable *\/$/;"	e	file:	enum:sc
sc_Data	mips-tdump.c	/^  sc_Data	 = scData,	  \/* initialized data symbol *\/$/;"	e	file:	enum:sc
sc_Data	mips-tfile.c	/^  sc_Data	 = scData,	  \/* initialized data symbol *\/$/;"	e	file:	enum:sc
sc_Info	mips-tdump.c	/^  sc_Info	 = scInfo,	  \/* symbol contains debugger information *\/$/;"	e	file:	enum:sc
sc_Info	mips-tfile.c	/^  sc_Info	 = scInfo,	  \/* symbol contains debugger information *\/$/;"	e	file:	enum:sc
sc_Init	mips-tdump.c	/^  sc_Init	 = scInit,	  \/* .init section symbol *\/$/;"	e	file:	enum:sc
sc_Init	mips-tfile.c	/^  sc_Init	 = scInit,	  \/* .init section symbol *\/$/;"	e	file:	enum:sc
sc_Max	mips-tdump.c	/^  sc_Max	 = scMax	  \/* Max storage class+1 *\/$/;"	e	file:	enum:sc
sc_Max	mips-tfile.c	/^  sc_Max	 = scMax	  \/* Max storage class+1 *\/$/;"	e	file:	enum:sc
sc_Nil	mips-tdump.c	/^  sc_Nil	 = scNil,	  \/* no storage class *\/$/;"	e	file:	enum:sc
sc_Nil	mips-tfile.c	/^  sc_Nil	 = scNil,	  \/* no storage class *\/$/;"	e	file:	enum:sc
sc_RData	mips-tdump.c	/^  sc_RData	 = scRData,	  \/* load time only read only data *\/$/;"	e	file:	enum:sc
sc_RData	mips-tfile.c	/^  sc_RData	 = scRData,	  \/* load time only read only data *\/$/;"	e	file:	enum:sc
sc_RegImage	mips-tdump.c	/^  sc_RegImage	 = scRegImage,	  \/* register value saved on stack *\/$/;"	e	file:	enum:sc
sc_RegImage	mips-tfile.c	/^  sc_RegImage	 = scRegImage,	  \/* register value saved on stack *\/$/;"	e	file:	enum:sc
sc_Register	mips-tdump.c	/^  sc_Register	 = scRegister,	  \/* value of symbol is register number *\/$/;"	e	file:	enum:sc
sc_Register	mips-tfile.c	/^  sc_Register	 = scRegister,	  \/* value of symbol is register number *\/$/;"	e	file:	enum:sc
sc_SBss	mips-tdump.c	/^  sc_SBss	 = scSBss,	  \/* load time only small common *\/$/;"	e	file:	enum:sc
sc_SBss	mips-tfile.c	/^  sc_SBss	 = scSBss,	  \/* load time only small common *\/$/;"	e	file:	enum:sc
sc_SCommon	mips-tdump.c	/^  sc_SCommon	 = scSCommon,	  \/* small common *\/$/;"	e	file:	enum:sc
sc_SCommon	mips-tfile.c	/^  sc_SCommon	 = scSCommon,	  \/* small common *\/$/;"	e	file:	enum:sc
sc_SData	mips-tdump.c	/^  sc_SData	 = scSData,	  \/* load time only small data *\/$/;"	e	file:	enum:sc
sc_SData	mips-tfile.c	/^  sc_SData	 = scSData,	  \/* load time only small data *\/$/;"	e	file:	enum:sc
sc_SUndefined	mips-tdump.c	/^  sc_SUndefined	 = scSUndefined,  \/* small undefined(external) data *\/$/;"	e	file:	enum:sc
sc_SUndefined	mips-tfile.c	/^  sc_SUndefined	 = scSUndefined,  \/* small undefined(external) data *\/$/;"	e	file:	enum:sc
sc_Text	mips-tdump.c	/^  sc_Text	 = scText,	  \/* text symbol *\/$/;"	e	file:	enum:sc
sc_Text	mips-tfile.c	/^  sc_Text	 = scText,	  \/* text symbol *\/$/;"	e	file:	enum:sc
sc_Undefined	mips-tdump.c	/^  sc_Undefined	 = scUndefined,	  \/* who knows? *\/$/;"	e	file:	enum:sc
sc_Undefined	mips-tfile.c	/^  sc_Undefined	 = scUndefined,	  \/* who knows? *\/$/;"	e	file:	enum:sc
sc_UserStruct	mips-tdump.c	/^  sc_UserStruct	 = scUserStruct,  \/* addr in struct user for current process *\/$/;"	e	file:	enum:sc
sc_UserStruct	mips-tfile.c	/^  sc_UserStruct	 = scUserStruct,  \/* addr in struct user for current process *\/$/;"	e	file:	enum:sc
sc_Var	mips-tdump.c	/^  sc_Var	 = scVar,	  \/* Var parameter (fortran,pascal) *\/$/;"	e	file:	enum:sc
sc_Var	mips-tfile.c	/^  sc_Var	 = scVar,	  \/* Var parameter (fortran,pascal) *\/$/;"	e	file:	enum:sc
sc_VarRegister	mips-tdump.c	/^  sc_VarRegister = scVarRegister, \/* Var parameter in a register *\/$/;"	e	file:	enum:sc
sc_VarRegister	mips-tfile.c	/^  sc_VarRegister = scVarRegister, \/* Var parameter in a register *\/$/;"	e	file:	enum:sc
sc_Variant	mips-tdump.c	/^  sc_Variant	 = scVariant,	  \/* Variant record *\/$/;"	e	file:	enum:sc
sc_Variant	mips-tfile.c	/^  sc_Variant	 = scVariant,	  \/* Variant record *\/$/;"	e	file:	enum:sc
sc_t	mips-tdump.c	/^} sc_t;$/;"	t	file:
sc_t	mips-tfile.c	/^} sc_t;$/;"	t	file:
sc_to_string	mips-tdump.c	/^sc_to_string(storage_class)$/;"	f
sc_to_string	mips-tfile.c	/^sc_to_string(storage_class)$/;"	f
scan_char_table	c-common.c	/^static format_char_info scan_char_table[] = {$/;"	v	file:
scan_decls	scan-decls.c	/^scan_decls (pfile, argc, argv)$/;"	f
scan_file_obstack	fix-header.c	/^struct obstack scan_file_obstack;$/;"	v
scan_for_missed_items	protoize.c	/^scan_for_missed_items (file_p)$/;"	f	file:
scan_for_source_files	gcov.c	/^scan_for_source_files ()$/;"	f	file:
scan_ident	scan.c	/^scan_ident (fp, s, c)$/;"	f
scan_libraries	collect2.c	/^scan_libraries (prog_name)$/;"	f	file:
scan_linker_output	tlink.c	/^scan_linker_output (fname)$/;"	f	file:
scan_loop	loop.c	/^scan_loop (loop_start, end, loop_cont, unroll_p, bct_p)$/;"	f	file:
scan_one_insn	regclass.c	/^scan_one_insn (insn, pass)$/;"	f	file:
scan_operands	genoutput.c	/^scan_operands (part, this_address_p, this_strict_low)$/;"	f	file:
scan_paradoxical_subregs	reload1.c	/^scan_paradoxical_subregs (x)$/;"	f	file:
scan_prog_file	collect2.c	/^scan_prog_file (prog_name, which_pass)$/;"	f	file:
scan_region	except.c	/^scan_region (insn, n, delete_outer)$/;"	f	file:
scan_string	scan.c	/^scan_string (fp, s, init)$/;"	f
scanf_format_type	c-common.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	e	file:	enum:format_type
sccsid	gmon.c	/^static char sccsid[] = "@(#)gmon.c	5.3 (Berkeley) 5\/22\/91";$/;"	v	file:
sched2_dump	toplev.c	/^int sched2_dump = 0;$/;"	v
sched2_time	toplev.c	/^int sched2_time;$/;"	v
sched_analyze	haifa-sched.c	/^sched_analyze (head, tail)$/;"	f	file:
sched_analyze	sched.c	/^sched_analyze (head, tail)$/;"	f	file:
sched_analyze_1	haifa-sched.c	/^sched_analyze_1 (x, insn)$/;"	f	file:
sched_analyze_1	sched.c	/^sched_analyze_1 (x, insn)$/;"	f	file:
sched_analyze_2	haifa-sched.c	/^sched_analyze_2 (x, insn)$/;"	f	file:
sched_analyze_2	sched.c	/^sched_analyze_2 (x, insn)$/;"	f	file:
sched_analyze_insn	haifa-sched.c	/^sched_analyze_insn (x, insn, loop_notes)$/;"	f	file:
sched_analyze_insn	sched.c	/^sched_analyze_insn (x, insn, loop_notes)$/;"	f	file:
sched_before_next_call	haifa-sched.c	/^static rtx sched_before_next_call;$/;"	v	file:
sched_before_next_call	sched.c	/^static rtx sched_before_next_call;$/;"	v	file:
sched_dump	toplev.c	/^int sched_dump = 0;$/;"	v
sched_note_set	haifa-sched.c	/^sched_note_set (x, death)$/;"	f	file:
sched_note_set	sched.c	/^sched_note_set (x, death)$/;"	f	file:
sched_reg_basic_block	haifa-sched.c	/^static int *sched_reg_basic_block;$/;"	v	file:
sched_reg_live_length	haifa-sched.c	/^static int *sched_reg_live_length;$/;"	v	file:
sched_reg_live_length	sched.c	/^static int *sched_reg_live_length;$/;"	v	file:
sched_reg_n_calls_crossed	haifa-sched.c	/^static int *sched_reg_n_calls_crossed;$/;"	v	file:
sched_reg_n_calls_crossed	sched.c	/^static int *sched_reg_n_calls_crossed;$/;"	v	file:
sched_time	toplev.c	/^int sched_time;$/;"	v
sched_verbose	haifa-sched.c	/^static int sched_verbose = 0;$/;"	v	file:
sched_verbose_param	haifa-sched.c	/^static int sched_verbose_param = 0;$/;"	v	file:
schedule_block	haifa-sched.c	/^schedule_block (bb, rgn_n_insns)$/;"	f	file:
schedule_block	sched.c	/^schedule_block (b, file)$/;"	f	file:
schedule_insn	haifa-sched.c	/^schedule_insn (insn, ready, n_ready, clock)$/;"	f	file:
schedule_insn	sched.c	/^schedule_insn (insn, ready, n_ready, clock)$/;"	f	file:
schedule_insns	haifa-sched.c	/^schedule_insns (dump_file)$/;"	f
schedule_insns	sched.c	/^schedule_insns (dump_file)$/;"	f
schedule_region	haifa-sched.c	/^schedule_region (rgn)$/;"	f	file:
schedule_select	sched.c	/^schedule_select (ready, n_ready, clock, file)$/;"	f	file:
schedule_unit	haifa-sched.c	/^schedule_unit (unit, insn, clock)$/;"	f	file:
schedule_unit	sched.c	/^schedule_unit (unit, insn, clock)$/;"	f	file:
scope	dwarf2out.c	/^  tree scope;$/;"	m	struct:decl_scope_struct
scope	mips-tdump.c	/^typedef struct scope {$/;"	s	file:
scope	mips-tfile.c	/^  scope_t	scope	[ PAGE_SIZE \/ sizeof (scope_t)	 ];$/;"	m	union:page
scope	mips-tfile.c	/^typedef struct scope {$/;"	s	file:
scope_die_for	dwarf2out.c	/^scope_die_for (t, context_die)$/;"	f	file:
scope_t	mips-tdump.c	/^} scope_t;$/;"	t	file:
scope_t	mips-tfile.c	/^} scope_t;$/;"	t	file:
scratch_operand	recog.c	/^scratch_operand (op, mode)$/;"	f
sdb_begin_function_line	sdbout.c	/^int sdb_begin_function_line = -1;$/;"	v
sdb_dims	sdbout.c	/^static int sdb_dims[SDB_MAX_DIM];$/;"	v	file:
sdb_file	sdbout.c	/^struct sdb_file$/;"	s	file:
sdb_n_dims	sdbout.c	/^static int sdb_n_dims = 0;$/;"	v	file:
sdb_type_size	sdbout.c	/^static int sdb_type_size = -1;$/;"	v	file:
sdbout_begin_block	sdbout.c	/^sdbout_begin_block (file, line, n)$/;"	f
sdbout_begin_function	sdbout.c	/^sdbout_begin_function (line)$/;"	f
sdbout_block	sdbout.c	/^sdbout_block (block)$/;"	f	file:
sdbout_dequeue_anonymous_types	sdbout.c	/^sdbout_dequeue_anonymous_types ()$/;"	f	file:
sdbout_end_block	sdbout.c	/^sdbout_end_block (file, line, n)$/;"	f
sdbout_end_epilogue	sdbout.c	/^sdbout_end_epilogue ()$/;"	f
sdbout_end_function	sdbout.c	/^sdbout_end_function (line)$/;"	f
sdbout_field_types	sdbout.c	/^sdbout_field_types (type)$/;"	f	file:
sdbout_init	sdbout.c	/^sdbout_init (asm_file, input_file_name, syms)$/;"	f
sdbout_label	sdbout.c	/^sdbout_label (insn)$/;"	f
sdbout_mark_begin_function	sdbout.c	/^sdbout_mark_begin_function ()$/;"	f
sdbout_one_type	sdbout.c	/^sdbout_one_type (type)$/;"	f	file:
sdbout_parms	sdbout.c	/^sdbout_parms (parms)$/;"	f	file:
sdbout_queue_anonymous_type	sdbout.c	/^sdbout_queue_anonymous_type (type)$/;"	f	file:
sdbout_record_type_name	sdbout.c	/^sdbout_record_type_name (type)$/;"	f	file:
sdbout_reg_parms	sdbout.c	/^sdbout_reg_parms (parms)$/;"	f	file:
sdbout_resume_previous_source_file	sdbout.c	/^sdbout_resume_previous_source_file ()$/;"	f
sdbout_start_new_source_file	sdbout.c	/^sdbout_start_new_source_file (filename)$/;"	f
sdbout_symbol	sdbout.c	/^sdbout_symbol (decl, local)$/;"	f
sdbout_syms	sdbout.c	/^sdbout_syms (syms)$/;"	f	file:
sdbout_toplevel_data	sdbout.c	/^sdbout_toplevel_data (decl)$/;"	f
sdbout_type	sdbout.c	/^sdbout_type (type)$/;"	f	file:
sdbout_types	sdbout.c	/^sdbout_types (types)$/;"	f
sdiv_optab	optabs.c	/^optab sdiv_optab;$/;"	v
sdiv_pow2_cheap	expmed.c	/^static int sdiv_pow2_cheap, smod_pow2_cheap;$/;"	v	file:
sdivmod_optab	optabs.c	/^optab sdivmod_optab;$/;"	v
secondary_memlocs	reload.c	/^static rtx secondary_memlocs[NUM_MACHINE_MODES];$/;"	v	file:
secondary_memlocs_elim	reload.c	/^static rtx secondary_memlocs_elim[NUM_MACHINE_MODES][MAX_RECOG_OPERANDS];$/;"	v	file:
section	collect2.c	/^  char *section;			\/* pointer to section *\/$/;"	m	struct:load_all
seek_to_line	protoize.c	/^seek_to_line (n)$/;"	f	file:
seen	genoutput.c	/^static char seen[MAX_MAX_OPERANDS];$/;"	v	file:
seen_EXIT_FAILURE	fix-header.c	/^int seen_EXIT_FAILURE = 0, seen_EXIT_SUCCESS = 0;$/;"	v
seen_EXIT_SUCCESS	fix-header.c	/^int seen_EXIT_FAILURE = 0, seen_EXIT_SUCCESS = 0;$/;"	v
seen_S_IFBLK	fix-header.c	/^int seen_S_IFBLK = 0, seen_S_ISBLK  = 0;$/;"	v
seen_S_IFCHR	fix-header.c	/^int seen_S_IFCHR = 0, seen_S_ISCHR  = 0;$/;"	v
seen_S_IFDIR	fix-header.c	/^int seen_S_IFDIR = 0, seen_S_ISDIR  = 0;$/;"	v
seen_S_IFIFO	fix-header.c	/^int seen_S_IFIFO = 0, seen_S_ISFIFO = 0;$/;"	v
seen_S_IFLNK	fix-header.c	/^int seen_S_IFLNK = 0, seen_S_ISLNK  = 0;$/;"	v
seen_S_IFREG	fix-header.c	/^int seen_S_IFREG = 0, seen_S_ISREG  = 0;$/;"	v
seen_S_ISBLK	fix-header.c	/^int seen_S_IFBLK = 0, seen_S_ISBLK  = 0;$/;"	v
seen_S_ISCHR	fix-header.c	/^int seen_S_IFCHR = 0, seen_S_ISCHR  = 0;$/;"	v
seen_S_ISDIR	fix-header.c	/^int seen_S_IFDIR = 0, seen_S_ISDIR  = 0;$/;"	v
seen_S_ISFIFO	fix-header.c	/^int seen_S_IFIFO = 0, seen_S_ISFIFO = 0;$/;"	v
seen_S_ISLNK	fix-header.c	/^int seen_S_IFLNK = 0, seen_S_ISLNK  = 0;$/;"	v
seen_S_ISREG	fix-header.c	/^int seen_S_IFREG = 0, seen_S_ISREG  = 0;$/;"	v
seen_dummy_proto	fix-header.c	/^struct partial_proto required_dummy_proto, seen_dummy_proto;$/;"	v
seen_errno	fix-header.c	/^int seen_errno = 0;$/;"	v
self_promoting_args_p	c-typeck.c	/^self_promoting_args_p (parms)$/;"	f
self_promoting_type_p	c-typeck.c	/^self_promoting_type_p (type)$/;"	f	file:
separate_line_info_table	dwarf2out.c	/^static dw_separate_line_info_ref separate_line_info_table;$/;"	v	file:
separate_line_info_table_allocated	dwarf2out.c	/^static unsigned separate_line_info_table_allocated;$/;"	v	file:
separate_line_info_table_in_use	dwarf2out.c	/^static unsigned separate_line_info_table_in_use;$/;"	v	file:
sequence	collect2.c	/^  int sequence;$/;"	m	struct:id
sequence_element_free_list	emit-rtl.c	/^static struct sequence_stack *sequence_element_free_list;$/;"	v	file:
sequence_number	collect2.c	/^static long sequence_number = 0;$/;"	v	file:
sequence_result	emit-rtl.c	/^static rtx sequence_result[SEQUENCE_RESULT_SIZE];$/;"	v	file:
sequence_rtl_expr	emit-rtl.c	/^tree sequence_rtl_expr = NULL;$/;"	v
sequence_stack	emit-rtl.c	/^struct sequence_stack *sequence_stack;$/;"	v
set	cse.c	/^struct set$/;"	s	file:
set_alignment	stor-layout.c	/^int set_alignment = 0;$/;"	v
set_block	c-decl.c	/^set_block (block)$/;"	f
set_block_abstract_flags	integrate.c	/^set_block_abstract_flags (stmt, setting)$/;"	f	file:
set_block_for_insn	flow.c	/^set_block_for_insn (insn, bb)$/;"	f
set_block_num	flow.c	/^set_block_num (insn, bb)$/;"	f
set_block_origin_self	integrate.c	/^set_block_origin_self (stmt)$/;"	f	file:
set_decl_abstract_flags	integrate.c	/^set_decl_abstract_flags (decl, setting)$/;"	f
set_decl_origin_self	integrate.c	/^set_decl_origin_self (decl)$/;"	f	file:
set_dest	loop.c	/^  rtx set_dest;			\/* The destination of this SET.  *\/$/;"	m	struct:movable
set_dominates_use	unroll.c	/^set_dominates_use (regno, first_uid, last_uid, copy_start, copy_end)$/;"	f
set_exception_lang_code	except.c	/^set_exception_lang_code (code)$/;"	f
set_exception_version_code	except.c	/^set_exception_version_code (code)$/;"	f
set_float_handler	toplev.c	/^set_float_handler (handler)$/;"	f
set_hash_table	gcse.c	/^static struct expr **set_hash_table;$/;"	v	file:
set_hash_table_size	gcse.c	/^static int set_hash_table_size;$/;"	v	file:
set_identifier_size	tree.c	/^set_identifier_size (size)$/;"	f
set_in_loop	loop.c	/^static varray_type set_in_loop;$/;"	v	file:
set_init_index	c-typeck.c	/^set_init_index (first, last)$/;"	f
set_init_label	c-typeck.c	/^set_init_label (fieldname)$/;"	f
set_initial_elim_offsets	reload1.c	/^set_initial_elim_offsets ()$/;"	f	file:
set_initial_label_offsets	reload1.c	/^set_initial_label_offsets ()$/;"	f	file:
set_insn_eh_region	except.c	/^set_insn_eh_region (first, region_num)$/;"	f	file:
set_label_offsets	reload1.c	/^set_label_offsets (x, insn, initial_p)$/;"	f	file:
set_last_insn	emit-rtl.c	/^set_last_insn (insn)$/;"	f
set_multilib_dir	gcc.c	/^set_multilib_dir ()$/;"	f	file:
set_new_first_and_last_insn	emit-rtl.c	/^set_new_first_and_last_insn (first, last)$/;"	f
set_new_first_and_last_label_num	emit-rtl.c	/^set_new_first_and_last_label_num (first, last)$/;"	f
set_nonvarying_address_components	cse.c	/^set_nonvarying_address_components (addr, size, pbase, pstart, pend)$/;"	f	file:
set_nonzero_bits_and_sign_copies	combine.c	/^set_nonzero_bits_and_sign_copies (x, set)$/;"	f	file:
set_noop_p	flow.c	/^set_noop_p (set)$/;"	f	file:
set_offsets_for_label	reload1.c	/^set_offsets_for_label (insn)$/;"	f	file:
set_preference	global.c	/^set_preference (dest, src)$/;"	f	file:
set_priorities	haifa-sched.c	/^set_priorities (bb)$/;"	f	file:
set_sizetype	stor-layout.c	/^set_sizetype (type)$/;"	f
set_spec	gcc.c	/^set_spec (name, spec)$/;"	f	file:
set_spec_fed	haifa-sched.c	/^set_spec_fed (load_insn)$/;"	f	file:
set_src	loop.c	/^  rtx set_src;			\/* The expression this reg is set from.  *\/$/;"	m	struct:movable
set_std_prefix	prefix.c	/^set_std_prefix (prefix, len)$/;"	f
set_target_switch	toplev.c	/^set_target_switch (name)$/;"	f	file:
set_target_temp_slot_level	function.c	/^set_target_temp_slot_level (level)$/;"	f
set_type_quals	tree.c	/^set_type_quals (type, type_quals)$/;"	f	file:
set_unique_reg_note	emit-rtl.c	/^set_unique_reg_note (insn, kind, datum)$/;"	f
set_yydebug	c-lex.c	/^set_yydebug (value)$/;"	f
setcc_gen_code	optabs.c	/^enum insn_code setcc_gen_code[NUM_RTX_CODE];$/;"	v
setjmp	enquire.c	/^	int setjmp(lab) int lab; { return(0); }$/;"	f
setjmp_args_warning	function.c	/^setjmp_args_warning ()$/;"	f
setjmp_libfunc	optabs.c	/^rtx setjmp_libfunc;$/;"	v
setjmp_protect	function.c	/^setjmp_protect (block)$/;"	f
setjmp_protect_args	function.c	/^setjmp_protect_args ()$/;"	f
setmode	enquire.c	/^int setmode(s) char *s; {$/;"	f
sets_cc0_p	jump.c	/^sets_cc0_p (x)$/;"	f
sets_function_arg_p	combine.c	/^sets_function_arg_p (pat)$/;"	f	file:
setup_incoming_promotions	combine.c	/^setup_incoming_promotions ()$/;"	f	file:
setup_save_areas	caller-save.c	/^setup_save_areas ()$/;"	f
sf_names_attribute	dwarfout.c	/^sf_names_attribute (sf_names_start_label)$/;"	f	file:
sge_plus	loop.c	/^sge_plus (mode, x, y)$/;"	f	file:
sge_plus_constant	loop.c	/^sge_plus_constant (x, c)$/;"	f	file:
sgn	enquire.c	1039;"	d	file:
shadow_label	c-decl.c	/^shadow_label (name)$/;"	f
shadow_tag	c-decl.c	/^shadow_tag (declspecs)$/;"	f
shadow_tag_warned	c-decl.c	/^shadow_tag_warned (declspecs, warned)$/;"	f
shadowed	c-decl.c	/^    tree shadowed;$/;"	m	struct:binding_level
shadowed_labels	c-decl.c	/^  tree shadowed_labels;$/;"	m	struct:c_function
shadowed_labels	c-decl.c	/^static tree shadowed_labels;$/;"	v	file:
shallow_copy_rtx	rtl.c	/^shallow_copy_rtx (orig)$/;"	f
shared_obj	collect2.c	/^static int shared_obj;		        \/* true if -shared *\/$/;"	v	file:
sharp_token_type	cccp.c	/^enum sharp_token_type {$/;"	g	file:
shash	mips-tfile.c	/^  shash_t	shash	[ PAGE_SIZE \/ sizeof (shash_t)	 ];$/;"	m	union:page
shash	mips-tfile.c	/^typedef struct shash {$/;"	s	file:
shash_head	mips-tfile.c	/^  shash_t      **shash_head;	\/* string hash table *\/$/;"	m	struct:efdr
shash_t	mips-tfile.c	/^} shash_t;$/;"	t	file:
shift_cost	expmed.c	/^static int shift_cost[MAX_BITS_PER_WORD];$/;"	v	file:
shiftadd_cost	expmed.c	/^static int shiftadd_cost[MAX_BITS_PER_WORD];$/;"	v	file:
shiftsub_cost	expmed.c	/^static int shiftsub_cost[MAX_BITS_PER_WORD];$/;"	v	file:
short	libgcc2.c	1075;"	d	file:
short	libgcc2.c	1097;"	d	file:
short	libgcc2.c	1119;"	d	file:
short	libgcc2.c	113;"	d	file:
short	libgcc2.c	1148;"	d	file:
short_integer_type_node	c-decl.c	/^tree short_integer_type_node;$/;"	v
short_unsigned_type_node	c-decl.c	/^tree short_unsigned_type_node;$/;"	v
shorten_branch_time	toplev.c	/^int shorten_branch_time;$/;"	v
shorten_branches	final.c	/^shorten_branches (first)$/;"	f
shorten_compare	c-common.c	/^shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)$/;"	f
shortpath	protoize.c	/^shortpath (cwd, filename)$/;"	f	file:
showtype	enquire.c	1041;"	d	file:
shuffle_filename_entry	dwarfout.c	/^shuffle_filename_entry (new_zeroth)$/;"	f	file:
si	fp-test.c	/^volatile signed int si;$/;"	v
sibling_attribute	dwarfout.c	/^sibling_attribute ()$/;"	f	file:
sibling_offset	dwarf2out.c	/^sibling_offset (die)$/;"	f	file:
side_effects_p	rtlanal.c	/^side_effects_p (x)$/;"	f
sign_expand_binop	optabs.c	/^sign_expand_binop (mode, uoptab, soptab, op0, op1, target, unsignedp, methods)$/;"	f
sign_of	enquire.c	1036;"	d	file:
signal	enquire.c	/^	Procedure signal(i, p) int i, (*p)(); {}$/;"	f
signal_count	gcc.c	/^static int signal_count;$/;"	v	file:
signed_char_spec	gcc.c	/^static char *signed_char_spec = SIGNED_CHAR_SPEC;$/;"	v	file:
signed_char_type_node	c-decl.c	/^tree signed_char_type_node;$/;"	v
signed_condition	jump.c	/^signed_condition (code)$/;"	f
signed_or_unsigned_type	c-typeck.c	/^signed_or_unsigned_type (unsignedp, type)$/;"	f
signed_type	c-typeck.c	/^signed_type (type)$/;"	f
signed_wchar_type_node	c-decl.c	/^tree signed_wchar_type_node;$/;"	v
signedp	cexp.c	/^  struct constant {HOST_WIDEST_INT value; int signedp;} integer;$/;"	m	struct:<anonymous>::constant
significand_size	real.c	/^significand_size (mode)$/;"	f
simple	c-typeck.c	/^  char simple;$/;"	m	struct:constructor_stack
simple_cst_equal	tree.c	/^simple_cst_equal (t1, t2)$/;"	f
simple_cst_list_equal	tree.c	/^simple_cst_list_equal (l1, l2)$/;"	f
simple_operand_p	fold-const.c	/^simple_operand_p (exp)$/;"	f	file:
simple_type_align_in_bits	dwarf2out.c	/^simple_type_align_in_bits (type)$/;"	f	file:
simple_type_align_in_bits	dwarfout.c	/^simple_type_align_in_bits (type)$/;"	f	file:
simple_type_size_in_bits	dwarf2out.c	/^simple_type_size_in_bits (type)$/;"	f	file:
simple_type_size_in_bits	dwarfout.c	/^simple_type_size_in_bits (type)$/;"	f	file:
simplejump_p	jump.c	/^simplejump_p (insn)$/;"	f
simplify_and_const_int	combine.c	/^simplify_and_const_int (x, mode, varop, constop)$/;"	f	file:
simplify_and_tree	genattrtab.c	/^simplify_and_tree (exp, pterm, insn_code, insn_index)$/;"	f	file:
simplify_binary_operation	cse.c	/^simplify_binary_operation (code, mode, op0, op1)$/;"	f
simplify_by_exploding	genattrtab.c	/^simplify_by_exploding (exp)$/;"	f	file:
simplify_comparison	combine.c	/^simplify_comparison (code, pop0, pop1)$/;"	f	file:
simplify_cond	genattrtab.c	/^simplify_cond (exp, insn_code, insn_index)$/;"	f	file:
simplify_filename	cccp.c	/^simplify_filename (filename)$/;"	f	file:
simplify_giv_expr	loop.c	/^simplify_giv_expr (x, benefit)$/;"	f	file:
simplify_if_then_else	combine.c	/^simplify_if_then_else (x)$/;"	f	file:
simplify_knowing	genattrtab.c	/^simplify_knowing (exp, known_true)$/;"	f	file:
simplify_logical	combine.c	/^simplify_logical (x, last)$/;"	f	file:
simplify_or_tree	genattrtab.c	/^simplify_or_tree (exp, pterm, insn_code, insn_index)$/;"	f	file:
simplify_pathname	cppfiles.c	/^simplify_pathname (path)$/;"	f
simplify_plus_minus	cse.c	/^simplify_plus_minus (code, mode, op0, op1)$/;"	f	file:
simplify_relational_operation	cse.c	/^simplify_relational_operation (code, mode, op0, op1)$/;"	f
simplify_rtx	combine.c	/^simplify_rtx (x, op0_mode, last, in_dest)$/;"	f	file:
simplify_set	combine.c	/^simplify_set (x)$/;"	f	file:
simplify_shift_const	combine.c	/^simplify_shift_const (x, code, result_mode, varop, count)$/;"	f	file:
simplify_subtraction	varasm.c	/^simplify_subtraction (x)$/;"	f
simplify_ternary_operation	cse.c	/^simplify_ternary_operation (code, mode, op0_mode, op0, op1, op2)$/;"	f
simplify_test_exp	genattrtab.c	/^simplify_test_exp (exp, insn_code, insn_index)$/;"	f	file:
simplify_unary_operation	cse.c	/^simplify_unary_operation (code, mode, op, op_mode)$/;"	f
simplify_with_current_value	genattrtab.c	/^simplify_with_current_value (exp, space, ndim)$/;"	f	file:
simplify_with_current_value_aux	genattrtab.c	/^simplify_with_current_value_aux (exp)$/;"	f	file:
simultaneity	genattr.c	/^  int simultaneity;		\/* Maximum number of simultaneous insns$/;"	m	struct:function_unit
simultaneity	genattrtab.c	/^  int simultaneity;		\/* Maximum number of simultaneous insns$/;"	m	struct:function_unit
sin_optab	optabs.c	/^optab sin_optab;$/;"	v
single_set	rtlanal.c	/^single_set (insn)$/;"	f
size	calls.c	/^  struct args_size size;$/;"	m	struct:arg_data
size	collect2.c	/^  long	size;				\/* size of the file *\/$/;"	m	struct:file_info
size	dwarf2out.c	/^  int size;$/;"	m	struct:reg_size_range
size	function.c	/^  HOST_WIDE_INT size;$/;"	m	struct:temp_slot
size_binop	fold-const.c	/^size_binop (code, arg0, arg1)$/;"	f
size_directive_output	varasm.c	/^int size_directive_output;$/;"	v
size_in_bytes	tree.c	/^size_in_bytes (type)$/;"	f
size_int_wide	fold-const.c	/^size_int_wide (number, high, bit_p)$/;"	f
size_of_aranges	dwarf2out.c	/^size_of_aranges ()$/;"	f	file:
size_of_die	dwarf2out.c	/^size_of_die (die)$/;"	f	file:
size_of_line_info	dwarf2out.c	/^size_of_line_info ()$/;"	f	file:
size_of_line_prolog	dwarf2out.c	/^size_of_line_prolog ()$/;"	f	file:
size_of_loc_descr	dwarf2out.c	/^size_of_loc_descr (loc)$/;"	f	file:
size_of_locs	dwarf2out.c	/^size_of_locs (loc)$/;"	f	file:
size_of_pubnames	dwarf2out.c	/^size_of_pubnames ()$/;"	f	file:
size_of_sleb128	dwarf2out.c	/^size_of_sleb128 (value)$/;"	f	file:
size_of_string	dwarf2out.c	/^size_of_string (str)$/;"	f	file:
size_of_uleb128	dwarf2out.c	/^size_of_uleb128 (value)$/;"	f	file:
size_one_node	stor-layout.c	/^tree size_one_node;$/;"	v
size_t	mips-tdump.c	86;"	d	file:
size_zero_node	stor-layout.c	/^tree size_zero_node;$/;"	v
sizes	mips-tfile.c	/^  symint_t    sizes	     [N_TQ+2];	\/* sizes of each array slice + size of$/;"	m	struct:type_info
sizetype_tab	stor-layout.c	/^struct sizetype_tab sizetype_tab;$/;"	v
sjpopnthrow_libfunc	optabs.c	/^rtx sjpopnthrow_libfunc;$/;"	v
sjthrow_libfunc	optabs.c	/^rtx sjthrow_libfunc;$/;"	v
skip_comment	cpplib.c	/^skip_comment (pfile, m)$/;"	f	file:
skip_consec_insns	loop.c	/^skip_consec_insns (insn, count)$/;"	f	file:
skip_evaluation	c-common.c	/^int skip_evaluation;$/;"	v
skip_evaluation	cexp.c	/^static int skip_evaluation;$/;"	v	file:
skip_if_group	cccp.c	/^skip_if_group (ip, any, op)$/;"	f	file:
skip_if_group	cpplib.c	/^skip_if_group (pfile)$/;"	f	file:
skip_paren_group	cccp.c	/^skip_paren_group (ip)$/;"	f	file:
skip_quoted_string	cccp.c	/^skip_quoted_string (bp, limit, start_line, count_newlines, backslash_newlines_p, eofp)$/;"	f	file:
skip_rest_of_line	cpplib.c	/^skip_rest_of_line (pfile)$/;"	f
skip_spaces	scan.c	/^skip_spaces (fp, c)$/;"	f
skip_to_closing_brace	scan-decls.c	/^skip_to_closing_brace (pfile)$/;"	f	file:
skip_to_end_of_comment	cccp.c	/^skip_to_end_of_comment (ip, line_counter, nowarn)$/;"	f	file:
skip_white_space	c-lex.c	/^skip_white_space (c)$/;"	f	file:
skip_white_space_on_line	c-lex.c	/^skip_white_space_on_line ()$/;"	f	file:
skip_whitespace	gcc.c	/^skip_whitespace (p)$/;"	f	file:
sl	fp-test.c	/^volatile signed long sl;$/;"	v
slot	function.c	/^  rtx slot;$/;"	m	struct:temp_slot
slot_offset	calls.c	/^  struct args_size slot_offset;$/;"	m	struct:arg_data
small_free	mips-tfile.c	/^typedef union small_free {$/;"	u	file:
small_free_t	mips-tfile.c	/^} small_free_t;$/;"	t	file:
smallest_mode_for_size	stor-layout.c	/^smallest_mode_for_size (size, class)$/;"	f
smax_optab	optabs.c	/^optab smax_optab;$/;"	v
smin_optab	optabs.c	/^optab smin_optab;$/;"	v
smod_optab	optabs.c	/^optab smod_optab;$/;"	v
smod_pow2_cheap	expmed.c	/^static int sdiv_pow2_cheap, smod_pow2_cheap;$/;"	v	file:
smul_highpart_optab	optabs.c	/^optab smul_highpart_optab;$/;"	v
smul_optab	optabs.c	/^optab smul_optab;$/;"	v
smul_widen_optab	optabs.c	/^optab smul_widen_optab;$/;"	v
solve_program_flow_graph	gcov.c	/^solve_program_flow_graph (bptr)$/;"	f	file:
something_needs_elimination	reload1.c	/^static int something_needs_elimination;$/;"	v	file:
something_needs_operands_changed	reload1.c	/^int something_needs_operands_changed;$/;"	v
sometimes	haifa-sched.c	/^struct sometimes$/;"	s	file:
sometimes	sched.c	/^struct sometimes$/;"	s	file:
sorry	toplev.c	/^sorry VPROTO((const char *msgid, ...))$/;"	f
sorrycount	toplev.c	/^int sorrycount = 0;$/;"	v
sort_ids	collect2.c	/^sort_ids (head_ptr)$/;"	f	file:
source	gcov.c	/^  int source;$/;"	m	struct:adj_list
source	profile.c	/^  int source;$/;"	m	struct:adj_list
source_confusion_recovery	protoize.c	/^static jmp_buf source_confusion_recovery;$/;"	v	file:
source_filename	scan.c	/^sstring source_filename;$/;"	v
source_label_number	dbxout.c	/^static int source_label_number = 1;$/;"	v	file:
source_lineno	scan.c	/^int source_lineno = 1;$/;"	v
sourcefile	gcov.c	/^struct sourcefile$/;"	s	file:
sources	gcov.c	/^struct sourcefile *sources;$/;"	v
spec	gcc.c	/^  const char *spec[4];		\/* To use this compiler, concatenate these$/;"	m	struct:compiler
spec_list	gcc.c	/^struct spec_list$/;"	s	file:
spec_list_1	gcc.c	/^struct spec_list_1$/;"	s	file:
spec_machine	gcc.c	/^static const char *spec_machine = DEFAULT_TARGET_MACHINE;$/;"	v	file:
spec_version	gcc.c	/^static char *spec_version = DEFAULT_TARGET_VERSION;$/;"	v	file:
special_file	fix-header.c	/^enum special_file$/;"	g	file:
special_file_handling	fix-header.c	/^enum special_file special_file_handling = no_special;$/;"	v
special_format	gengenrtl.c	/^special_format (fmt)$/;"	f	file:
special_function_p	calls.c	/^special_function_p (name, fndecl, returns_twice, is_longjmp,$/;"	f	file:
special_rtx	gengenrtl.c	/^special_rtx (idx)$/;"	f	file:
special_symbol	cccp.c	/^special_symbol (hp, op)$/;"	f	file:
special_symbol	cpphash.c	/^special_symbol (hp, pfile)$/;"	f	file:
specs	gcc.c	/^static struct spec_list *specs = (struct spec_list *)0;$/;"	v	file:
spelling	c-typeck.c	/^  struct spelling *spelling;$/;"	m	struct:initializer_stack
spelling	c-typeck.c	/^static struct spelling *spelling;	\/* Next stack element (unused).  *\/$/;"	v	file:
spelling	c-typeck.c	/^struct spelling$/;"	s	file:
spelling_base	c-typeck.c	/^  struct spelling *spelling_base;$/;"	m	struct:initializer_stack
spelling_base	c-typeck.c	/^static struct spelling *spelling_base;	\/* Spelling stack base.  *\/$/;"	v	file:
spelling_length	c-typeck.c	/^spelling_length ()$/;"	f	file:
spelling_size	c-typeck.c	/^  int spelling_size;$/;"	m	struct:initializer_stack
spelling_size	c-typeck.c	/^static int spelling_size;		\/* Size of the spelling stack.  *\/$/;"	v	file:
spill_failure	reload1.c	/^spill_failure (insn)$/;"	f	file:
spill_hard_reg	reload1.c	/^spill_hard_reg (regno, dumpfile, cant_eliminate)$/;"	f	file:
spill_indirect_levels	reload1.c	/^static char spill_indirect_levels;$/;"	v	file:
spill_reg_order	reload1.c	/^static short spill_reg_order[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_rtx	reload1.c	/^static rtx spill_reg_rtx[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_store	reload1.c	/^static rtx spill_reg_store[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_stored_to	reload1.c	/^static rtx spill_reg_stored_to[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_regs	reload1.c	/^static short spill_regs[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_stack_slot	reload1.c	/^static rtx spill_stack_slot[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_stack_slot_width	reload1.c	/^static int spill_stack_slot_width[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spilled_pseudos	reload1.c	/^static regset spilled_pseudos;$/;"	v	file:
split_bbs	haifa-sched.c	/^    bblst split_bbs;$/;"	m	struct:
split_block_insns	recog.c	/^split_block_insns (b, do_split)$/;"	f
split_directories	gcc.c	/^split_directories (name, ptr_num_dirs)$/;"	f	file:
split_double	final.c	/^split_double (value, first, second)$/;"	f
split_edge	flow.c	/^split_edge (edge_in)$/;"	f
split_edges	haifa-sched.c	/^split_edges (bb_src, bb_trg, bl)$/;"	f	file:
split_hard_reg_notes	haifa-sched.c	/^split_hard_reg_notes (note, first, last)$/;"	f	file:
split_hard_reg_notes	sched.c	/^split_hard_reg_notes (note, first, last)$/;"	f	file:
split_specs_attrs	c-common.c	/^split_specs_attrs (specs_attrs, declspecs, prefix_attributes)$/;"	f
split_tree	fold-const.c	/^split_tree (in, code, varp, conp, varsignp)$/;"	f	file:
splittable_regs	unroll.c	/^static rtx *splittable_regs;$/;"	v	file:
splittable_regs_updates	unroll.c	/^static int *splittable_regs_updates;$/;"	v	file:
sqrt_optab	optabs.c	/^optab sqrt_optab;$/;"	v
squeeze_notes	jump.c	/^squeeze_notes (start, end)$/;"	f
src	cse.c	/^  rtx src;$/;"	m	struct:set
src_addr	libgcc2.c	/^  unsigned long src_addr;$/;"	m	struct:bb_edge
src_const	cse.c	/^  rtx src_const;$/;"	m	struct:set
src_const_elt	cse.c	/^  struct table_elt *src_const_elt;$/;"	m	struct:set
src_const_hash	cse.c	/^  unsigned src_const_hash;$/;"	m	struct:set
src_coords_attribute	dwarfout.c	/^src_coords_attribute (src_fileno, src_lineno)$/;"	f	file:
src_elt	cse.c	/^  struct table_elt *src_elt;$/;"	m	struct:set
src_hash	cse.c	/^  unsigned src_hash;$/;"	m	struct:set
src_in_memory	cse.c	/^  char src_in_memory;$/;"	m	struct:set
src_in_struct	cse.c	/^  char src_in_struct;$/;"	m	struct:set
src_info_attribute	dwarfout.c	/^src_info_attribute (src_info_start_label)$/;"	f	file:
src_prob	haifa-sched.c	/^    int src_prob;$/;"	m	struct:
src_volatile	cse.c	/^  char src_volatile;$/;"	m	struct:set
ss	fp-test.c	/^volatile signed short ss;$/;"	v
ssiz	gmon.c	/^static int	ssiz;$/;"	v	file:
ssize_binop	fold-const.c	/^ssize_binop (code, arg0, arg1)$/;"	f
sstring_append	scan.c	/^sstring_append (dst, src)$/;"	f
st	cccp.c	/^    struct stat st;$/;"	m	struct:file_name_list
st	cccp.c	/^  struct stat st;$/;"	m	struct:include_file
st	mips-tdump.c	/^  st_t st;			\/* symbol type *\/$/;"	m	struct:scope
st	mips-tdump.c	/^typedef enum st {$/;"	g	file:
st	mips-tfile.c	/^typedef enum st {$/;"	g	file:
stStaParam	mips-tdump.c	94;"	d	file:
st_Block	mips-tdump.c	/^  st_Block	= stBlock,	\/* beginning of block *\/$/;"	e	file:	enum:st
st_Block	mips-tfile.c	/^  st_Block	= stBlock,	\/* beginning of block *\/$/;"	e	file:	enum:st
st_Constant	mips-tdump.c	/^  st_Constant	= stConstant,	\/* const *\/$/;"	e	file:	enum:st
st_Constant	mips-tfile.c	/^  st_Constant	= stConstant,	\/* const *\/$/;"	e	file:	enum:st
st_End	mips-tdump.c	/^  st_End	= stEnd,	\/* end (of anything) *\/$/;"	e	file:	enum:st
st_End	mips-tfile.c	/^  st_End	= stEnd,	\/* end (of anything) *\/$/;"	e	file:	enum:st
st_Enum	mips-tdump.c	/^  st_Enum	= stEnum,	\/* enum *\/$/;"	e	file:	enum:st
st_Expr	mips-tdump.c	/^  st_Expr	= stExpr,	\/* 2+2 vs. 4 *\/$/;"	e	file:	enum:st
st_Expr	mips-tfile.c	/^  st_Expr	= stExpr,	\/* 2+2 vs. 4 *\/$/;"	e	file:	enum:st
st_File	mips-tdump.c	/^  st_File	= stFile,	\/* file name *\/$/;"	e	file:	enum:st
st_File	mips-tfile.c	/^  st_File	= stFile,	\/* file name *\/$/;"	e	file:	enum:st
st_Forward	mips-tdump.c	/^  st_Forward	= stForward,	\/* forwarding address *\/$/;"	e	file:	enum:st
st_Forward	mips-tfile.c	/^  st_Forward	= stForward,	\/* forwarding address *\/$/;"	e	file:	enum:st
st_Global	mips-tdump.c	/^  st_Global	= stGlobal,	\/* external symbol *\/$/;"	e	file:	enum:st
st_Global	mips-tfile.c	/^  st_Global	= stGlobal,	\/* external symbol *\/$/;"	e	file:	enum:st
st_Label	mips-tdump.c	/^  st_Label	= stLabel,	\/* label *\/$/;"	e	file:	enum:st
st_Label	mips-tfile.c	/^  st_Label	= stLabel,	\/* label *\/$/;"	e	file:	enum:st
st_Local	mips-tdump.c	/^  st_Local	= stLocal,	\/* local variable *\/$/;"	e	file:	enum:st
st_Local	mips-tfile.c	/^  st_Local	= stLocal,	\/* local variable *\/$/;"	e	file:	enum:st
st_Max	mips-tdump.c	/^  st_Max	= stMax		\/* max type+1 *\/$/;"	e	file:	enum:st
st_Max	mips-tfile.c	/^  st_Max	= stMax		\/* max type+1 *\/$/;"	e	file:	enum:st
st_Member	mips-tdump.c	/^  st_Member	= stMember,	\/* member (of anything	- struct\/union\/enum *\/$/;"	e	file:	enum:st
st_Member	mips-tfile.c	/^  st_Member	= stMember,	\/* member (of anything	- struct\/union\/enum *\/$/;"	e	file:	enum:st
st_Nil	mips-tdump.c	/^  st_Nil	= stNil,	\/* Nuthin' special *\/$/;"	e	file:	enum:st
st_Nil	mips-tfile.c	/^  st_Nil	= stNil,	\/* Nuthin' special *\/$/;"	e	file:	enum:st
st_Number	mips-tdump.c	/^  st_Number	= stNumber,	\/* pure number (ie. 4 NOR 2+2) *\/$/;"	e	file:	enum:st
st_Number	mips-tfile.c	/^  st_Number	= stNumber,	\/* pure number (ie. 4 NOR 2+2) *\/$/;"	e	file:	enum:st
st_Param	mips-tdump.c	/^  st_Param	= stParam,	\/* procedure argument *\/$/;"	e	file:	enum:st
st_Param	mips-tfile.c	/^  st_Param	= stParam,	\/* procedure argument *\/$/;"	e	file:	enum:st
st_Proc	mips-tdump.c	/^  st_Proc	= stProc,	\/*     "      "	 Procedure *\/$/;"	e	file:	enum:st
st_Proc	mips-tfile.c	/^  st_Proc	= stProc,	\/*     "      "	 Procedure *\/$/;"	e	file:	enum:st
st_RegReloc	mips-tdump.c	/^  st_RegReloc	= stRegReloc,	\/* register relocation *\/$/;"	e	file:	enum:st
st_RegReloc	mips-tfile.c	/^  st_RegReloc	= stRegReloc,	\/* register relocation *\/$/;"	e	file:	enum:st
st_StaParam	mips-tdump.c	/^  st_StaParam	= stStaParam,	\/* Fortran static parameters *\/$/;"	e	file:	enum:st
st_Static	mips-tdump.c	/^  st_Static	= stStatic,	\/* static *\/$/;"	e	file:	enum:st
st_Static	mips-tfile.c	/^  st_Static	= stStatic,	\/* static *\/$/;"	e	file:	enum:st
st_StaticProc	mips-tdump.c	/^  st_StaticProc	= stStaticProc,	\/* load time only static procs *\/$/;"	e	file:	enum:st
st_StaticProc	mips-tfile.c	/^  st_StaticProc	= stStaticProc,	\/* load time only static procs *\/$/;"	e	file:	enum:st
st_Str	mips-tdump.c	/^  st_Str	= stStr,	\/* string *\/$/;"	e	file:	enum:st
st_Str	mips-tfile.c	/^  st_Str	= stStr,	\/* string *\/$/;"	e	file:	enum:st
st_Struct	mips-tdump.c	/^  st_Struct	= stStruct,	\/* struct *\/$/;"	e	file:	enum:st
st_Type	mips-tdump.c	/^  st_Type	= stType,	\/* post-coercion SER *\/$/;"	e	file:	enum:st
st_Type	mips-tfile.c	/^  st_Type	= stType,	\/* post-coercion SER *\/$/;"	e	file:	enum:st
st_Typedef	mips-tdump.c	/^  st_Typedef	= stTypedef,	\/* type definition *\/$/;"	e	file:	enum:st
st_Typedef	mips-tfile.c	/^  st_Typedef	= stTypedef,	\/* type definition *\/$/;"	e	file:	enum:st
st_Union	mips-tdump.c	/^  st_Union	= stUnion,	\/* union *\/$/;"	e	file:	enum:st
st_t	mips-tdump.c	/^} st_t;$/;"	t	file:
st_t	mips-tfile.c	/^} st_t;$/;"	t	file:
st_to_string	mips-tdump.c	/^st_to_string(symbol_type)$/;"	f
st_to_string	mips-tfile.c	/^st_to_string(symbol_type)$/;"	f
stab_names	mips-tdump.c	/^struct {short code; char string[10];} stab_names[]  = {$/;"	v
stab_to_sclass	xcoffout.c	/^stab_to_sclass (stab)$/;"	f
stabilize	explow.c	/^stabilize (x)$/;"	f
stabilize_reference	tree.c	/^stabilize_reference (ref)$/;"	f
stabilize_reference_1	tree.c	/^stabilize_reference_1 (e)$/;"	f
stable_and_no_regs_but_for_p	regmove.c	/^stable_and_no_regs_but_for_p (x, src, dst)$/;"	f	file:
stabs_seen	mips-tfile.c	/^static int	stabs_seen	= 0;		\/* != 0 if stabs have been seen *\/$/;"	v	file:
stabs_symbol	mips-tfile.c	/^static char stabs_symbol[] = STABS_SYMBOL;$/;"	v	file:
stack	calls.c	/^  rtx stack;$/;"	m	struct:arg_data
stack	reg-stack.c	/^} *stack;$/;"	t	file:
stack_arg_under_construction	calls.c	/^int stack_arg_under_construction;$/;"	v
stack_block_stack	stmt.c	/^struct nesting *stack_block_stack;$/;"	v
stack_def	reg-stack.c	/^typedef struct stack_def$/;"	s	file:
stack_level	stmt.c	/^	  rtx stack_level;$/;"	m	struct:nesting::<anonymous>::<anonymous>
stack_level	stmt.c	/^  rtx stack_level;$/;"	m	struct:goto_fixup
stack_reg_dump	toplev.c	/^int stack_reg_dump = 0;$/;"	v
stack_reg_life_analysis	reg-stack.c	/^stack_reg_life_analysis (first, stackentry)$/;"	f	file:
stack_reg_time	toplev.c	/^int stack_reg_time;$/;"	v
stack_regs_mentioned	reg-stack.c	/^stack_regs_mentioned (insn)$/;"	f
stack_regs_mentioned_data	reg-stack.c	/^static varray_type stack_regs_mentioned_data;$/;"	v	file:
stack_regs_mentioned_p	reg-stack.c	/^stack_regs_mentioned_p (pat)$/;"	f
stack_result	reg-stack.c	/^stack_result (decl)$/;"	f	file:
stack_slot	calls.c	/^  rtx stack_slot;$/;"	m	struct:arg_data
stack_slot_list	function.c	/^rtx stack_slot_list;$/;"	v
stack_usage_map	calls.c	/^static char *stack_usage_map;$/;"	v	file:
standard_bindir_prefix	gcc.c	/^static char *standard_bindir_prefix = STANDARD_BINDIR_PREFIX;$/;"	v	file:
standard_exec_prefix	gcc.c	/^static const char *standard_exec_prefix = STANDARD_EXEC_PREFIX;$/;"	v	file:
standard_exec_prefix_1	gcc.c	/^static const char *standard_exec_prefix_1 = "\/usr\/lib\/gcc\/";$/;"	v	file:
standard_startfile_prefix	gcc.c	/^static const char *standard_startfile_prefix = STANDARD_STARTFILE_PREFIX;$/;"	v	file:
standard_startfile_prefix_1	gcc.c	/^static const char *standard_startfile_prefix_1 = "\/lib\/";$/;"	v	file:
standard_startfile_prefix_2	gcc.c	/^static const char *standard_startfile_prefix_2 = "\/usr\/lib\/";$/;"	v	file:
start	collect2.c	/^  char *start;				\/* start of map *\/$/;"	m	struct:file_info
start	libgcc1-test.c	/^void start() {}$/;"	f
start	reload.c	/^  HOST_WIDE_INT start;	\/* Starting offset or register number.  *\/$/;"	m	struct:decomposition
start	stmt.c	/^	  rtx start;$/;"	m	struct:nesting::<anonymous>::<anonymous>
start_bb	graph.c	/^start_bb (fp, bb)$/;"	f	file:
start_catch_handler	except.c	/^start_catch_handler (rtime)$/;"	f
start_cleanup_deferral	stmt.c	/^start_cleanup_deferral ()$/;"	f
start_decl	c-decl.c	/^start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)$/;"	f
start_dynamic_cleanup	except.c	/^start_dynamic_cleanup (func, arg)$/;"	f	file:
start_dynamic_handler	except.c	/^start_dynamic_handler ()$/;"	f	file:
start_enum	c-decl.c	/^start_enum (name)$/;"	f
start_fct	graph.c	/^start_fct (fp)$/;"	f	file:
start_fde_sort	frame.c	/^start_fde_sort (fde_accumulator *accu, size_t count)$/;"	f	file:
start_function	c-decl.c	/^start_function (declspecs, declarator, prefix_attributes, attributes, nested)$/;"	f
start_identifier_warnings	tree.c	/^start_identifier_warnings ()$/;"	f
start_index	mips-tfile.c	/^  unsigned long	 start_index;	\/* starting index # of page *\/$/;"	m	struct:vlinks
start_init	c-typeck.c	/^start_init (decl, asmspec_tree, top_level)$/;"	f
start_label	stmt.c	/^	  rtx start_label;$/;"	m	struct:nesting::<anonymous>::<anonymous>
start_luid	loop.c	/^  int start_luid, end_luid;$/;"	m	struct:recombine_givs_stats
start_of_epilogue_needs	resource.c	/^static struct resources start_of_epilogue_needs;$/;"	v	file:
start_sequence	emit-rtl.c	/^start_sequence ()$/;"	f
start_sequence_for_rtl_expr	emit-rtl.c	/^start_sequence_for_rtl_expr (t)$/;"	f
start_struct	c-decl.c	/^start_struct (code, name)$/;"	f
startfile_prefixes	gcc.c	/^static struct path_prefix startfile_prefixes = { 0, 0, "startfile" };$/;"	v	file:
startfile_spec	gcc.c	/^static char *startfile_spec = STARTFILE_SPEC;$/;"	v	file:
static_chain_incoming_rtx	emit-rtl.c	/^rtx static_chain_incoming_rtx;	\/* (REG:Pmode STATIC_CHAIN_INCOMING_REGNUM) *\/$/;"	v
static_chain_rtx	emit-rtl.c	/^rtx static_chain_rtx;		\/* (REG:Pmode STATIC_CHAIN_REGNUM) *\/$/;"	v
static_ctors	c-decl.c	/^tree static_ctors, static_dtors;$/;"	v
static_dtors	c-decl.c	/^tree static_ctors, static_dtors;$/;"	v
static_reload_reg_p	reload.c	/^static short *static_reload_reg_p;$/;"	v	file:
static_specs	gcc.c	/^static struct spec_list static_specs[] = {$/;"	v	file:
staticp	tree.c	/^staticp (arg)$/;"	f
status	cse.c	/^    enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	m	struct:cse_basic_block_data::branch_path
status	dbxout.c	/^  enum typestatus status;$/;"	m	struct:typeinfo
std_include_entry	fix-header.c	/^struct std_include_entry {$/;"	s	file:
std_include_table	fix-header.c	/^struct std_include_entry std_include_table [] = {$/;"	v
std_prefix	prefix.c	/^static const char *std_prefix = PREFIX;$/;"	v	file:
stdc	enquire.c	378;"	d	file:
stdc	enquire.c	387;"	d	file:
stdio_h	fix-header.c	/^  stdio_h,$/;"	e	file:	enum:special_file
stdio_h	fix-header.c	128;"	d	file:
stdlib_h	fix-header.c	/^  stdlib_h,$/;"	e	file:	enum:special_file
stdlib_h	fix-header.c	132;"	d	file:
steal_delay_list_from_fallthrough	reorg.c	/^steal_delay_list_from_fallthrough (insn, condition, seq, $/;"	f	file:
steal_delay_list_from_target	reorg.c	/^steal_delay_list_from_target (insn, condition, seq, delay_list,$/;"	f	file:
stmt_count	c-parse.c	/^static int stmt_count;$/;"	v	file:
stmt_list_attribute	dwarfout.c	/^stmt_list_attribute (label)$/;"	f	file:
stmt_loop_nest_empty	stmt.c	/^stmt_loop_nest_empty ()$/;"	f
stmt_obstack	stmt.c	/^struct obstack stmt_obstack;$/;"	v
stop_search_p	reorg.c	/^stop_search_p (insn, labels_p)$/;"	f	file:
storage	combine.c	/^  char *storage;$/;"	m	struct:undobuf
store_arg	gcc.c	/^store_arg (arg, delete_always, delete_failure)$/;"	f	file:
store_bit_field	expmed.c	/^store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)$/;"	f
store_constructor	expr.c	/^store_constructor (exp, target, cleared)$/;"	f	file:
store_constructor_field	expr.c	/^store_constructor_field (target, bitsize, bitpos,$/;"	f	file:
store_expr	expr.c	/^store_expr (exp, target, want_value)$/;"	f
store_field	expr.c	/^store_field (target, bitsize, bitpos, mode, exp, value_mode,$/;"	f	file:
store_fixed_bit_field	expmed.c	/^store_fixed_bit_field (op0, offset, bitsize, bitpos, value, struct_align)$/;"	f	file:
store_init_value	c-typeck.c	/^store_init_value (decl, init)$/;"	f
store_one_arg	calls.c	/^store_one_arg (arg, argblock, may_be_alloca, variable_size,$/;"	f	file:
store_parm_decls	c-decl.c	/^store_parm_decls ()$/;"	f
store_ruid	reload1.c	/^    int store_ruid;$/;"	m	struct:
store_split_bit_field	expmed.c	/^store_split_bit_field (op0, bitsize, bitpos, value, align)$/;"	f	file:
store_unaligned_arguments_into_pseudos	calls.c	/^store_unaligned_arguments_into_pseudos (args, num_actuals)$/;"	f	file:
storedecls	c-decl.c	/^storedecls (decls)$/;"	f	file:
storetags	c-decl.c	/^storetags (tags)$/;"	f	file:
str	collect2.c	/^  strings_command_t		str;	\/* load commands strings section *\/$/;"	m	union:load_union
str	genattrtab.c	/^      char *str;		\/* The string (negative hash codes) *\/$/;"	m	union:attr_hash::<anonymous>
straighten_stack	reg-stack.c	/^straighten_stack (insn, regstack)$/;"	f	file:
strength_reduce	loop.c	/^strength_reduce (scan_start, end, loop_top, insn_count,$/;"	f	file:
strftime_format_type	c-common.c	/^		   strftime_format_type };$/;"	e	file:	enum:format_type
strict_low	genoutput.c	/^  char strict_low[MAX_MAX_OPERANDS];$/;"	m	struct:data
strict_low	genoutput.c	/^static char strict_low[MAX_MAX_OPERANDS];$/;"	v	file:
strict_memory_address_p	reload.c	/^strict_memory_address_p (mode, addr)$/;"	f
string	final.c	/^  const char *string;		\/* string *\/$/;"	m	struct:bb_str
string	mips-tdump.c	/^struct {short code; char string[10];} stab_names[]  = {$/;"	m	struct:
string	mips-tfile.c	/^  char		*string;	\/* string we are hashing *\/$/;"	m	struct:shash
string	toplev.c	/^  const char * string;$/;"	m	struct:
string_compare	hash.c	/^string_compare (k1, k2)$/;"	f
string_constant	expr.c	/^string_constant (arg, ptr_offset)$/;"	f	file:
string_copy	hash.c	/^string_copy (memory, k)$/;"	f
string_ftype_ptr_ptr	c-decl.c	/^tree string_ftype_ptr_ptr, int_ftype_string_string;$/;"	v
string_hash	hash.c	/^string_hash (k)$/;"	f
string_list	protoize.c	/^struct string_list$/;"	s	file:
string_list_cons	protoize.c	/^string_list_cons (string, rest)$/;"	f	file:
string_type_node	c-decl.c	/^tree string_type_node, const_string_type_node;$/;"	v
stringified	cpphash.c	/^  long raw, expanded, stringified;$/;"	m	struct:argdata
stringified_length	cccp.c	/^  int stringified_length;$/;"	m	struct:argdata
stringified_length	cpphash.c	/^  int stringified_length;$/;"	m	struct:argdata
stringify	cccp.c	/^    enum sharp_token_type stringify;	\/* set if a # operator before arg *\/$/;"	m	struct:definition::reflist
stringlist	cccp.c	/^static STRINGDEF *stringlist;$/;"	v	file:
stringlist_tailp	cccp.c	/^static STRINGDEF **stringlist_tailp = &stringlist;$/;"	v	file:
strings	mips-tfile.c	/^  varray_t	 strings;	\/* local strings *\/$/;"	m	struct:efdr
strip_attrs	c-common.c	/^strip_attrs (specs_attrs)$/;"	f
strip_compound_expr	fold-const.c	/^strip_compound_expr (t, s)$/;"	f	file:
strip_file_name	collect2.c	/^static char *strip_file_name;		\/* pathname of strip *\/$/;"	v	file:
strip_flag	collect2.c	/^static int strip_flag;			\/* true if -s *\/$/;"	v	file:
strip_off_ending	toplev.c	/^strip_off_ending (name, len)$/;"	f
strip_reg_name	varasm.c	/^strip_reg_name (name)$/;"	f	file:
stripattributes	dwarf2out.c	/^stripattributes (s)$/;"	f	file:
strlen_optab	optabs.c	/^optab strlen_optab;$/;"	v
strrchr	protoize.c	130;"	d	file:
struct_value_incoming_rtx	emit-rtl.c	/^rtx struct_value_incoming_rtx;	\/* (REG:Pmode STRUCT_VALUE_INCOMING_REGNUM) *\/$/;"	v
struct_value_rtx	emit-rtl.c	/^rtx struct_value_rtx;		\/* (REG:Pmode STRUCT_VALUE_REGNUM) *\/$/;"	v
stupid_find_reg	stupid.c	/^stupid_find_reg (call_preserved, class, mode,$/;"	f	file:
stupid_life_analysis	stupid.c	/^stupid_life_analysis (f, nregs, file)$/;"	f
stupid_mark_refs	stupid.c	/^stupid_mark_refs (x, chain)$/;"	f	file:
stupid_reg_compare	stupid.c	/^stupid_reg_compare (r1p, r2p)$/;"	f	file:
sub_optab	optabs.c	/^optab sub_optab;$/;"	v
subblocks_tag_transparent	c-decl.c	/^    char subblocks_tag_transparent;$/;"	m	struct:binding_level
subflg	real.c	/^static int subflg = 0;$/;"	v	file:
sublevel_ixpansions	c-iterate.c	/^struct iter_stack_node sublevel_ixpansions;$/;"	v
subreg_loc	reload.c	/^  rtx *subreg_loc;		\/* Location of SUBREG if WHERE is inside$/;"	m	struct:replacement
subreg_lowpart_p	emit-rtl.c	/^subreg_lowpart_p (x)$/;"	f
subreg_realpart_p	emit-rtl.c	/^subreg_realpart_p (x)$/;"	f
subroutine_number	genrecog.c	/^  int subroutine_number;	\/* Number of subroutine this node starts *\/$/;"	m	struct:decision
subscript_data_attribute	dwarfout.c	/^subscript_data_attribute (type)$/;"	f	file:
subst	combine.c	/^subst (x, from, to, in_dest, unique_copy)$/;"	f	file:
subst_asm_stack_regs	reg-stack.c	/^subst_asm_stack_regs (insn, regstack)$/;"	f	file:
subst_constants	integrate.c	/^subst_constants (loc, insn, map)$/;"	f	file:
subst_indexed_address	reload.c	/^subst_indexed_address (addr)$/;"	f	file:
subst_insn	combine.c	/^static rtx subst_insn;$/;"	v	file:
subst_low_cuid	combine.c	/^static int subst_low_cuid;$/;"	v	file:
subst_prev_insn	combine.c	/^static rtx subst_prev_insn;$/;"	v	file:
subst_reg_equivs	reload.c	/^subst_reg_equivs (ad, insn)$/;"	f	file:
subst_reg_equivs_changed	reload.c	/^static int subst_reg_equivs_changed;$/;"	v	file:
subst_reloads	reload.c	/^subst_reloads ()$/;"	f
subst_stack_regs	reg-stack.c	/^subst_stack_regs (insn, regstack)$/;"	f	file:
subst_stack_regs_pat	reg-stack.c	/^subst_stack_regs_pat (insn, regstack, pat)$/;"	f	file:
substitute_address	genattrtab.c	/^substitute_address (exp, no_address_fn, address_fn)$/;"	f	file:
substitute_in_expr	tree.c	/^substitute_in_expr (exp, f, r)$/;"	f
substr	protoize.c	/^substr (s1, s2)$/;"	f	file:
subtract_reg_term	unroll.c	/^subtract_reg_term (op, reg)$/;"	f	file:
succ	gcov.c	/^  struct adj_list *succ;$/;"	m	struct:bb_info
succ	profile.c	/^  struct adj_list *succ;$/;"	m	struct:bb_info
succ_count	gcov.c	/^  int succ_count;$/;"	m	struct:bb_info
succ_count	profile.c	/^  int succ_count;$/;"	m	struct:bb_info
succ_next	gcov.c	/^  struct adj_list *succ_next;$/;"	m	struct:adj_list
succ_next	profile.c	/^  struct adj_list *succ_next;$/;"	m	struct:adj_list
success	genrecog.c	/^  struct decision_head success;	\/* Nodes to test on success *\/$/;"	m	struct:decision
suffix	gcc.c	/^  const char *suffix;		\/* Use this compiler for input files$/;"	m	struct:compiler
suffix	gcc.c	/^  const char *suffix;	\/* suffix associated with the code.  *\/$/;"	m	struct:temp_name
supports_one_only	varasm.c	/^supports_one_only ()$/;"	f
suspend_momentary	tree.c	/^suspend_momentary ()$/;"	f
swap_condition	jump.c	/^swap_condition (code)$/;"	f
swap_rtx_condition	reg-stack.c	/^swap_rtx_condition (pat)$/;"	f	file:
swap_sort	haifa-sched.c	/^swap_sort (a, n)$/;"	f	file:
swap_sort	sched.c	/^swap_sort (a, n)$/;"	f	file:
swap_tree_comparison	fold-const.c	/^swap_tree_comparison (code)$/;"	f	file:
switches	gcc.c	/^static struct switchstr *switches;$/;"	v	file:
switches_need_spaces	gcc.c	/^static char *switches_need_spaces = SWITCHES_NEED_SPACES;$/;"	v	file:
switchstr	gcc.c	/^struct switchstr$/;"	s	file:
sword	frame.c	/^typedef          int  sword __attribute__ ((mode (SI)));$/;"	t	file:
sym	collect2.c	/^  symbols_command_t		sym;	\/* symbol sections *\/$/;"	m	union:load_union
sym	mips-tfile.c	/^  SYMR		sym	[ PAGE_SIZE \/ sizeof (SYMR)	 ];$/;"	m	union:page
sym_hdr	mips-tdump.c	/^HDRR	 sym_hdr;		\/* symbolic header *\/$/;"	v
sym_ptr	mips-tfile.c	/^  SYMR		*sym_ptr;	\/* local symbol pointer *\/$/;"	m	struct:shash
symbol	protoize.c	/^  const char *			symbol;		\/* -> to the hashed string *\/$/;"	m	struct:hash_table_entry_struct
symbol	tlink.c	/^} symbol;$/;"	t	file:
symbol_flags	fix-header.c	/^typedef int symbol_flags;$/;"	t	file:
symbol_hash_entry	tlink.c	/^typedef struct symbol_hash_entry$/;"	s	file:
symbol_hash_lookup	tlink.c	/^symbol_hash_lookup (string, create)$/;"	f	file:
symbol_hash_newfunc	tlink.c	/^symbol_hash_newfunc (entry, table, string)$/;"	f	file:
symbol_list	fix-header.c	/^struct symbol_list {$/;"	s	file:
symbol_pop	tlink.c	/^symbol_pop ()$/;"	f	file:
symbol_push	tlink.c	/^symbol_push (p)$/;"	f	file:
symbol_stack	tlink.c	/^struct symbol_stack_entry *symbol_stack;$/;"	v
symbol_stack_entry	tlink.c	/^struct symbol_stack_entry$/;"	s	file:
symbol_stack_obstack	tlink.c	/^struct obstack symbol_stack_obstack;$/;"	v
symbol_table	fix-header.c	/^struct symbol_list symbol_table[SYMBOL_TABLE_SIZE];$/;"	v
symbol_table	tlink.c	/^static struct hash_table symbol_table;$/;"	v	file:
symbolic_header	mips-tfile.c	/^static HDRR	symbolic_header;		\/* symbolic header *\/$/;"	v	file:
symbols	mips-tfile.c	/^  varray_t	 symbols;	\/* local symbols *\/$/;"	m	struct:efdr
symint_t	mips-tfile.c	/^typedef unsigned long symint_t;$/;"	t	file:
symlen	cccp.c	/^  int symlen;$/;"	m	struct:macrodef
symnam	cccp.c	/^  U_CHAR *symnam;$/;"	m	struct:macrodef
symout_time	toplev.c	/^int symout_time;$/;"	v
symtab	collect2.c	/^struct nlist *symtab;	\/* pointer to symbol table *\/$/;"	v
synth_mult	expmed.c	/^synth_mult (alg_out, t, cost_limit)$/;"	f	file:
sys_stat_h	fix-header.c	/^  sys_stat_h$/;"	e	file:	enum:special_file
sys_stat_h	fix-header.c	136;"	d	file:
syscalls_absolute_filename	protoize.c	/^static char * syscalls_absolute_filename;$/;"	v	file:
syscalls_filename	protoize.c	/^static const char syscalls_filename[] = "SYSCALLS.c";$/;"	v	file:
system_header_p	cccp.c	/^  char system_header_p;$/;"	m	struct:file_buf
system_include_depth	cccp.c	/^static int system_include_depth = 0;$/;"	v	file:
t	fold-const.c	/^  tree t;$/;"	m	struct:cb_args
t	fold-const.c	/^  tree t;$/;"	m	struct:fc_args
t_kind	tree.c	/^  t_kind,$/;"	e	file:
table	cse.c	/^static struct table_elt *table[NBUCKETS];$/;"	v	file:
table	print-tree.c	/^static struct bucket **table;$/;"	v	file:
table_elt	cse.c	/^struct table_elt$/;"	s	file:
tablejump_entry_p	profile.c	/^tablejump_entry_p (insn, label)$/;"	f
tag	mips-tfile.c	/^  tag_t		tag	[ PAGE_SIZE \/ sizeof (tag_t)	 ];$/;"	m	union:page
tag	mips-tfile.c	/^typedef struct tag {$/;"	s	file:
tag_hash	mips-tfile.c	/^static shash_t	*tag_hash     [SHASH_SIZE];$/;"	v	file:
tag_ptr	mips-tfile.c	/^  tag_t		*tag_ptr;	\/* tag pointer *\/$/;"	m	struct:shash
tag_ptr	mips-tfile.c	/^  tag_t *     tag_ptr;			\/* tag pointer *\/$/;"	m	struct:type_info
tag_strings	mips-tfile.c	/^static varray_t tag_strings	= INIT_VARRAY (char);$/;"	v	file:
tag_t	mips-tfile.c	/^} tag_t;$/;"	t	file:
tag_transparent	c-decl.c	/^    char tag_transparent;$/;"	m	struct:binding_level
tagged	doschk.c	/^  int tagged;$/;"	m	struct:ENT
tags	c-decl.c	/^    tree tags;$/;"	m	struct:binding_level
tail_recursion_args	stmt.c	/^tail_recursion_args (actuals, formals)$/;"	f	file:
tail_recursion_label	function.c	/^rtx tail_recursion_label;$/;"	v
tail_recursion_reentry	function.c	/^rtx tail_recursion_reentry;$/;"	v
taken	cse.c	/^    enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	g	file:	struct:cse_basic_block_data::branch_path
target	gcov.c	/^  int target;$/;"	m	struct:adj_list
target	profile.c	/^  int target;$/;"	m	struct:adj_list
target	stmt.c	/^  tree target;$/;"	m	struct:goto_fixup
target_bb	haifa-sched.c	/^static int target_bb;$/;"	v	file:
target_flags	libgcc2.c	3587;"	d	file:
target_flags	rtlanal.c	/^int target_flags;$/;"	v
target_hash_table	resource.c	/^static struct target_info **target_hash_table = NULL;$/;"	v	file:
target_info	resource.c	/^struct target_info$/;"	s	file:
target_isinf	fold-const.c	/^target_isinf (x)$/;"	f
target_isinf	real.c	/^target_isinf (x)$/;"	f
target_isnan	fold-const.c	/^target_isnan (x)$/;"	f
target_isnan	real.c	/^target_isnan (x)$/;"	f
target_machine	collect2.c	/^static char *target_machine = TARGET_MACHINE;$/;"	v	file:
target_negative	fold-const.c	/^target_negative (x)$/;"	f
target_negative	real.c	/^target_negative (x)$/;"	f
target_options	toplev.c	/^target_options [] = TARGET_OPTIONS;$/;"	v
target_rtl	stmt.c	/^  rtx target_rtl;$/;"	m	struct:goto_fixup
target_switches	toplev.c	/^target_switches [] = TARGET_SWITCHES;$/;"	v
target_temp_slot_level	function.c	/^int target_temp_slot_level;$/;"	v
target_temp_slot_level	stmt.c	/^	  int target_temp_slot_level;$/;"	m	struct:nesting::<anonymous>::<anonymous>
target_units	haifa-sched.c	/^static int target_units = 0;$/;"	v	file:
temp_bitmap	gcse.c	/^static sbitmap *temp_bitmap;$/;"	v	file:
temp_decl_firstobj	tree.c	/^char *temp_decl_firstobj;$/;"	v
temp_decl_obstack	tree.c	/^static struct obstack temp_decl_obstack;$/;"	v	file:
temp_file	gcc.c	/^struct temp_file$/;"	s	file:
temp_filename	gcc.c	/^static const char *temp_filename;$/;"	v	file:
temp_filename_length	gcc.c	/^static int temp_filename_length;$/;"	v	file:
temp_list_kind	tree.c	/^  temp_list_kind,$/;"	e	file:
temp_name	gcc.c	/^static struct temp_name {$/;"	s	file:
temp_names	gcc.c	/^} *temp_names;$/;"	v	file:
temp_obstack	genattrtab.c	/^struct obstack *temp_obstack = &obstack2;$/;"	v
temp_obstack	loop.c	/^static struct obstack temp_obstack;$/;"	v	file:
temp_slot	function.c	/^struct temp_slot$/;"	s	file:
temp_slot_level	function.c	/^int temp_slot_level;$/;"	v
temp_slots	function.c	/^struct temp_slot *temp_slots;$/;"	v
temp_tree_cons	tree.c	/^temp_tree_cons (purpose, value, chain)$/;"	f
template	genoutput.c	/^  char *template;		\/* string such as "movl %1,%0" *\/$/;"	m	struct:data
template_name_p	sdbout.c	/^template_name_p (name)$/;"	f	file:
temporary_allocation	tree.c	/^temporary_allocation ()$/;"	f
temporary_firstobj	collect2.c	/^char * temporary_firstobj;$/;"	v
temporary_firstobj	tree.c	/^char *temporary_firstobj;$/;"	v
temporary_obstack	collect2.c	/^struct obstack temporary_obstack;$/;"	v
temporary_obstack	tree.c	/^struct obstack temporary_obstack;$/;"	v
tension_vector_labels	jump.c	/^tension_vector_labels (x, idx)$/;"	f	file:
terminate_libfunc	optabs.c	/^rtx terminate_libfunc;$/;"	v
test_elt_one_int	genrecog.c	/^  int test_elt_one_int;		\/* Nonzero if should test XINT (rtl, 1) *\/$/;"	m	struct:decision
test_elt_zero_int	genrecog.c	/^  int test_elt_zero_int;	\/* Nonzero if should test XINT (rtl, 0) *\/$/;"	m	struct:decision
test_elt_zero_wide	genrecog.c	/^  int test_elt_zero_wide;	\/* Nonzero if should test XWINT (rtl, 0) *\/$/;"	m	struct:decision
test_for_current_value	genattrtab.c	/^test_for_current_value (space, ndim)$/;"	f	file:
tests	genrecog.c	/^  const char *tests;		\/* If nonzero predicate to call *\/$/;"	m	struct:decision
text_end_label	dwarf2out.c	/^static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
text_section	varasm.c	/^text_section ()$/;"	f
text_section_label	dwarf2out.c	/^static char text_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
tfaff	c-common.c	/^tfaff ()$/;"	f	file:
tfgets	tlink.c	/^tfgets (stream)$/;"	f	file:
tfile	mips-tdump.c	/^int	 tfile		= 0;	\/* no global header file *\/$/;"	v
tfile_fd	mips-tdump.c	/^int	 tfile_fd;		\/* file descriptor of .T file *\/$/;"	v
tfile_offset	mips-tdump.c	/^off_t	 tfile_offset;		\/* current offset in .T file *\/$/;"	v
thash	mips-tfile.c	/^  thash_t	thash	[ PAGE_SIZE \/ sizeof (thash_t)	 ];$/;"	m	union:page
thash	mips-tfile.c	/^typedef struct thash {$/;"	s	file:
thash_head	mips-tfile.c	/^  thash_t	*thash_head[THASH_SIZE];$/;"	m	struct:efdr
thash_t	mips-tfile.c	/^} thash_t;$/;"	t	file:
the_movables	loop.c	/^static struct movable *the_movables;$/;"	v	file:
thead	mips-tfile.c	/^  thead_t	thead	[ PAGE_SIZE \/ sizeof (thead_t)	 ];$/;"	m	union:page
thead	mips-tfile.c	/^typedef struct thead {$/;"	s	file:
thead_t	mips-tfile.c	/^} thead_t;$/;"	t	file:
thing	enquire.c	1698;"	d	file:
thing	enquire.c	1754;"	d	file:
thing	enquire.c	1840;"	d	file:
thing	enquire.c	1928;"	d	file:
this	recog.c	/^  int this, other;$/;"	m	struct:funny_match
this_basic_block	combine.c	/^static int this_basic_block;$/;"	v	file:
this_block	c-decl.c	/^    tree this_block;$/;"	m	struct:binding_level
this_insn	cse.c	/^static rtx this_insn;$/;"	v	file:
this_insn	local-alloc.c	/^static rtx this_insn;$/;"	v	file:
this_insn	reload.c	/^static rtx this_insn;$/;"	v	file:
this_insn_is_asm	reload.c	/^static int this_insn_is_asm;$/;"	v	file:
this_insn_number	local-alloc.c	/^static int this_insn_number;$/;"	v	file:
this_insn_sets	caller-save.c	/^static HARD_REG_SET this_insn_sets;$/;"	v	file:
this_is_asm_operands	final.c	/^static rtx this_is_asm_operands;$/;"	v	file:
this_is_library_file	gcc.c	/^static int this_is_library_file;$/;"	v	file:
this_is_output_file	gcc.c	/^static int this_is_output_file;$/;"	v	file:
thread_jumps	jump.c	/^thread_jumps (f, max_reg, flag_before_loop)$/;"	f
thread_prologue_and_epilogue_insns	function.c	/^thread_prologue_and_epilogue_insns (f)$/;"	f
throw_helper	libgcc2.c	/^throw_helper (eh, pc, my_udata, offset_p)$/;"	f	file:
throw_libfunc	optabs.c	/^rtx throw_libfunc;$/;"	v
tidy_fallthru_edge	flow.c	/^tidy_fallthru_edge (e, b, c)$/;"	f	file:
time_char_table	c-common.c	/^static format_char_info time_char_table[] = {$/;"	v	file:
timestamp	cccp.c	/^timestamp ()$/;"	f	file:
timestamp	cpphash.c	/^timestamp (pfile)$/;"	f	file:
tlink_execute	tlink.c	/^tlink_execute (prog, argv, redir)$/;"	f	file:
tlink_init	tlink.c	/^tlink_init ()$/;"	f	file:
tlink_verbose	tlink.c	/^static int tlink_verbose;$/;"	v	file:
to	expr.c	/^  rtx to;$/;"	m	struct:clear_by_pieces
to	expr.c	/^  rtx to;$/;"	m	struct:move_by_pieces
to	reload1.c	/^  int to;			\/* Register number used as replacement.  *\/$/;"	m	struct:elim_table
to	reload1.c	/^  int to;$/;"	m	struct:elim_table_1
to_addr	expr.c	/^  rtx to_addr;$/;"	m	struct:clear_by_pieces
to_addr	expr.c	/^  rtx to_addr;$/;"	m	struct:move_by_pieces
to_block	haifa-sched.c	/^    int to_block;$/;"	m	struct:
to_rtx	reload1.c	/^  rtx to_rtx;			\/* REG rtx for the replacement.  *\/$/;"	m	struct:elim_table
to_struct	expr.c	/^  int to_struct;$/;"	m	struct:clear_by_pieces
to_struct	expr.c	/^  int to_struct;$/;"	m	struct:move_by_pieces
toc4x	real.c	/^toc4x (x, y, mode)$/;"	f	file:
todec	real.c	/^todec (x, y)$/;"	f	file:
toe113	real.c	/^toe113 (a, b)$/;"	f	file:
toe24	real.c	/^toe24 (x, y)$/;"	f	file:
toe53	real.c	/^toe53 (x, y)$/;"	f	file:
toe64	real.c	/^toe64 (a, b)$/;"	f	file:
toibm	real.c	/^toibm (x, y, mode)$/;"	f	file:
token	cexp.c	/^  int token;$/;"	m	struct:token
token	cexp.c	/^struct token {$/;"	s	file:
token	cppexp.c	/^  int token;$/;"	m	struct:token
token	cppexp.c	/^struct token {$/;"	s	file:
token_buffer	c-lex.c	/^char *token_buffer;	\/* Pointer to token buffer.$/;"	v
tokenlist_list	cccp.c	/^struct tokenlist_list {$/;"	s	file:
tokens	cccp.c	/^  struct arglist *tokens;$/;"	m	struct:tokenlist_list
tokentab2	cexp.c	/^static struct token tokentab2[] = {$/;"	v	file:
tokentab2	cppexp.c	/^static struct token tokentab2[] = {$/;"	v	file:
tolimit	gmon.c	/^static long		tolimit = 0;$/;"	v	file:
too_large	haifa-sched.c	/^too_large (block, num_bbs, num_insns)$/;"	f	file:
tooldir_base_prefix	gcc.c	/^static const char *tooldir_base_prefix = TOOLDIR_BASE_PREFIX;$/;"	v	file:
tooldir_prefix	gcc.c	/^static const char *tooldir_prefix;$/;"	v	file:
top	reg-stack.c	/^  int top;			\/* index to top stack element *\/$/;"	m	struct:stack_def
top_label_entry	except.c	/^top_label_entry (stack)$/;"	f
top_level	c-typeck.c	/^  char top_level;$/;"	m	struct:initializer_stack
top_level_ixpansion_p	c-iterate.c	/^top_level_ixpansion_p ()$/;"	f	file:
top_of_stack	regclass.c	/^static rtx top_of_stack[MAX_MACHINE_MODE];$/;"	v	file:
toplev_inline_obstacks	tree.c	/^struct simple_obstack_stack *toplev_inline_obstacks;$/;"	v
tos	gmon.c	/^static struct tostruct	*tos = 0;$/;"	v	file:
total_alloc	mips-tfile.c	/^  int		 total_alloc;	\/* total number of allocations *\/$/;"	m	struct:alloc_info
total_attempts	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_benefit	loop.c	/^  int total_benefit;$/;"	m	struct:combine_givs_stats
total_extras	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_free	mips-tfile.c	/^  int		 total_free;	\/* total number of frees *\/$/;"	m	struct:alloc_info
total_hist_br_prob	profile.c	/^static int total_hist_br_prob[20];$/;"	v	file:
total_merges	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_num_arcs	profile.c	/^static int total_num_arcs;$/;"	v	file:
total_num_arcs_instrumented	profile.c	/^static int total_num_arcs_instrumented;$/;"	v	file:
total_num_blocks	profile.c	/^static int total_num_blocks;$/;"	v	file:
total_num_blocks_created	profile.c	/^static int total_num_blocks_created;$/;"	v	file:
total_num_branches	profile.c	/^static int total_num_branches;$/;"	v	file:
total_num_never_executed	profile.c	/^static int total_num_never_executed;$/;"	v	file:
total_num_passes	profile.c	/^static int total_num_passes;$/;"	v	file:
total_num_times_called	profile.c	/^static int total_num_times_called;$/;"	v	file:
total_pages	mips-tfile.c	/^  int		 total_pages;	\/* total number of pages allocated *\/$/;"	m	struct:alloc_info
total_successes	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
tq	mips-tdump.c	/^typedef enum tq {$/;"	g	file:
tq	mips-tfile.c	/^typedef enum tq {$/;"	g	file:
tq_Array	mips-tdump.c	/^  tq_Array	= tqArray,	\/* duh *\/$/;"	e	file:	enum:tq
tq_Array	mips-tfile.c	/^  tq_Array	= tqArray,	\/* duh *\/$/;"	e	file:	enum:tq
tq_Far	mips-tdump.c	/^  tq_Far	= tqFar,	\/* longer addressing - 8086\/8 land *\/$/;"	e	file:	enum:tq
tq_Far	mips-tfile.c	/^  tq_Far	= tqFar,	\/* longer addressing - 8086\/8 land *\/$/;"	e	file:	enum:tq
tq_Max	mips-tdump.c	/^  tq_Max	= tqMax		\/* Max type qualifier+1 *\/$/;"	e	file:	enum:tq
tq_Max	mips-tfile.c	/^  tq_Max	= tqMax		\/* Max type qualifier+1 *\/$/;"	e	file:	enum:tq
tq_Nil	mips-tdump.c	/^  tq_Nil	= tqNil,	\/* bt is what you see *\/$/;"	e	file:	enum:tq
tq_Nil	mips-tfile.c	/^  tq_Nil	= tqNil,	\/* bt is what you see *\/$/;"	e	file:	enum:tq
tq_Proc	mips-tdump.c	/^  tq_Proc	= tqProc,	\/* procedure *\/$/;"	e	file:	enum:tq
tq_Proc	mips-tfile.c	/^  tq_Proc	= tqProc,	\/* procedure *\/$/;"	e	file:	enum:tq
tq_Ptr	mips-tdump.c	/^  tq_Ptr	= tqPtr,	\/* pointer *\/$/;"	e	file:	enum:tq
tq_Ptr	mips-tfile.c	/^  tq_Ptr	= tqPtr,	\/* pointer *\/$/;"	e	file:	enum:tq
tq_Vol	mips-tdump.c	/^  tq_Vol	= tqVol,	\/* volatile *\/$/;"	e	file:	enum:tq
tq_Vol	mips-tfile.c	/^  tq_Vol	= tqVol,	\/* volatile *\/$/;"	e	file:	enum:tq
tq_t	mips-tdump.c	/^} tq_t;$/;"	t	file:
tq_t	mips-tfile.c	/^} tq_t;$/;"	t	file:
traditional	cccp.c	/^int traditional;$/;"	v
traditional	cexp.c	/^int traditional;$/;"	v
trampoline_address	function.c	/^trampoline_address (function)$/;"	f
trampoline_list	function.c	/^static tree trampoline_list;$/;"	v	file:
transfer_replacements	reload.c	/^transfer_replacements (to, from)$/;"	f
translate_name	prefix.c	/^translate_name (name)$/;"	f	file:
translate_options	gcc.c	/^translate_options (argcp, argvp)$/;"	f	file:
transp	gcse.c	/^static sbitmap *transp;$/;"	v	file:
transpout	gcse.c	/^static sbitmap *transpout;$/;"	v	file:
trap_rtx	optabs.c	/^static rtx trap_rtx;$/;"	v	file:
tree_check	tree.c	/^tree_check (node, code, file, line, nofatal)$/;"	f
tree_class_check	tree.c	/^tree_class_check (node, cl, file, line, nofatal)$/;"	f
tree_code_length	tree.c	/^int tree_code_length[MAX_TREE_CODES] = {$/;"	v
tree_code_name	tree.c	/^char *tree_code_name[MAX_TREE_CODES] = {$/;"	v
tree_code_type	tree.c	/^char tree_code_type[MAX_TREE_CODES] = {$/;"	v
tree_codes	gencheck.c	/^const char *tree_codes[] = {$/;"	v
tree_cons	tree.c	/^tree_cons (purpose, value, chain)$/;"	f
tree_int_cst_equal	tree.c	/^tree_int_cst_equal (t1, t2)$/;"	f
tree_int_cst_lt	tree.c	/^tree_int_cst_lt (t1, t2)$/;"	f
tree_int_cst_sgn	tree.c	/^tree_int_cst_sgn (t)$/;"	f
tree_last	tree.c	/^tree_last (chain)$/;"	f
tree_log2	tree.c	/^tree_log2 (expr)$/;"	f
tree_node_counts	tree.c	/^int tree_node_counts[(int)all_kinds];$/;"	v
tree_node_kind	tree.c	/^} tree_node_kind;$/;"	t	file:
tree_node_kind_names	tree.c	/^const char *tree_node_kind_names[] = {$/;"	v
tree_node_sizes	tree.c	/^int tree_node_sizes[(int)all_kinds];$/;"	v
tree_value	calls.c	/^  tree tree_value;$/;"	m	struct:arg_data
trigraph_pcp	cccp.c	/^trigraph_pcp (buf)$/;"	f	file:
trigraph_table	cppinit.c	/^U_CHAR trigraph_table[256] = { 0 };$/;"	v
trigraph_table	cppinit.c	/^U_CHAR trigraph_table[256] =$/;"	v
trim_filename	toplev.c	/^trim_filename (name)$/;"	f
true_dependence	alias.c	/^true_dependence (mem, mem_mode, x, varies)$/;"	f
true_regnum	jump.c	/^true_regnum (x)$/;"	f
true_rtx	genattrtab.c	/^static rtx true_rtx, false_rtx;$/;"	v	file:
truncdfsf2_libfunc	optabs.c	/^rtx truncdfsf2_libfunc;$/;"	v
trunctfdf2_libfunc	optabs.c	/^rtx trunctfdf2_libfunc;$/;"	v
trunctfsf2_libfunc	optabs.c	/^rtx trunctfsf2_libfunc;$/;"	v
truncxfdf2_libfunc	optabs.c	/^rtx truncxfdf2_libfunc;$/;"	v
truncxfsf2_libfunc	optabs.c	/^rtx truncxfsf2_libfunc;$/;"	v
truth_value_p	fold-const.c	/^truth_value_p (code)$/;"	f	file:
truthvalue_conversion	c-common.c	/^truthvalue_conversion (expr)$/;"	f
try_auto_increment	regmove.c	/^try_auto_increment (insn, inc_insn, inc_insn_set, reg, increment, pre)$/;"	f	file:
try_combine	combine.c	/^try_combine (i3, i2, i1)$/;"	f	file:
try_constants	integrate.c	/^try_constants (insn, map)$/;"	f
try_merge_delay_insns	reorg.c	/^try_merge_delay_insns (insn, thread)$/;"	f	file:
try_pre_increment	flow.c	/^try_pre_increment (insn, reg, amount)$/;"	f	file:
try_pre_increment_1	flow.c	/^try_pre_increment_1 (insn)$/;"	f	file:
try_replace_reg	gcse.c	/^try_replace_reg (from, to, insn)$/;"	f	file:
try_split	emit-rtl.c	/^try_split (pat, trial, last)$/;"	f
tst_optab	optabs.c	/^optab tst_optab;$/;"	v
ttype	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:
tweaked	tlink.c	/^  int tweaked;$/;"	m	struct:symbol_hash_entry
tweaking	tlink.c	/^  int tweaking;$/;"	m	struct:file_hash_entry
tweaking	tlink.c	/^  int tweaking;$/;"	m	struct:symbol_hash_entry
twoval_comparison_p	fold-const.c	/^twoval_comparison_p (arg, cval1, cval2, save_p)$/;"	f	file:
type	c-lex.c	/^  tree type;$/;"	m	struct:pf_args
type	c-typeck.c	/^  tree type;$/;"	m	struct:constructor_stack
type	cccp.c	/^  enum node_type type;		\/* Code which describes which directive.  *\/$/;"	m	struct:directive
type	cccp.c	/^  enum node_type type;		\/* type of last directive seen in this group *\/$/;"	m	struct:if_stack
type	cccp.c	/^  enum node_type type;		\/* type of special token *\/$/;"	m	struct:hashnode
type	cpplib.c	/^  enum node_type type;		\/* Code which describes which directive.  *\/$/;"	m	struct:directive
type	fold-const.c	/^  tree arg1, type;$/;"	m	struct:fc_args
type	mips-tfile.c	/^  AUXU		 type;		\/* type we are hashing *\/$/;"	m	struct:thash
type	mips-tfile.c	/^  st_t		 type;		\/* type of the node *\/$/;"	m	struct:scope
type	tree.c	/^  tree type, i;$/;"	m	struct:brfic_args
type	tree.c	/^  tree type;			\/* The type recorded here.  *\/$/;"	m	struct:type_hash
type_attribute	dwarfout.c	/^type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
type_for_mode	c-common.c	/^type_for_mode (mode, unsignedp)$/;"	f
type_for_size	c-common.c	/^type_for_size (bits, unsignedp)$/;"	f
type_from_format	gengenrtl.c	/^type_from_format (c)$/;"	f	file:
type_hash	tree.c	/^struct type_hash$/;"	s	file:
type_hash_add	tree.c	/^type_hash_add (hashcode, type)$/;"	f
type_hash_canon	tree.c	/^type_hash_canon (hashcode, type)$/;"	f
type_hash_list	tree.c	/^type_hash_list (list)$/;"	f
type_hash_lookup	tree.c	/^type_hash_lookup (hashcode, type)$/;"	f
type_hash_table	tree.c	/^struct type_hash *type_hash_table[TYPE_HASH_SIZE];$/;"	v
type_info	mips-tfile.c	/^typedef struct type_info {$/;"	s	file:
type_info_init	mips-tfile.c	/^static type_info_t type_info_init = {$/;"	v	file:
type_info_t	mips-tfile.c	/^} type_info_t;$/;"	t	file:
type_is_enum	dwarf2out.c	/^type_is_enum (type)$/;"	f	file:
type_is_fundamental	dwarfout.c	/^type_is_fundamental (type)$/;"	f	file:
type_list_equal	tree.c	/^type_list_equal (l1, l2)$/;"	f
type_lists_compatible_p	c-typeck.c	/^type_lists_compatible_p (args1, args2)$/;"	f	file:
type_main_variant	dwarf2out.c	/^type_main_variant (type)$/;"	f	file:
type_main_variant	dwarfout.c	/^type_main_variant (type)$/;"	f	file:
type_number	dbxout.c	/^  int type_number;$/;"	m	struct:typeinfo
type_of	enquire.c	/^char *type_of(x) int x; {$/;"	f
type_ok_for_scope	dwarfout.c	/^type_ok_for_scope (type, scope)$/;"	f	file:
type_ptr	mips-tfile.c	/^  AUXU		 *type_ptr;	\/* pointer to munge type info *\/$/;"	m	struct:forward
type_qualifiers	mips-tfile.c	/^  tq_t	      type_qualifiers[N_TQ];	\/* type qualifiers (ptr, func, array)*\/$/;"	m	struct:type_info
type_tag	dwarf2out.c	/^type_tag (type)$/;"	f	file:
type_tag	dwarfout.c	/^type_tag (type)$/;"	f	file:
type_to_string	mips-tdump.c	/^type_to_string (aux_ptr, index, fdp)$/;"	f
typeinfo	dbxout.c	/^struct typeinfo$/;"	s	file:
typerr	enquire.c	/^Procedure typerr(name, esign, esize, sign, size)$/;"	f
typestatus	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	g	file:
typevec	dbxout.c	/^struct typeinfo *typevec;$/;"	v
typevec_len	dbxout.c	/^static int typevec_len;$/;"	v	file:
u	c-typeck.c	/^    } u;$/;"	m	struct:spelling
u	genattrtab.c	/^    } u;$/;"	m	struct:attr_hash
u_bitmap	gcse.c	/^static sbitmap u_bitmap;$/;"	v	file:
u_define	enquire.c	/^Procedure u_define(desc, extra, sort, name, val, req, mark)$/;"	f
uaddr	frame.c	/^typedef unsigned int  uaddr __attribute__ ((mode (pointer)));$/;"	t	file:
ubyte	frame.c	/^typedef unsigned char ubyte;$/;"	t	file:
ubyte	mips-tfile.c	/^  unsigned char	ubyte	[ PAGE_SIZE ];$/;"	m	union:page
uc	fp-test.c	/^volatile unsigned char uc;$/;"	v
uchar	mips-tdump.c	54;"	d	file:
ucmp_optab	optabs.c	/^optab ucmp_optab;  \/* Used only for libcalls for unsigned comparisons.  *\/$/;"	v
udiv_optab	optabs.c	/^optab udiv_optab;$/;"	v
udivmod_optab	optabs.c	/^optab udivmod_optab;$/;"	v
ui	fp-test.c	/^volatile unsigned int ui;$/;"	v
ui32	crtstuff.c	/^typedef unsigned int ui32 __attribute__ ((mode (SI)));$/;"	t	file:
uid	resource.c	/^  int uid;			\/* INSN_UID of target.  *\/$/;"	m	struct:target_info
uid_align	final.c	/^static rtx *uid_align;$/;"	v	file:
uid_cuid	combine.c	/^static int *uid_cuid;$/;"	v	file:
uid_cuid	cse.c	/^static int *uid_cuid;$/;"	v	file:
uid_cuid	gcse.c	/^static int *uid_cuid;$/;"	v	file:
uid_loop_num	loop.c	/^int *uid_loop_num;$/;"	v
uid_luid	loop.c	/^int *uid_luid;$/;"	v
uid_shuid	final.c	/^static int *uid_shuid;$/;"	v	file:
uid_suid	stupid.c	/^static int *uid_suid;$/;"	v	file:
uid_to_ruid	reorg.c	/^static int *uid_to_ruid;$/;"	v	file:
uid_volatile	flow.c	/^static bitmap uid_volatile;$/;"	v	file:
uint	mips-tdump.c	56;"	d	file:
ul	fp-test.c	/^volatile unsigned long ul;$/;"	v
ulong	mips-tdump.c	57;"	d	file:
ultoe	real.c	/^ultoe (lp, y)$/;"	f	file:
umax_optab	optabs.c	/^optab umax_optab;$/;"	v
umin_optab	optabs.c	/^optab umin_optab;$/;"	v
umod_optab	optabs.c	/^optab umod_optab;$/;"	v
umul_highpart_optab	optabs.c	/^optab umul_highpart_optab;$/;"	v
umul_widen_optab	optabs.c	/^optab umul_widen_optab;$/;"	v
un	varasm.c	/^  } un;$/;"	m	struct:rtx_const
unaligned	frame.c	/^union unaligned {$/;"	u	file:
unallocated	mips-tfile.c	/^  int		 unallocated;	\/* number of elements unallocated on page *\/$/;"	m	struct:alloc_info
unary_complex_lvalue	c-typeck.c	/^unary_complex_lvalue (code, arg)$/;"	f	file:
undeclared_variable_notice	c-parse.c	/^static int undeclared_variable_notice;$/;"	v	file:
undef	cppinit.c	/^  int undef;$/;"	m	struct:pending_option
undefined	collect2.c	/^static struct head undefined;		\/* list of undefined symbols *\/$/;"	v	file:
undo	combine.c	/^struct undo$/;"	s	file:
undo_all	combine.c	/^undo_all ()$/;"	f	file:
undobuf	combine.c	/^static struct undobuf undobuf;$/;"	v	file:
undobuf	combine.c	/^struct undobuf$/;"	s	file:
undos	combine.c	/^  struct undo *undos;$/;"	m	struct:undobuf
unexpand_if_needed	protoize.c	/^unexpand_if_needed (aux_info_line)$/;"	f	file:
unexpansion	protoize.c	/^typedef struct unexpansion_struct unexpansion;$/;"	t	file:
unexpansion_struct	protoize.c	/^struct unexpansion_struct {$/;"	s	file:
unexpansions	protoize.c	/^static const unexpansion unexpansions[] = {$/;"	v	file:
unextend	fold-const.c	/^unextend (c, p, unsignedp, mask)$/;"	f	file:
unfilled_fields	c-typeck.c	/^  tree unfilled_fields;$/;"	m	struct:constructor_stack
unfilled_firstobj	reorg.c	/^static rtx *unfilled_firstobj;$/;"	v	file:
unfilled_index	c-typeck.c	/^  tree unfilled_index;$/;"	m	struct:constructor_stack
unfilled_slots_base	reorg.c	162;"	d	file:
unfilled_slots_next	reorg.c	165;"	d	file:
unfilled_slots_obstack	reorg.c	/^static struct obstack unfilled_slots_obstack;$/;"	v	file:
uninitialized_vars_warning	function.c	/^uninitialized_vars_warning (block)$/;"	f
unique	gcc.c	/^  int unique;		\/* Indicates whether %g or %u\/%U was used.  *\/$/;"	m	struct:temp_name
unique_id	alias.c	/^static int unique_id;$/;"	v	file:
unit_last_insn	haifa-sched.c	/^static rtx unit_last_insn[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
unit_last_insn	sched.c	/^static rtx unit_last_insn[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
unit_n_insns	haifa-sched.c	/^static int unit_n_insns[FUNCTION_UNITS_SIZE];$/;"	v	file:
unit_n_insns	sched.c	/^static int unit_n_insns[FUNCTION_UNITS_SIZE];$/;"	v	file:
unit_tick	haifa-sched.c	/^static int unit_tick[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
unit_tick	sched.c	/^static int unit_tick[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
units	genattrtab.c	/^static struct function_unit *units;$/;"	v	file:
unknown_address_altered	loop.c	/^static int unknown_address_altered;$/;"	v	file:
unknown_tag	mips-tfile.c	/^  int	      unknown_tag;		\/* this is an unknown tag *\/$/;"	m	struct:type_info
unlink_line_notes	haifa-sched.c	/^unlink_line_notes (insn, tail)$/;"	f	file:
unlink_notes	sched.c	/^unlink_notes (insn, tail)$/;"	f	file:
unlink_other_notes	haifa-sched.c	/^unlink_other_notes (insn, tail)$/;"	f	file:
unmark_used_attributes	genattrtab.c	/^unmark_used_attributes (list, space, ndim)$/;"	f	file:
unnamed_struct_number	sdbout.c	/^static int unnamed_struct_number = 0;$/;"	v	file:
unroll_block_trees	stmt.c	/^unroll_block_trees ()$/;"	f
unroll_loop	unroll.c	/^unroll_loop (loop_end, insn_count, loop_start, end_insert_before,$/;"	f
unroll_types	unroll.c	/^enum unroll_types { UNROLL_COMPLETELY, UNROLL_MODULO, UNROLL_NAIVE };$/;"	g	file:
unsafe_chars	cpphash.c	/^unsafe_chars (c1, c2)$/;"	f	file:
unsave_expr	tree.c	/^unsave_expr (expr)$/;"	f
unsave_expr_now	tree.c	/^unsave_expr_now (expr)$/;"	f
unshare_all_rtl	emit-rtl.c	/^unshare_all_rtl (insn)$/;"	f
unsigned	libgcc2.c	1078;"	d	file:
unsigned	libgcc2.c	1100;"	d	file:
unsigned	libgcc2.c	1122;"	d	file:
unsigned	libgcc2.c	1151;"	d	file:
unsigned	libgcc2.c	116;"	d	file:
unsigned_char_type_node	c-decl.c	/^tree unsigned_char_type_node;$/;"	v
unsigned_condition	jump.c	/^unsigned_condition (code)$/;"	f
unsigned_conversion_warning	c-common.c	/^unsigned_conversion_warning (result, operand)$/;"	f
unsigned_intDI_type_node	c-decl.c	/^tree unsigned_intDI_type_node;$/;"	v
unsigned_intHI_type_node	c-decl.c	/^tree unsigned_intHI_type_node;$/;"	v
unsigned_intQI_type_node	c-decl.c	/^tree unsigned_intQI_type_node;$/;"	v
unsigned_intSI_type_node	c-decl.c	/^tree unsigned_intSI_type_node;$/;"	v
unsigned_intTI_type_node	c-decl.c	/^tree unsigned_intTI_type_node;$/;"	v
unsigned_p	genattrtab.c	/^  unsigned unsigned_p	: 1;	\/* Make the output function unsigned int.  *\/$/;"	m	struct:attr_desc
unsigned_type	c-typeck.c	/^unsigned_type (type)$/;"	f
unsigned_type_node	c-decl.c	/^tree unsigned_type_node;$/;"	v
unsigned_wchar_type_node	c-decl.c	/^tree unsigned_wchar_type_node;$/;"	v
unsignedp	calls.c	/^  int unsignedp;$/;"	m	struct:arg_data
unsignedp	cppexp.c	/^    char unsignedp;    \/* true if value should be treated as unsigned *\/$/;"	m	struct:operation
unused_expr_list	haifa-sched.c	/^static rtx unused_expr_list;$/;"	v	file:
unused_expr_list	sched.c	/^static rtx unused_expr_list;$/;"	v	file:
unused_insn_chains	reload1.c	/^static struct insn_chain *unused_insn_chains = 0;$/;"	v	file:
unused_insn_list	haifa-sched.c	/^static rtx unused_insn_list;$/;"	v	file:
unused_insn_list	sched.c	/^static rtx unused_insn_list;$/;"	v	file:
unused_prefix_warnings	gcc.c	/^unused_prefix_warnings (pprefix)$/;"	f	file:
update_bbs	haifa-sched.c	/^    bblst update_bbs;$/;"	m	struct:
update_block	reorg.c	/^update_block (insn, where)$/;"	f	file:
update_eliminable_offsets	reload1.c	/^update_eliminable_offsets ()$/;"	f	file:
update_eliminables	reload1.c	/^update_eliminables (pset)$/;"	f	file:
update_equiv_regs	local-alloc.c	/^update_equiv_regs ()$/;"	f	file:
update_flow_info	haifa-sched.c	/^update_flow_info (notes, first, last, orig_insn)$/;"	f
update_flow_info	sched.c	/^update_flow_info (notes, first, last, orig_insn)$/;"	f
update_giv_derive	loop.c	/^update_giv_derive (p)$/;"	f	file:
update_headers	mips-tfile.c	/^update_headers __proto((void))$/;"	f
update_live	haifa-sched.c	/^update_live (insn, src)$/;"	f	file:
update_live_1	haifa-sched.c	/^update_live_1 (src, x)$/;"	f	file:
update_live_status	resource.c	/^update_live_status (dest, x)$/;"	f	file:
update_n_sets	haifa-sched.c	/^update_n_sets (x, inc)$/;"	f	file:
update_n_sets	sched.c	/^update_n_sets (x, inc)$/;"	f	file:
update_path	prefix.c	/^update_path (path, key)$/;"	f
update_qty_class	local-alloc.c	/^update_qty_class (qty, reg)$/;"	f	file:
update_reg_dead_notes	reorg.c	/^update_reg_dead_notes (insn, delayed_insn)$/;"	f	file:
update_reg_last_use	loop.c	/^update_reg_last_use (x, insn)$/;"	f	file:
update_reg_unused_notes	reorg.c	/^update_reg_unused_notes (insn, redundant_insn)$/;"	f	file:
update_reg_usage	haifa-sched.c	/^update_reg_usage ()$/;"	f	file:
update_table_tick	combine.c	/^update_table_tick (x)$/;"	f	file:
update_temp_slot_address	function.c	/^update_temp_slot_address (old, new)$/;"	f
upper	floatlib.c	/^      long upper;$/;"	m	struct:double_long::<anonymous>
us	fp-test.c	/^volatile unsigned short us;$/;"	v
usage	gencheck.c	/^void usage ()$/;"	f
usage	protoize.c	/^usage ()$/;"	f	file:
use	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	m	struct:match
use_cost_table	stmt.c	/^static int use_cost_table;$/;"	v	file:
use_count	cccp.c	/^  char use_count;$/;"	m	struct:argdata
use_count	cpphash.c	/^  char use_count;$/;"	m	struct:argdata
use_crosses_set_p	combine.c	/^use_crosses_set_p (x, from_cuid)$/;"	f	file:
use_extensions_p	toplev.c	/^  int use_extensions_p;$/;"	m	struct:
use_gnu_debug_info_extensions	toplev.c	/^int use_gnu_debug_info_extensions = 0;$/;"	v
use_group_regs	expr.c	/^use_group_regs (call_fusage, regs)$/;"	f
use_import_list	collect2.c	/^use_import_list (prog_name)$/;"	f	file:
use_index	reload1.c	/^    int use_index;$/;"	m	struct:
use_mmap	collect2.c	/^  int	use_mmap;			\/* != 0 if mmap'ed *\/$/;"	m	struct:file_info
use_reg	expr.c	/^use_reg (call_fusage, reg)$/;"	f
use_regs	expr.c	/^use_regs (call_fusage, regno, nregs)$/;"	f
use_related_value	cse.c	/^use_related_value (x, elt)$/;"	f	file:
use_ruid	reload1.c	/^    int use_ruid;$/;"	m	struct:
use_variable	function.c	/^use_variable (rtl)$/;"	f
use_variable_after	function.c	/^use_variable_after (rtl, insn)$/;"	f
used_arg	gcc.c	/^used_arg (p, len)$/;"	f	file:
used_flag_ptr	gcc.c	/^  int *used_flag_ptr;	      \/* 1 if a file was found with this prefix.  *\/$/;"	m	struct:prefix_list
used_p	regclass.c	/^  char used_p;			\/* non-zero if this has been used previously *\/$/;"	m	struct:reg_info_data
used_spill_regs	reload1.c	/^static HARD_REG_SET used_spill_regs;$/;"	v	file:
usep	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	m	struct:reg_use
user_def_type_attribute	dwarfout.c	/^user_def_type_attribute (type)$/;"	f	file:
user_label_prefix	cccp.c	/^char * user_label_prefix = USER_LABEL_PREFIX;$/;"	v
user_label_prefix	cppulp.c	/^const char *user_label_prefix = 0;$/;"	v
user_label_prefix	toplev.c	/^const char *user_label_prefix;$/;"	v
user_specs	gcc.c	/^struct user_specs {$/;"	s	file:
user_specs_head	gcc.c	/^static struct user_specs *user_specs_head, *user_specs_tail;$/;"	v	file:
user_specs_tail	gcc.c	/^static struct user_specs *user_specs_head, *user_specs_tail;$/;"	v	file:
uses	reload1.c	/^  unsigned int uses;$/;"	m	struct:hard_reg_n_uses
ushort	mips-tdump.c	55;"	d	file:
using_eh_for_cleanups	stmt.c	/^using_eh_for_cleanups ()$/;"	f
using_eh_for_cleanups_p	stmt.c	/^static int using_eh_for_cleanups_p = 0;$/;"	v	file:
uword	frame.c	/^typedef unsigned int  uword __attribute__ ((mode (SI)));$/;"	t	file:
v	dwarf2out.c	/^  v;$/;"	m	struct:dw_val_struct
v_cpp_error	cpplib.c	/^v_cpp_error (pfile, msgid, ap)$/;"	f	file:
v_cpp_error_with_line	cpplib.c	/^v_cpp_error_with_line (pfile, line, column, msgid, ap)$/;"	f	file:
v_cpp_message	cpperror.c	/^v_cpp_message (pfile, is_error, msgid, ap)$/;"	f
v_cpp_warning	cpplib.c	/^v_cpp_warning (pfile, msgid, ap)$/;"	f	file:
v_cpp_warning_with_line	cpplib.c	/^v_cpp_warning_with_line (pfile, line, column, msgid, ap)$/;"	f	file:
v_error_for_asm	toplev.c	/^v_error_for_asm (insn, msgid, ap)$/;"	f	file:
v_error_with_decl	toplev.c	/^v_error_with_decl (decl, msgid, ap)$/;"	f	file:
v_error_with_file_and_line	toplev.c	/^v_error_with_file_and_line (file, line, msgid, ap)$/;"	f	file:
v_fatal	fix-header.c	/^v_fatal (str, ap)$/;"	f	file:
v_message_with_decl	toplev.c	/^v_message_with_decl (decl, warn, msgid, ap)$/;"	f	file:
v_message_with_file_and_line	toplev.c	/^v_message_with_file_and_line (file, line, warn, msgid, ap)$/;"	f	file:
v_pedwarn_with_decl	toplev.c	/^v_pedwarn_with_decl (decl, msgid, ap)$/;"	f	file:
v_pedwarn_with_file_and_line	toplev.c	/^v_pedwarn_with_file_and_line (file, line, msgid, ap)$/;"	f	file:
v_warning_for_asm	toplev.c	/^v_warning_for_asm (insn, msgid, ap)$/;"	f	file:
v_warning_with_decl	toplev.c	/^v_warning_with_decl (decl, msgid, ap)$/;"	f	file:
v_warning_with_file_and_line	toplev.c	/^v_warning_with_file_and_line (file, line, msgid, ap)$/;"	f	file:
va_args_name	cccp.c	/^static char va_args_name[] = "__VA_ARGS__";$/;"	v	file:
val_addr	dwarf2out.c	/^      char *val_addr;$/;"	m	union:dw_val_struct::<anonymous>
val_class	dwarf2out.c	/^  dw_val_class val_class;$/;"	m	struct:dw_val_struct
val_die_ref	dwarf2out.c	/^      dw_die_ref val_die_ref;$/;"	m	union:dw_val_struct::<anonymous>
val_fde_index	dwarf2out.c	/^      unsigned val_fde_index;$/;"	m	union:dw_val_struct::<anonymous>
val_flag	dwarf2out.c	/^      unsigned char val_flag;$/;"	m	union:dw_val_struct::<anonymous>
val_float	dwarf2out.c	/^      dw_float_const val_float;$/;"	m	union:dw_val_struct::<anonymous>
val_int	dwarf2out.c	/^      long int val_int;$/;"	m	union:dw_val_struct::<anonymous>
val_lbl_id	dwarf2out.c	/^      char *val_lbl_id;$/;"	m	union:dw_val_struct::<anonymous>
val_loc	dwarf2out.c	/^      dw_loc_descr_ref val_loc;$/;"	m	union:dw_val_struct::<anonymous>
val_long_long	dwarf2out.c	/^      dw_long_long_const val_long_long;$/;"	m	union:dw_val_struct::<anonymous>
val_str	dwarf2out.c	/^      char *val_str;$/;"	m	union:dw_val_struct::<anonymous>
val_unsigned	dwarf2out.c	/^      long unsigned val_unsigned;$/;"	m	union:dw_val_struct::<anonymous>
valid_compound_expr_initializer	c-typeck.c	/^valid_compound_expr_initializer (value, endtype)$/;"	f	file:
valid_initial_value_p	loop.c	/^valid_initial_value_p (x, insn, call_seen, loop_start)$/;"	f	file:
valid_lang_attribute	c-common.c	/^int (*valid_lang_attribute) PROTO ((tree, tree, tree, tree))$/;"	v
valid_machine_attribute	tree.c	/^valid_machine_attribute (attr_name, attr_args, decl, type)$/;"	f
validate_all_switches	gcc.c	/^validate_all_switches ()$/;"	f	file:
validate_change	recog.c	/^validate_change (object, loc, new, in_group)$/;"	f
validate_else	cccp.c	/^validate_else (p, limit)$/;"	f	file:
validate_else	cpplib.c	/^validate_else (pfile, directive)$/;"	f	file:
validate_equiv_mem	local-alloc.c	/^validate_equiv_mem (start, reg, memref)$/;"	f	file:
validate_equiv_mem_from_store	local-alloc.c	/^validate_equiv_mem_from_store (dest, set)$/;"	f	file:
validate_insn_alternatives	genoutput.c	/^validate_insn_alternatives (d)$/;"	f	file:
validate_replace_rtx	recog.c	/^validate_replace_rtx (from, to, insn)$/;"	f
validate_replace_rtx_1	recog.c	/^validate_replace_rtx_1 (loc, from, to, object)$/;"	f	file:
validate_replace_rtx_group	recog.c	/^validate_replace_rtx_group (from, to, insn)$/;"	f
validate_replace_src	recog.c	/^validate_replace_src (from, to, insn)$/;"	f
validate_switches	gcc.c	/^validate_switches (start)$/;"	f	file:
validated	gcc.c	/^  int validated;$/;"	m	struct:switchstr
validize_mem	explow.c	/^validize_mem (ref)$/;"	f
value	c-lex.c	/^  REAL_VALUE_TYPE value;$/;"	m	struct:pf_args
value	c-typeck.c	/^  tree value;$/;"	m	struct:init_node
value	calls.c	/^  rtx value;$/;"	m	struct:arg_data
value	cccp.c	/^  struct tokenlist_list *value;$/;"	m	struct:assertion_hashnode
value	cccp.c	/^  union hashval value;		\/* pointer to expansion, or whatever *\/$/;"	m	struct:hashnode
value	cexp.c	/^  struct constant {HOST_WIDEST_INT value; int signedp;} integer;$/;"	m	struct:<anonymous>::constant
value	cppexp.c	/^    HOST_WIDEST_INT value;        \/* The value logically "right" of op.  *\/$/;"	m	struct:operation
value	genattrtab.c	/^  rtx value;			\/* Value of attribute.  *\/$/;"	m	struct:attr_value
value	tlink.c	/^  file *value;$/;"	m	struct:file_stack_entry
value	tlink.c	/^  symbol *value;$/;"	m	struct:symbol_stack_entry
value	toplev.c	/^  int    value;$/;"	m	struct:
value_format	dwarf2out.c	/^value_format (v)$/;"	f	file:
value_member	tree.c	/^value_member (elem, list)$/;"	f
values	genattrtab.c	/^  rtx values;			\/* List of attribute values used.  *\/$/;"	m	struct:dimension
var_labelno	varasm.c	/^int var_labelno;$/;"	v
var_offset	function.c	/^static int var_offset;$/;"	v	file:
var_rtx	expr.c	/^var_rtx (exp)$/;"	f	file:
var_temp_slot_level	function.c	/^int var_temp_slot_level;$/;"	v
varargs_style_indicator	protoize.c	/^static const char *varargs_style_indicator = STRINGIFY (va_alist);$/;"	v	file:
varconst_time	toplev.c	/^int varconst_time;$/;"	v
variable	toplev.c	/^  const char ** variable;$/;"	m	struct:
variable	toplev.c	/^  int *  variable;$/;"	m	struct:
variable_section	varasm.c	/^variable_section (decl, reloc)$/;"	f
variable_size	stor-layout.c	/^variable_size (size)$/;"	f
variant	cse.c	/^  } variant;$/;"	m	struct:cse_reg_info
varray	mips-tfile.c	/^typedef struct varray {$/;"	s	file:
varray_grow	varray.c	/^varray_grow (va, n)$/;"	f
varray_init	varray.c	/^varray_init (num_elements, element_size, name)$/;"	f
varray_t	mips-tfile.c	/^} varray_t;$/;"	t	file:
vec_idx	genattrtab.c	/^  int vec_idx;			\/* Index of attribute vector in `def'.  *\/$/;"	m	struct:insn_def
vec_kind	tree.c	/^  vec_kind,$/;"	e	file:
vecelt	genpeep.c	/^  int vecelt;$/;"	m	struct:link
veclen	genrecog.c	/^  int veclen;			\/* Length of vector, if nonzero *\/$/;"	m	struct:decision
verbose	fix-header.c	/^int verbose = 0;$/;"	v
verbose	gen-protos.c	/^int verbose = 0;$/;"	v
verbose_flag	gcc.c	/^static int verbose_flag;$/;"	v	file:
verify_addresses	unroll.c	/^verify_addresses (v, giv_inc, unroll_number)$/;"	f	file:
verify_dominator	loop.c	/^verify_dominator (loop_number)$/;"	f	file:
verify_flow_info	flow.c	/^verify_flow_info ()$/;"	f
verify_initial_elim_offsets	reload1.c	/^verify_initial_elim_offsets ()$/;"	f	file:
verror	cccp.c	/^verror (msgid, args)$/;"	f
verror	toplev.c	/^verror (msgid, ap)$/;"	f	file:
verror_with_line	cccp.c	/^verror_with_line (line, msgid, args)$/;"	f	file:
version	frame.c	/^  ubyte version;$/;"	m	struct:dwarf_cie
version	mips-tfile.c	/^static int	version		= 0; 		\/* print version # *\/$/;"	v	file:
version_code	except.c	/^static short version_code = 0; $/;"	v	file:
version_flag	protoize.c	/^static int version_flag = 0;		\/* Print our version number.  *\/$/;"	v	file:
version_string	version.c	/^char *version_string = "2.95.2-2 19991024 (release)";$/;"	v
vfatal	toplev.c	/^vfatal (msgid, ap)$/;"	f	file:
vflag	collect2.c	/^int vflag;				\/* true if -v *\/$/;"	v
vfork	collect2.c	41;"	d	file:
virtuals_instantiated	function.c	/^static int virtuals_instantiated;$/;"	v	file:
vis_no_unit	haifa-sched.c	/^rtx vis_no_unit[10];$/;"	v
visit_each_hash_node	protoize.c	/^visit_each_hash_node (hash_tab_p, func)$/;"	f	file:
visual_tbl	haifa-sched.c	/^char *visual_tbl;$/;"	v
visualize_no_unit	haifa-sched.c	/^visualize_no_unit (insn)$/;"	f	file:
visualize_scheduled_insns	haifa-sched.c	/^visualize_scheduled_insns (b, clock)$/;"	f	file:
visualize_stall_cycles	haifa-sched.c	/^visualize_stall_cycles (b, stalls)$/;"	f	file:
vlinks	mips-tfile.c	/^  vlinks_t	vlinks	[ PAGE_SIZE \/ sizeof (vlinks_t)	 ];$/;"	m	union:page
vlinks	mips-tfile.c	/^typedef struct vlinks {$/;"	s	file:
vlinks_t	mips-tfile.c	/^} vlinks_t;$/;"	t	file:
vmessage	toplev.c	/^vmessage (prefix, msgid, ap)$/;"	f	file:
vms_fopen	toplev.c	/^vms_fopen (fname, type)$/;"	f	file:
vnotice	cccp.c	/^vnotice (msgid, args)$/;"	f	file:
vnotice	toplev.c	/^vnotice (file, msgid, ap)$/;"	f	file:
void_ftype_ptr_int_int	c-decl.c	/^tree void_ftype_ptr_ptr_int, int_ftype_ptr_ptr_int, void_ftype_ptr_int_int;$/;"	v
void_ftype_ptr_ptr_int	c-decl.c	/^tree void_ftype_ptr_ptr_int, int_ftype_ptr_ptr_int, void_ftype_ptr_int_int;$/;"	v
void_type	mips-tfile.c	/^  symint_t	 void_type;	\/* aux. pointer to 'void' type *\/$/;"	m	struct:efdr
void_type_info	mips-tfile.c	/^static type_info_t void_type_info;$/;"	v	file:
void_type_node	c-decl.c	/^tree void_type_node;$/;"	v
volatile	protoize.c	37;"	d	file:
volatile_insn_p	rtlanal.c	/^volatile_insn_p (x)$/;"	f
volatile_ok	recog.c	/^int volatile_ok;$/;"	v
volatile_refs_p	rtlanal.c	/^volatile_refs_p (x)$/;"	f
vpedwarn	toplev.c	/^vpedwarn (msgid, ap)$/;"	f	file:
vsorry	toplev.c	/^vsorry (msgid, ap)$/;"	f	file:
vwarning	cccp.c	/^vwarning (msgid, args)$/;"	f	file:
vwarning	toplev.c	/^vwarning (msgid, ap)$/;"	f	file:
vwarning_with_line	cccp.c	/^vwarning_with_line (line, msgid, args)$/;"	f	file:
walk_alter_subreg	final.c	/^walk_alter_subreg (x)$/;"	f	file:
walk_attr_value	genattrtab.c	/^walk_attr_value (exp)$/;"	f	file:
walk_fixup_memory_subreg	function.c	/^walk_fixup_memory_subreg (x, insn, uncritical)$/;"	f	file:
walk_insn_part	genconfig.c	/^walk_insn_part (part, recog_p, non_pc_set_src)$/;"	f	file:
walk_rtx	genextract.c	/^walk_rtx (x, path)$/;"	f	file:
want_aux	mips-tdump.c	/^int	 want_aux	= 0;	\/* print aux table *\/$/;"	v
want_line	mips-tdump.c	/^int	 want_line	= 0;	\/* print line numbers *\/$/;"	v
want_rfd	mips-tdump.c	/^int	 want_rfd	= 0;	\/* print relative file desc's *\/$/;"	v
want_scope	mips-tdump.c	/^int	 want_scope	= 0;	\/* print scopes for every symbol *\/$/;"	v
want_to_gcse_p	gcse.c	/^want_to_gcse_p (x)$/;"	f	file:
warn_B	gcc.c	/^static int warn_B;$/;"	v	file:
warn_about_return_type	c-decl.c	/^  int warn_about_return_type;$/;"	m	struct:c_function
warn_about_return_type	c-decl.c	/^static int warn_about_return_type;$/;"	v	file:
warn_aggregate_return	toplev.c	/^int warn_aggregate_return;$/;"	v
warn_bad_function_cast	c-decl.c	/^int warn_bad_function_cast;$/;"	v
warn_cast_align	toplev.c	/^int warn_cast_align;$/;"	v
warn_cast_qual	c-decl.c	/^int warn_cast_qual;$/;"	v
warn_char_subscripts	c-decl.c	/^int warn_char_subscripts = 0;$/;"	v
warn_comments	cccp.c	/^static int warn_comments;$/;"	v	file:
warn_conversion	c-decl.c	/^int warn_conversion;$/;"	v
warn_for_assignment	c-typeck.c	/^warn_for_assignment (msgid, opname, function, argnum)$/;"	f	file:
warn_format	c-decl.c	/^int warn_format;$/;"	v
warn_id_clash	toplev.c	/^int warn_id_clash;$/;"	v
warn_if_unused_value	stmt.c	/^warn_if_unused_value (exp)$/;"	f
warn_implicit_int	c-decl.c	/^int warn_implicit_int;$/;"	v
warn_import	cccp.c	/^static int warn_import = 1;$/;"	v	file:
warn_inline	toplev.c	/^int warn_inline;$/;"	v
warn_larger_than	toplev.c	/^int warn_larger_than;$/;"	v
warn_long_long	c-decl.c	/^int warn_long_long = 1;$/;"	v
warn_main	c-decl.c	/^int warn_main;$/;"	v
warn_missing_braces	c-decl.c	/^int warn_missing_braces;$/;"	v
warn_missing_declarations	c-decl.c	/^int warn_missing_declarations;$/;"	v
warn_missing_noreturn	c-decl.c	/^int warn_missing_noreturn;$/;"	v
warn_missing_prototypes	c-decl.c	/^int warn_missing_prototypes;$/;"	v
warn_multichar	c-decl.c	/^int warn_multichar = 1;$/;"	v
warn_nested_externs	c-decl.c	/^int warn_nested_externs = 0;$/;"	v
warn_parentheses	c-decl.c	/^int warn_parentheses;$/;"	v
warn_pointer_arith	c-decl.c	/^int warn_pointer_arith;$/;"	v
warn_redundant_decls	c-decl.c	/^int warn_redundant_decls = 0;$/;"	v
warn_return_type	toplev.c	/^int warn_return_type;$/;"	v
warn_shadow	toplev.c	/^int warn_shadow;$/;"	v
warn_sign_compare	c-decl.c	/^int warn_sign_compare = -1;$/;"	v
warn_std	gcc.c	/^static int warn_std;$/;"	v	file:
warn_std_ptr	gcc.c	/^static int *warn_std_ptr = 0;$/;"	v	file:
warn_strict_prototypes	c-decl.c	/^int warn_strict_prototypes;$/;"	v
warn_stringify	cccp.c	/^static int warn_stringify;$/;"	v	file:
warn_switch	toplev.c	/^int warn_switch;$/;"	v
warn_traditional	c-decl.c	/^int warn_traditional;$/;"	v
warn_trigraphs	cccp.c	/^static int warn_trigraphs;$/;"	v	file:
warn_undef	cccp.c	/^static int warn_undef;$/;"	v	file:
warn_undef	cexp.c	/^static int warn_undef;$/;"	v	file:
warn_uninitialized	toplev.c	/^int warn_uninitialized;$/;"	v
warn_unknown_pragmas	c-decl.c	/^int warn_unknown_pragmas = 0; \/* Tri state variable.  *\/  $/;"	v
warn_unused	toplev.c	/^int warn_unused;$/;"	v
warning	cccp.c	/^warning VPROTO ((const char * msgid, ...))$/;"	f
warning	cexp.c	/^warning VPROTO ((char * msgid, ...))$/;"	f
warning	toplev.c	/^warning VPROTO((const char *msgid, ...))$/;"	f
warning_for_asm	toplev.c	/^warning_for_asm VPROTO((rtx insn, const char *msgid, ...))$/;"	f
warning_init	c-typeck.c	/^warning_init (msgid)$/;"	f	file:
warning_with_decl	toplev.c	/^warning_with_decl VPROTO((tree decl, const char *msgid, ...))$/;"	f
warning_with_file_and_line	toplev.c	/^warning_with_file_and_line VPROTO((const char *file, int line,$/;"	f
warning_with_line	cccp.c	/^warning_with_line VPROTO ((int line, const char * msgid, ...))$/;"	f	file:
warningcount	toplev.c	/^int warningcount = 0;$/;"	v
warnings	fix-header.c	/^int warnings = 0;$/;"	v
warnings_are_errors	cccp.c	/^static int warnings_are_errors;$/;"	v	file:
warnings_are_errors	toplev.c	/^int warnings_are_errors = 0;$/;"	v
wchar_array_type_node	c-decl.c	/^tree wchar_array_type_node;$/;"	v
wchar_type	cccp.c	/^char * wchar_type = WCHAR_TYPE;$/;"	v
wchar_type_node	c-decl.c	/^tree wchar_type_node;$/;"	v
weak_decls	varasm.c	/^struct weak_syms * weak_decls;$/;"	v
weak_finish	varasm.c	/^weak_finish ()$/;"	f
weak_global_object_name	varasm.c	/^char *weak_global_object_name;$/;"	v
what	reload.c	/^  int what;			\/* which reload this is for *\/$/;"	m	struct:replacement
where	combine.c	/^  union {rtx *r; int *i;} where;$/;"	m	struct:undo
where	reload.c	/^  rtx *where;			\/* Location to store in *\/$/;"	m	struct:replacement
which_alternative	recog.c	/^int which_alternative;$/;"	v
whitespace_cr	c-lex.c	/^whitespace_cr (c)$/;"	f	file:
widen_operand	optabs.c	/^widen_operand (op, mode, oldmode, unsignedp, no_extend)$/;"	f	file:
wipe_dead_reg	local-alloc.c	/^wipe_dead_reg (reg, output_p)$/;"	f	file:
with	regmove.c	/^  int with[MAX_RECOG_OPERANDS];$/;"	m	struct:match
word_mode	emit-rtl.c	/^enum machine_mode word_mode;	\/* Mode whose width is BITS_PER_WORD.  *\/$/;"	v
word_type	libgcc2.c	/^typedef int word_type __attribute__ ((mode (__word__)));$/;"	t	file:
wrapup_global_declarations	toplev.c	/^wrapup_global_declarations (vec, len)$/;"	f
write	libgcc2.c	4006;"	d	file:
write_attr_case	genattrtab.c	/^write_attr_case (attr, av, write_case_lines, prefix, suffix, indent,$/;"	f	file:
write_attr_get	genattrtab.c	/^write_attr_get (attr)$/;"	f	file:
write_attr_set	genattrtab.c	/^write_attr_set (attr, indent, value, prefix, suffix, known_true,$/;"	f	file:
write_attr_value	genattrtab.c	/^write_attr_value (attr, value)$/;"	f	file:
write_attr_valueq	genattrtab.c	/^write_attr_valueq (attr, s)$/;"	f	file:
write_c_file	collect2.c	/^write_c_file (stream, name)$/;"	f	file:
write_c_file_glob	collect2.c	/^write_c_file_glob (stream, name)$/;"	f	file:
write_c_file_stat	collect2.c	/^write_c_file_stat (stream, name)$/;"	f	file:
write_complex_function	genattrtab.c	/^write_complex_function (unit, name, connection)$/;"	f	file:
write_const_num_delay_slots	genattrtab.c	/^write_const_num_delay_slots ()$/;"	f
write_dependence_p	alias.c	/^write_dependence_p (mem, x, writep)$/;"	f	file:
write_eligible_delay	genattrtab.c	/^write_eligible_delay (kind)$/;"	f	file:
write_export_file	collect2.c	/^write_export_file (stream)$/;"	f	file:
write_expr_attr_cache	genattrtab.c	/^write_expr_attr_cache (p, attr)$/;"	f	file:
write_function_unit_info	genattrtab.c	/^write_function_unit_info ()$/;"	f	file:
write_import_file	collect2.c	/^write_import_file (stream)$/;"	f	file:
write_indent	genattrtab.c	/^write_indent (indent)$/;"	f	file:
write_lbrac	fix-header.c	/^write_lbrac ()$/;"	f
write_length_unit_log	genattrtab.c	/^write_length_unit_log ()$/;"	f	file:
write_list	collect2.c	/^write_list (stream, prefix, list)$/;"	f	file:
write_list_with_asm	collect2.c	/^write_list_with_asm (stream, prefix, list)$/;"	f	file:
write_modifier_bytes	dwarfout.c	/^write_modifier_bytes (type, decl_const, decl_volatile)$/;"	f	file:
write_modifier_bytes_1	dwarfout.c	/^write_modifier_bytes_1 (type, decl_const, decl_volatile, count)$/;"	f	file:
write_object	mips-tfile.c	/^write_object __proto((void))$/;"	f
write_output	cccp.c	/^write_output ()$/;"	f	file:
write_rbrac	fix-header.c	/^write_rbrac ()$/;"	f
write_subroutine	genrecog.c	/^write_subroutine (tree, type)$/;"	f	file:
write_symbols	toplev.c	/^enum debug_info_type write_symbols = NO_DEBUG;$/;"	v
write_test_expr	genattrtab.c	/^write_test_expr (exp, flags)$/;"	f	file:
write_toplevel_expr	genattrtab.c	/^write_toplevel_expr (p)$/;"	f	file:
write_tree	genrecog.c	/^write_tree (tree, prevpos, afterward, initial, type)$/;"	f	file:
write_tree_1	genrecog.c	/^write_tree_1 (tree, prevpos, afterward, type)$/;"	f	file:
write_unit_name	genattrtab.c	/^write_unit_name (prefix, num, suffix)$/;"	f	file:
write_units	genattr.c	/^write_units (num_units, multiplicity, simultaneity,$/;"	f	file:
write_upcase	genattr.c	/^write_upcase (str)$/;"	f	file:
write_upcase	genattrtab.c	/^write_upcase (str)$/;"	f	file:
write_varray	mips-tfile.c	/^write_varray (vp, offset, str)$/;"	f
written	protoize.c	/^  char			written;	\/* != 0 means written for implicit *\/$/;"	m	struct:def_dec_info_struct
wstring	real.c	/^static char wstring[80];	\/* working storage for ASCII output *\/$/;"	v	file:
x1	protoize.c	/^			 int x1, x2; } include_defaults[]$/;"	m	struct:default_include
x2	protoize.c	/^			 int x1, x2; } include_defaults[]$/;"	m	struct:default_include
x_kind	tree.c	/^  x_kind,$/;"	e	file:
xcalloc	cccp.c	/^xcalloc (number, size)$/;"	f
xcalloc	collect2.c	/^xcalloc (size1, size2)$/;"	f
xcalloc	cppalloc.c	/^xcalloc (number, size)$/;"	f
xcalloc	mips-tfile.c	/^xcalloc (size1, size2)$/;"	f
xcalloc	toplev.c	/^xcalloc (size1, size2)$/;"	f
xcoff_begin_function_line	xcoffout.c	/^static int xcoff_begin_function_line = -1;$/;"	v	file:
xcoff_bss_section_name	xcoffout.c	/^char *xcoff_bss_section_name;$/;"	v
xcoff_current_function_file	xcoffout.c	/^static char *xcoff_current_function_file;$/;"	v	file:
xcoff_current_include_file	xcoffout.c	/^char *xcoff_current_include_file;$/;"	v
xcoff_inlining	xcoffout.c	/^static int xcoff_inlining = 0;$/;"	v	file:
xcoff_lastfile	xcoffout.c	/^char *xcoff_lastfile;$/;"	v
xcoff_output_standard_types	xcoffout.c	/^xcoff_output_standard_types (syms)$/;"	f
xcoff_private_data_section_name	xcoffout.c	/^char *xcoff_private_data_section_name;$/;"	v
xcoff_read_only_section_name	xcoffout.c	/^char *xcoff_read_only_section_name;$/;"	v
xcoffout_begin_block	xcoffout.c	/^xcoffout_begin_block (file, line, n)$/;"	f
xcoffout_begin_function	xcoffout.c	/^xcoffout_begin_function (file, last_linenum)$/;"	f
xcoffout_block	xcoffout.c	/^xcoffout_block (block, depth, args)$/;"	f	file:
xcoffout_declare_function	xcoffout.c	/^xcoffout_declare_function (file, decl, name)$/;"	f
xcoffout_end_block	xcoffout.c	/^xcoffout_end_block (file, line, n)$/;"	f
xcoffout_end_epilogue	xcoffout.c	/^xcoffout_end_epilogue (file)$/;"	f
xcoffout_end_function	xcoffout.c	/^xcoffout_end_function (file, last_linenum)$/;"	f
xcoffout_source_file	xcoffout.c	/^xcoffout_source_file (file, filename, inline_p)$/;"	f
xcoffout_source_line	xcoffout.c	/^xcoffout_source_line (file, filename, note)$/;"	f
xfree	fix-header.c	/^xfree (ptr)$/;"	f
xfree	mips-tfile.c	/^xfree (ptr)$/;"	f
xfree	protoize.c	/^xfree (p)$/;"	f
xmalloc	cccp.c	/^xmalloc (size)$/;"	f
xmalloc	cexp.c	/^xmalloc (size)$/;"	f
xmalloc	collect2.c	/^xmalloc (size)$/;"	f
xmalloc	cppalloc.c	/^xmalloc (size)$/;"	f
xmalloc	enquire.c	/^char *xmalloc(size) unsigned size; {$/;"	f
xmalloc	gcc.c	/^xmalloc (size)$/;"	f
xmalloc	gcov.c	/^xmalloc (size)$/;"	f
xmalloc	genattr.c	/^xmalloc (size)$/;"	f
xmalloc	genattrtab.c	/^xmalloc (size)$/;"	f
xmalloc	gencheck.c	/^xmalloc (nbytes)$/;"	f
xmalloc	gencodes.c	/^xmalloc (size)$/;"	f
xmalloc	genconfig.c	/^xmalloc (size)$/;"	f
xmalloc	genemit.c	/^xmalloc (size)$/;"	f
xmalloc	genextract.c	/^xmalloc (size)$/;"	f
xmalloc	genflags.c	/^xmalloc (size)$/;"	f
xmalloc	gengenrtl.c	/^xmalloc (nbytes)$/;"	f
xmalloc	genopinit.c	/^xmalloc (size)$/;"	f
xmalloc	genoutput.c	/^xmalloc (size)$/;"	f
xmalloc	genpeep.c	/^xmalloc (size)$/;"	f
xmalloc	genrecog.c	/^xmalloc (size)$/;"	f
xmalloc	mips-tdump.c	/^xmalloc (size)$/;"	f
xmalloc	mips-tfile.c	/^xmalloc (size)$/;"	f
xmalloc	protoize.c	/^xmalloc (byte_count)$/;"	f
xmalloc	toplev.c	/^xmalloc (size)$/;"	f
xor_optab	optabs.c	/^optab xor_optab;$/;"	v
xrealloc	cccp.c	/^xrealloc (old, size)$/;"	f
xrealloc	collect2.c	/^xrealloc (old, size)$/;"	f
xrealloc	cppalloc.c	/^xrealloc (old, size)$/;"	f
xrealloc	gcc.c	/^xrealloc (old, size)$/;"	f
xrealloc	genattr.c	/^xrealloc (old, size)$/;"	f
xrealloc	genattrtab.c	/^xrealloc (old, size)$/;"	f
xrealloc	gencodes.c	/^xrealloc (old, size)$/;"	f
xrealloc	genconfig.c	/^xrealloc (old, size)$/;"	f
xrealloc	genemit.c	/^xrealloc (old, size)$/;"	f
xrealloc	genextract.c	/^xrealloc (old, size)$/;"	f
xrealloc	genflags.c	/^xrealloc (old, size)$/;"	f
xrealloc	genopinit.c	/^xrealloc (old, size)$/;"	f
xrealloc	genoutput.c	/^xrealloc (old, size)$/;"	f
xrealloc	genpeep.c	/^xrealloc (old, size)$/;"	f
xrealloc	genrecog.c	/^xrealloc (old, size)$/;"	f
xrealloc	mips-tfile.c	/^xrealloc (ptr, size)$/;"	f
xrealloc	protoize.c	/^xrealloc (old_space, byte_count)$/;"	f
xrealloc	toplev.c	/^xrealloc (ptr, size)$/;"	f
xref_tag	c-decl.c	/^xref_tag (code, name)$/;"	f
xspaces	print-rtl.c	/^static const char xspaces[] = "                                                                                                                                                                ";$/;"	v	file:
xstrdup	cccp.c	/^xstrdup (input)$/;"	f
xstrdup	collect2.c	/^xstrdup (input)$/;"	f
xstrdup	cppalloc.c	/^xstrdup (input)$/;"	f
xstrdup	genextract.c	/^xstrdup (input)$/;"	f
xstrdup	genrecog.c	/^xstrdup (input)$/;"	f
xstrdup	toplev.c	/^xstrdup (s)$/;"	f
xstrerror	gcc.c	/^xstrerror(e)$/;"	f
xstrerror	protoize.c	/^xstrerror(e)$/;"	f
yy_cur	c-common.c	/^unsigned char *yy_cur, *yy_lim;$/;"	v
yy_get_token	c-common.c	/^yy_get_token ()$/;"	f
yy_lim	c-common.c	/^unsigned char *yy_cur, *yy_lim;$/;"	v
yychar	c-parse.c	/^int	yychar;			\/*  the lookahead symbol		*\/$/;"	v
yychar	cexp.c	/^int	yychar;			\/*  the lookahead symbol		*\/$/;"	v
yycheck	c-parse.c	/^static const short yycheck[] = {    38,$/;"	v	file:
yycheck	cexp.c	/^static const short yycheck[] = {     4,$/;"	v	file:
yyclearin	c-parse.c	1273;"	d	file:
yyclearin	cexp.c	402;"	d	file:
yydebug	c-parse.c	/^int yydebug;			\/*  nonzero means print parse trace	*\/$/;"	v
yydebug	cexp.c	/^int yydebug;			\/*  nonzero means print parse trace	*\/$/;"	v
yydefact	c-parse.c	/^static const short yydefact[] = {     3,$/;"	v	file:
yydefact	cexp.c	/^static const short yydefact[] = {     0,$/;"	v	file:
yydefgoto	c-parse.c	/^static const short yydefgoto[] = {   694,$/;"	v	file:
yydefgoto	cexp.c	/^static const short yydefgoto[] = {    75,$/;"	v	file:
yyerrok	c-parse.c	1272;"	d	file:
yyerrok	cexp.c	401;"	d	file:
yyerror	c-lex.c	/^yyerror (msgid)$/;"	f
yyerror	cexp.c	/^yyerror VPROTO ((const char * msgid, ...))$/;"	f	file:
yylex	c-lex.c	/^yylex ()$/;"	f
yylex	cexp.c	/^yylex ()$/;"	f	file:
yylloc	c-parse.c	/^YYLTYPE yylloc;			\/*  location data for the lookahead	*\/$/;"	v
yylloc	cexp.c	/^YYLTYPE yylloc;			\/*  location data for the lookahead	*\/$/;"	v
yylval	c-parse.c	/^YYSTYPE	yylval;			\/*  the semantic value of the		*\/$/;"	v
yylval	cexp.c	/^YYSTYPE	yylval;			\/*  the semantic value of the		*\/$/;"	v
yynerrs	c-parse.c	/^int yynerrs;			\/*  number of parse errors so far       *\/$/;"	v
yynerrs	cexp.c	/^int yynerrs;			\/*  number of parse errors so far       *\/$/;"	v
yypact	c-parse.c	/^static const short yypact[] = {    97,$/;"	v	file:
yypact	cexp.c	/^static const short yypact[] = {    12,$/;"	v	file:
yyparse	c-parse.c	/^yyparse(YYPARSE_PARAM_ARG)$/;"	f
yyparse	cexp.c	/^yyparse(YYPARSE_PARAM_ARG)$/;"	f
yypgoto	c-parse.c	/^static const short yypgoto[] = {-32768,$/;"	v	file:
yypgoto	cexp.c	/^static const short yypgoto[] = {-32768,$/;"	v	file:
yyprhs	c-parse.c	/^static const short yyprhs[] = {     0,$/;"	v	file:
yyprhs	cexp.c	/^static const short yyprhs[] = {     0,$/;"	v	file:
yyprint	c-lex.c	/^yyprint (file, yychar, yylval)$/;"	f
yyr1	c-parse.c	/^static const short yyr1[] = {     0,$/;"	v	file:
yyr1	cexp.c	/^static const short yyr1[] = {     0,$/;"	v	file:
yyr2	c-parse.c	/^static const short yyr2[] = {     0,$/;"	v	file:
yyr2	cexp.c	/^static const short yyr2[] = {     0,$/;"	v	file:
yyrhs	c-parse.c	/^static const short yyrhs[] = {    -1,$/;"	v	file:
yyrhs	cexp.c	/^static const short yyrhs[] = {    35,$/;"	v	file:
yyrline	c-parse.c	/^static const short yyrline[] = { 0,$/;"	v	file:
yyrline	cexp.c	/^static const short yyrline[] = { 0,$/;"	v	file:
yytable	c-parse.c	/^static const short yytable[] = {    86,$/;"	v	file:
yytable	cexp.c	/^static const short yytable[] = {    12,$/;"	v	file:
yytname	c-parse.c	/^static const char * const yytname[] = {   "$","error","$undefined.","IDENTIFIER",$/;"	v	file:
yytname	cexp.c	/^static const char * const yytname[] = {   "$","error","$undefined.","INT","CHAR",$/;"	v	file:
yytranslate	c-parse.c	/^static const char yytranslate[] = {     0,$/;"	v	file:
yytranslate	cexp.c	/^static const char yytranslate[] = {     0,$/;"	v	file:
zero_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
zero_fn	genattrtab.c	/^zero_fn (exp)$/;"	f	file:
zero_word	libgcc2.c	/^  long zero_word;$/;"	m	struct:bb
zlen	c-common.c	/^  tree *zlen;$/;"	m	struct:
